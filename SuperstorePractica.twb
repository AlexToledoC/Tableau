<?xml version='1.0' encoding='utf-8' ?>

<!-- build 20214.22.0213.1102                               -->
<workbook original-version='18.1' source-build='2021.4.4 (20214.22.0213.1102)' source-platform='win' version='18.1' xmlns:user='http://www.tableausoftware.com/xml/user'>
  <document-format-change-manifest>
    <_.fcp.AccessibleZoneTabOrder.true...AccessibleZoneTabOrder />
    <_.fcp.AnimationOnByDefault.true...AnimationOnByDefault />
    <AutoCreateAndUpdateDSDPhoneLayouts />
    <IntuitiveSorting />
    <IntuitiveSorting_SP2 />
    <MapboxVectorStylesAndLayers />
    <_.fcp.MarkAnimation.true...MarkAnimation />
    <_.fcp.ObjectModelEncapsulateLegacy.true...ObjectModelEncapsulateLegacy />
    <_.fcp.ObjectModelTableType.true...ObjectModelTableType />
    <_.fcp.SchemaViewerObjectModel.true...SchemaViewerObjectModel />
    <SetMembershipControl />
    <SheetIdentifierTracking />
    <SortTagCleanup />
    <WindowsPersistSimpleIdentifiers />
  </document-format-change-manifest>
  <preferences>
    <preference name='ui.encoding.shelf.height' value='24' />
    <preference name='ui.shelf.height' value='26' />
  </preferences>
  <_.fcp.AnimationOnByDefault.false...style>
    <_.fcp.AnimationOnByDefault.false..._.fcp.MarkAnimation.true...style-rule element='animation'>
      <_.fcp.AnimationOnByDefault.false...format attr='animation-on' value='ao-on' />
    </_.fcp.AnimationOnByDefault.false..._.fcp.MarkAnimation.true...style-rule>
  </_.fcp.AnimationOnByDefault.false...style>
  <datasources>
    <datasource caption='Orders (sample-superstore_e340e444-40ba-4524-b014-ca5f29a1a5ba)' inline='true' name='federated.0jt5abg0nns7yn12tc2u00bgsxmf' version='18.1'>
      <connection class='federated'>
        <named-connections>
          <named-connection caption='sample-superstore_e340e444-40ba-4524-b014-ca5f29a1a5ba' name='excel-direct.10v41y30rhh9qr12c4bh10bpefd4'>
            <connection class='excel-direct' cleaning='no' compat='no' dataRefreshTime='' filename='C:/Users/aleja/Documents/Mi Repositorio de Tableau/Tableau/sample-superstore_e340e444-40ba-4524-b014-ca5f29a1a5ba.xls' interpretationMode='0' password='' server='' validate='no' />
          </named-connection>
        </named-connections>
        <_.fcp.ObjectModelEncapsulateLegacy.false...relation connection='excel-direct.10v41y30rhh9qr12c4bh10bpefd4' name='Orders' table='[Orders$]' type='table'>
          <columns gridOrigin='A1:U9995:no:A1:U9995:0' header='yes' outcome='6'>
            <column datatype='integer' name='Row ID' ordinal='0' />
            <column datatype='string' name='Order ID' ordinal='1' />
            <column datatype='date' name='Order Date' ordinal='2' />
            <column datatype='date' name='Ship Date' ordinal='3' />
            <column datatype='string' name='Ship Mode' ordinal='4' />
            <column datatype='string' name='Customer ID' ordinal='5' />
            <column datatype='string' name='Customer Name' ordinal='6' />
            <column datatype='string' name='Segment' ordinal='7' />
            <column datatype='string' name='Country' ordinal='8' />
            <column datatype='string' name='City' ordinal='9' />
            <column datatype='string' name='State' ordinal='10' />
            <column datatype='integer' name='Postal Code' ordinal='11' />
            <column datatype='string' name='Region' ordinal='12' />
            <column datatype='string' name='Product ID' ordinal='13' />
            <column datatype='string' name='Category' ordinal='14' />
            <column datatype='string' name='Sub-Category' ordinal='15' />
            <column datatype='string' name='Product Name' ordinal='16' />
            <column datatype='real' name='Sales' ordinal='17' />
            <column datatype='integer' name='Quantity' ordinal='18' />
            <column datatype='real' name='Discount' ordinal='19' />
            <column datatype='real' name='Profit' ordinal='20' />
          </columns>
        </_.fcp.ObjectModelEncapsulateLegacy.false...relation>
        <_.fcp.ObjectModelEncapsulateLegacy.true...relation connection='excel-direct.10v41y30rhh9qr12c4bh10bpefd4' name='Orders' table='[Orders$]' type='table'>
          <columns gridOrigin='A1:U9995:no:A1:U9995:0' header='yes' outcome='6'>
            <column datatype='integer' name='Row ID' ordinal='0' />
            <column datatype='string' name='Order ID' ordinal='1' />
            <column datatype='date' name='Order Date' ordinal='2' />
            <column datatype='date' name='Ship Date' ordinal='3' />
            <column datatype='string' name='Ship Mode' ordinal='4' />
            <column datatype='string' name='Customer ID' ordinal='5' />
            <column datatype='string' name='Customer Name' ordinal='6' />
            <column datatype='string' name='Segment' ordinal='7' />
            <column datatype='string' name='Country' ordinal='8' />
            <column datatype='string' name='City' ordinal='9' />
            <column datatype='string' name='State' ordinal='10' />
            <column datatype='integer' name='Postal Code' ordinal='11' />
            <column datatype='string' name='Region' ordinal='12' />
            <column datatype='string' name='Product ID' ordinal='13' />
            <column datatype='string' name='Category' ordinal='14' />
            <column datatype='string' name='Sub-Category' ordinal='15' />
            <column datatype='string' name='Product Name' ordinal='16' />
            <column datatype='real' name='Sales' ordinal='17' />
            <column datatype='integer' name='Quantity' ordinal='18' />
            <column datatype='real' name='Discount' ordinal='19' />
            <column datatype='real' name='Profit' ordinal='20' />
          </columns>
        </_.fcp.ObjectModelEncapsulateLegacy.true...relation>
        <metadata-records>
          <metadata-record class='capability'>
            <remote-name />
            <remote-type>0</remote-type>
            <parent-name>[Orders]</parent-name>
            <remote-alias />
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='integer' name='context'>0</attribute>
              <attribute datatype='string' name='gridOrigin'>&quot;A1:U9995:no:A1:U9995:0&quot;</attribute>
              <attribute datatype='boolean' name='header'>true</attribute>
              <attribute datatype='integer' name='outcome'>6</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Row ID</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Row ID]</local-name>
            <parent-name>[Orders]</parent-name>
            <remote-alias>Row ID</remote-alias>
            <ordinal>0</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Orders_E70903FA38324C7FB87437CF0625FFE2]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Order ID</remote-name>
            <remote-type>130</remote-type>
            <local-name>[Order ID]</local-name>
            <parent-name>[Orders]</parent-name>
            <remote-alias>Order ID</remote-alias>
            <ordinal>1</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LES_RMX_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Orders_E70903FA38324C7FB87437CF0625FFE2]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Order Date</remote-name>
            <remote-type>7</remote-type>
            <local-name>[Order Date]</local-name>
            <parent-name>[Orders]</parent-name>
            <remote-alias>Order Date</remote-alias>
            <ordinal>2</ordinal>
            <local-type>date</local-type>
            <aggregation>Year</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;DATE&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Orders_E70903FA38324C7FB87437CF0625FFE2]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Ship Date</remote-name>
            <remote-type>7</remote-type>
            <local-name>[Ship Date]</local-name>
            <parent-name>[Orders]</parent-name>
            <remote-alias>Ship Date</remote-alias>
            <ordinal>3</ordinal>
            <local-type>date</local-type>
            <aggregation>Year</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;DATE&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Orders_E70903FA38324C7FB87437CF0625FFE2]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Ship Mode</remote-name>
            <remote-type>130</remote-type>
            <local-name>[Ship Mode]</local-name>
            <parent-name>[Orders]</parent-name>
            <remote-alias>Ship Mode</remote-alias>
            <ordinal>4</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LES_RMX_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Orders_E70903FA38324C7FB87437CF0625FFE2]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Customer ID</remote-name>
            <remote-type>130</remote-type>
            <local-name>[Customer ID]</local-name>
            <parent-name>[Orders]</parent-name>
            <remote-alias>Customer ID</remote-alias>
            <ordinal>5</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LES_RMX_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Orders_E70903FA38324C7FB87437CF0625FFE2]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Customer Name</remote-name>
            <remote-type>130</remote-type>
            <local-name>[Customer Name]</local-name>
            <parent-name>[Orders]</parent-name>
            <remote-alias>Customer Name</remote-alias>
            <ordinal>6</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LES_RMX_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Orders_E70903FA38324C7FB87437CF0625FFE2]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Segment</remote-name>
            <remote-type>130</remote-type>
            <local-name>[Segment]</local-name>
            <parent-name>[Orders]</parent-name>
            <remote-alias>Segment</remote-alias>
            <ordinal>7</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LES_RMX_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Orders_E70903FA38324C7FB87437CF0625FFE2]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Country</remote-name>
            <remote-type>130</remote-type>
            <local-name>[Country]</local-name>
            <parent-name>[Orders]</parent-name>
            <remote-alias>Country</remote-alias>
            <ordinal>8</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LES_RMX_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Orders_E70903FA38324C7FB87437CF0625FFE2]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>City</remote-name>
            <remote-type>130</remote-type>
            <local-name>[City]</local-name>
            <parent-name>[Orders]</parent-name>
            <remote-alias>City</remote-alias>
            <ordinal>9</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LES_RMX_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Orders_E70903FA38324C7FB87437CF0625FFE2]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>State</remote-name>
            <remote-type>130</remote-type>
            <local-name>[State]</local-name>
            <parent-name>[Orders]</parent-name>
            <remote-alias>State</remote-alias>
            <ordinal>10</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LES_RMX_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Orders_E70903FA38324C7FB87437CF0625FFE2]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Postal Code</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Postal Code]</local-name>
            <parent-name>[Orders]</parent-name>
            <remote-alias>Postal Code</remote-alias>
            <ordinal>11</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Orders_E70903FA38324C7FB87437CF0625FFE2]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Region</remote-name>
            <remote-type>130</remote-type>
            <local-name>[Region]</local-name>
            <parent-name>[Orders]</parent-name>
            <remote-alias>Region</remote-alias>
            <ordinal>12</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LES_RMX_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Orders_E70903FA38324C7FB87437CF0625FFE2]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Product ID</remote-name>
            <remote-type>130</remote-type>
            <local-name>[Product ID]</local-name>
            <parent-name>[Orders]</parent-name>
            <remote-alias>Product ID</remote-alias>
            <ordinal>13</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LES_RMX_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Orders_E70903FA38324C7FB87437CF0625FFE2]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Category</remote-name>
            <remote-type>130</remote-type>
            <local-name>[Category]</local-name>
            <parent-name>[Orders]</parent-name>
            <remote-alias>Category</remote-alias>
            <ordinal>14</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LES_RMX_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Orders_E70903FA38324C7FB87437CF0625FFE2]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Sub-Category</remote-name>
            <remote-type>130</remote-type>
            <local-name>[Sub-Category]</local-name>
            <parent-name>[Orders]</parent-name>
            <remote-alias>Sub-Category</remote-alias>
            <ordinal>15</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LES_RMX_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Orders_E70903FA38324C7FB87437CF0625FFE2]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Product Name</remote-name>
            <remote-type>130</remote-type>
            <local-name>[Product Name]</local-name>
            <parent-name>[Orders]</parent-name>
            <remote-alias>Product Name</remote-alias>
            <ordinal>16</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LES_RMX_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Orders_E70903FA38324C7FB87437CF0625FFE2]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Sales</remote-name>
            <remote-type>5</remote-type>
            <local-name>[Sales]</local-name>
            <parent-name>[Orders]</parent-name>
            <remote-alias>Sales</remote-alias>
            <ordinal>17</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;R8&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Orders_E70903FA38324C7FB87437CF0625FFE2]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Quantity</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Quantity]</local-name>
            <parent-name>[Orders]</parent-name>
            <remote-alias>Quantity</remote-alias>
            <ordinal>18</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Orders_E70903FA38324C7FB87437CF0625FFE2]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Discount</remote-name>
            <remote-type>5</remote-type>
            <local-name>[Discount]</local-name>
            <parent-name>[Orders]</parent-name>
            <remote-alias>Discount</remote-alias>
            <ordinal>19</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;R8&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Orders_E70903FA38324C7FB87437CF0625FFE2]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Profit</remote-name>
            <remote-type>5</remote-type>
            <local-name>[Profit]</local-name>
            <parent-name>[Orders]</parent-name>
            <remote-alias>Profit</remote-alias>
            <ordinal>20</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;R8&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Orders_E70903FA38324C7FB87437CF0625FFE2]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
        </metadata-records>
      </connection>
      <aliases enabled='yes' />
      <column datatype='string' name='[Category]' role='dimension' type='nominal' />
      <column datatype='string' name='[City]' role='dimension' semantic-role='[City].[Name]' type='nominal' />
      <column datatype='string' name='[Country]' role='dimension' semantic-role='[Country].[ISO3166_2]' type='nominal' />
      <column aggregation='Sum' datatype='integer' default-format='*00000' name='[Postal Code]' role='dimension' semantic-role='[ZipCode].[Name]' type='ordinal' />
      <column datatype='integer' name='[Row ID]' role='dimension' type='ordinal' />
      <column datatype='string' name='[State]' role='dimension' semantic-role='[State].[Name]' type='nominal' />
      <_.fcp.ObjectModelTableType.true...column caption='Orders' datatype='table' name='[__tableau_internal_object_id__].[Orders_E70903FA38324C7FB87437CF0625FFE2]' role='measure' type='quantitative' />
      <column-instance column='[Category]' derivation='None' name='[none:Category:nk]' pivot='key' type='nominal' />
      <column-instance column='[City]' derivation='None' name='[none:City:nk]' pivot='key' type='nominal' />
      <column-instance column='[State]' derivation='None' name='[none:State:nk]' pivot='key' type='nominal' />
      <group caption='Acción (Category)' hidden='true' name='[Action (Category)]' name-style='unqualified' user:auto-column='sheet_link'>
        <groupfilter function='crossjoin'>
          <groupfilter function='level-members' level='[Category]' />
        </groupfilter>
      </group>
      <layout _.fcp.SchemaViewerObjectModel.false...dim-percentage='0.5' _.fcp.SchemaViewerObjectModel.false...measure-percentage='0.4' dim-ordering='alphabetic' measure-ordering='alphabetic' show-structure='true' />
      <style>
        <style-rule element='mark'>
          <encoding attr='color' field='[none:Category:nk]' type='palette'>
            <map to='#6388b4'>
              <bucket>&quot;Furniture&quot;</bucket>
            </map>
            <map to='#ef6f6a'>
              <bucket>&quot;Technology&quot;</bucket>
            </map>
            <map to='#ffae34'>
              <bucket>&quot;Office Supplies&quot;</bucket>
            </map>
          </encoding>
          <encoding attr='color' field='[none:State:nk]' type='palette'>
            <map to='#499894'>
              <bucket>&quot;Florida&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;New Jersey&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Wyoming&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Alabama&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Michigan&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Tennessee&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Colorado&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Montana&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Virginia&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Indiana&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;North Dakota&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Georgia&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;New Mexico&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Connecticut&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Nebraska&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Washington&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Maryland&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;South Carolina&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Arizona&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Minnesota&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Texas&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Louisiana&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Pennsylvania&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Delaware&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Nevada&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;West Virginia&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Iowa&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Ohio&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Kansas&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Oklahoma&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Maine&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Rhode Island&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Massachusetts&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;South Dakota&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Idaho&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;New York&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;District of Columbia&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;New Hampshire&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Wisconsin&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Arkansas&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Mississippi&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Utah&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Kentucky&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Oregon&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Illinois&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;North Carolina&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;California&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Missouri&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Vermont&quot;</bucket>
            </map>
          </encoding>
          <encoding attr='color' field='[none:City:nk]' type='palette'>
            <map to='#499894'>
              <bucket>&quot;Arvada&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Belleville&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Bristol&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Bryan&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Covington&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Eau Claire&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Elmhurst&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Eugene&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Everett&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Haltom City&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Hickory&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Jacksonville&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Jupiter&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Lawton&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Little Rock&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Louisville&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Oswego&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Pasco&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Pico Rivera&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Pine Bluff&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Portage&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Redlands&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Sacramento&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Sheboygan&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Sterling Heights&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Texas City&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Troy&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Atlantic City&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Avondale&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Baltimore&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Bridgeton&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Buffalo&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Carol Stream&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Cedar Hill&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Coachella&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Deer Park&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Fort Lauderdale&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Fremont&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Highland Park&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Kenosha&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Kent&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;La Crosse&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Lakewood&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Malden&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Manteca&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Medford&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Miramar&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Morgan Hill&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;New York City&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;North Charleston&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Torrance&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Tyler&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Vancouver&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Warwick&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Amarillo&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Apopka&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Cedar Rapids&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Champaign&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Chandler&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Chesapeake&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Chester&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Corpus Christi&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Edinburg&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Fresno&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Grand Rapids&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Hagerstown&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Hialeah&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Jamestown&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Loveland&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Minneapolis&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Monroe&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Naperville&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Philadelphia&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Pomona&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Pueblo&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Redding&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;San Angelo&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Santa Maria&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Springdale&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Warner Robins&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;York&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Arlington Heights&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Bossier City&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Clinton&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Dearborn&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Franklin&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Garden City&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Goldsboro&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Hampton&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Holland&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Irving&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Laredo&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;League City&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Lebanon&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Littleton&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Manchester&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Marysville&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Newark&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Niagara Falls&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Roswell&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Saginaw&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Salem&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Santa Barbara&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Thornton&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Trenton&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Vallejo&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;West Allis&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Ann Arbor&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Carrollton&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Coon Rapids&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Cottage Grove&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Denver&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;East Point&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;El Paso&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Elyria&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Grand Island&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Hackensack&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Hendersonville&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;La Porte&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Lake Forest&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Lakeland&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Mishawaka&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Murray&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Orange&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Peoria&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Renton&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Rogers&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;San Marcos&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Sierra Vista&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Springfield&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Toledo&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Washington&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Wilmington&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Woodbury&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Altoona&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Appleton&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Asheville&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Bolingbrook&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Bozeman&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Great Falls&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Hillsboro&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Hollywood&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Hoover&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Houston&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Linden&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Marietta&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Meridian&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Montgomery&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Oakland&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Olathe&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Palm Coast&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Paterson&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Providence&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Quincy&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Redondo Beach&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;San Luis Obispo&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Temecula&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Thomasville&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Vacaville&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Vineland&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Yonkers&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Allen&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Apple Valley&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Arlington&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Billings&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Boynton Beach&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Brentwood&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Cranston&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Danbury&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Englewood&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Gulfport&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Indianapolis&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Lindenhurst&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Macon&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Mansfield&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Mason&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Medina&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Meriden&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Milford&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;New Bedford&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Perth Amboy&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Revere&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Rockford&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Saint Cloud&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Saint Peters&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Tucson&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Woodstock&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Bedford&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Bullhead City&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Dover&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Fort Collins&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Glenview&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Independence&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Lake Elsinore&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Lehi&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Longview&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Los Angeles&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Mesquite&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Miami&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Missouri City&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Moorhead&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Noblesville&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Orland Park&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Park Ridge&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Parma&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Richmond&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Rio Rancho&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Saint Petersburg&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;San Clemente&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;San Jose&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Spokane&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Superior&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Whittier&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Wichita&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Allentown&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Boca Raton&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Burbank&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;College Station&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Cuyahoga Falls&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Decatur&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Harlingen&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Huntington Beach&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Iowa City&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Kirkwood&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;La Mesa&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Melbourne&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Middletown&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Midland&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Muskogee&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Norman&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;North Las Vegas&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Passaic&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Rochester Hills&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Salinas&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;San Antonio&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;San Bernardino&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;San Gabriel&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Skokie&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Tuscaloosa&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Watertown&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Albuquerque&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Antioch&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Camarillo&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Carlsbad&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Charlotte&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Chicago&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Colorado Springs&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Conroe&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Gastonia&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Glendale&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Greenwood&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Hamilton&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Jefferson City&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Lawrence&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Leominster&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Manhattan&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Memphis&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Moreno Valley&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Ormond Beach&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Plainfield&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Redwood City&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Reno&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Salt Lake City&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Tempe&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Urbandale&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Westfield&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Wheeling&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Chapel Hill&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Cheyenne&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Columbia&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Davis&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Des Moines&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Evanston&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Fort Worth&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Hempstead&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Hesperia&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Kissimmee&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Lakeville&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Lincoln Park&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Lodi&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Lubbock&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Marion&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Missoula&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Mount Vernon&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Olympia&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Owensboro&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Phoenix&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Port Saint Lucie&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Reading&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Santa Fe&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Tamarac&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;West Jordan&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Woonsocket&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Beverly&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Concord&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Conway&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Coppell&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Danville&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;East Orange&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Encinitas&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Freeport&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Garland&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Gilbert&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Grand Prairie&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Greeley&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Greenville&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Hot Springs&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Lafayette&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Las Cruces&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Mcallen&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Mobile&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Murrieta&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Oklahoma City&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Orlando&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Rock Hill&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Saint Paul&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Santa Ana&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Suffolk&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Tigard&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Athens&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Burlington&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Citrus Heights&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Cleveland&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Edmonds&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Elkhart&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Escondido&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Fairfield&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Farmington&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Frisco&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Laguna Niguel&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Mesa&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Montebello&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Mount Pleasant&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Normal&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Odessa&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Oxnard&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Pocatello&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Rockville&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Romeoville&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Smyrna&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Tampa&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Thousand Oaks&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Twin Falls&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Westland&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Yuma&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Aberdeen&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Auburn&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Broken Arrow&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Buffalo Grove&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Caldwell&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Chico&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Dallas&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Edmond&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Gladstone&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Grove City&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Huntsville&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Knoxville&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Lake Charles&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Mentor&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Morristown&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Omaha&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Pembroke Pines&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Pharr&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Pompano Beach&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Port Orange&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Rancho Cucamonga&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Saint Louis&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Sioux Falls&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Taylor&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Waterbury&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Waukesha&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Abilene&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Aurora&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Bellevue&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Cambridge&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Cincinnati&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Dearborn Heights&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Detroit&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Harrisonburg&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Las Vegas&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Maple Grove&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Margate&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Mission Viejo&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Nashua&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;New Albany&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Overland Park&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Plano&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Pleasant Grove&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Provo&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;San Mateo&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;South Bend&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Southaven&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Summerville&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Tallahassee&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;The Colony&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Tulsa&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Visalia&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Woodland&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Broomfield&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Cary&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Clarksville&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Clovis&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Commerce City&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Daytona Beach&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Deltona&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Eagan&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Florence&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Grapevine&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Jonesboro&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Long Beach&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Modesto&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;New Castle&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;New Rochelle&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Norfolk&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Norwich&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Parker&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Pensacola&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Raleigh&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Riverside&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Roseville&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Saint Charles&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;San Diego&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Scottsdale&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Sunnyvale&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Virginia Beach&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Anaheim&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Bethlehem&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Brownsville&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Coral Springs&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Costa Mesa&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Fargo&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Greensboro&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Helena&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Henderson&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Keller&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Kenner&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Lorain&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Murfreesboro&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Nashville&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Ontario&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Palatine&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Rapid City&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Redmond&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Rome&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Round Rock&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Sanford&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Seattle&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Tinley Park&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Utica&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Waynesboro&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Westminster&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Yucaipa&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Bakersfield&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Bangor&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Bayonne&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Baytown&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Beaumont&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Bloomington&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Bowling Green&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Chattanooga&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Coral Gables&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Delray Beach&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;El Cajon&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Frankfort&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Hattiesburg&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Holyoke&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Homestead&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Jackson&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Lancaster&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Madison&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Newport News&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Oak Park&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Pasadena&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Port Arthur&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Portland&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Sparks&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Waterloo&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Wilson&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Akron&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Alexandria&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Charlottesville&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Chula Vista&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Columbus&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Draper&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Durham&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Fayetteville&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Gaithersburg&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Georgetown&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Gresham&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Inglewood&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Johnson City&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Lansing&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Marlborough&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Milwaukee&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;New Brunswick&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Oceanside&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Pearland&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Plantation&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Royal Oak&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Shelton&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Stockton&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Waco&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Wausau&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;West Palm Beach&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Andover&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Atlanta&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Austin&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Bartlett&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Bellingham&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Boise&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Canton&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Clifton&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Des Plaines&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Dublin&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Dubuque&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Green Bay&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;La Quinta&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Laurel&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Layton&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Lewiston&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Logan&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Longmont&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Lowell&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;North Miami&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Orem&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Richardson&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Rochester&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;San Francisco&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Sandy Springs&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Santa Clara&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Texarkana&quot;</bucket>
            </map>
          </encoding>
        </style-rule>
      </style>
      <semantic-values>
        <semantic-value key='[Country].[Name]' value='&quot;Estados Unidos Mexicanos&quot;' />
      </semantic-values>
      <date-options start-of-week='monday' />
      <_.fcp.ObjectModelEncapsulateLegacy.true...object-graph>
        <objects>
          <object caption='Orders' id='Orders_E70903FA38324C7FB87437CF0625FFE2'>
            <properties context=''>
              <relation connection='excel-direct.10v41y30rhh9qr12c4bh10bpefd4' name='Orders' table='[Orders$]' type='table'>
                <columns gridOrigin='A1:U9995:no:A1:U9995:0' header='yes' outcome='6'>
                  <column datatype='integer' name='Row ID' ordinal='0' />
                  <column datatype='string' name='Order ID' ordinal='1' />
                  <column datatype='date' name='Order Date' ordinal='2' />
                  <column datatype='date' name='Ship Date' ordinal='3' />
                  <column datatype='string' name='Ship Mode' ordinal='4' />
                  <column datatype='string' name='Customer ID' ordinal='5' />
                  <column datatype='string' name='Customer Name' ordinal='6' />
                  <column datatype='string' name='Segment' ordinal='7' />
                  <column datatype='string' name='Country' ordinal='8' />
                  <column datatype='string' name='City' ordinal='9' />
                  <column datatype='string' name='State' ordinal='10' />
                  <column datatype='integer' name='Postal Code' ordinal='11' />
                  <column datatype='string' name='Region' ordinal='12' />
                  <column datatype='string' name='Product ID' ordinal='13' />
                  <column datatype='string' name='Category' ordinal='14' />
                  <column datatype='string' name='Sub-Category' ordinal='15' />
                  <column datatype='string' name='Product Name' ordinal='16' />
                  <column datatype='real' name='Sales' ordinal='17' />
                  <column datatype='integer' name='Quantity' ordinal='18' />
                  <column datatype='real' name='Discount' ordinal='19' />
                  <column datatype='real' name='Profit' ordinal='20' />
                </columns>
              </relation>
            </properties>
          </object>
        </objects>
      </_.fcp.ObjectModelEncapsulateLegacy.true...object-graph>
    </datasource>
  </datasources>
  <mapsources>
    <mapsource name='Tableau' />
  </mapsources>
  <actions>
    <action caption='FiltroCategory' name='[Action1_5D62134F8A5D489095C2411C11E4B481]'>
      <activation type='on-select' />
      <source dashboard='Dashboard 1' type='sheet'>
        <exclude-sheet name='Sales by state' />
        <exclude-sheet name='Top cities in sales' />
      </source>
      <command command='tsc:tsl-filter'>
        <param name='exclude' value='Ventas por categoría (profits),Venta por categoría (quantity)' />
        <param name='special-fields' value='all' />
        <param name='target' value='Dashboard 1' />
      </command>
    </action>
  </actions>
  <worksheets>
    <worksheet name='Cities by sales'>
      <layout-options>
        <title>
          <formatted-text>
            <run>&lt;</run>
            <run>Sheet Name</run>
            <run>&gt;</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='Orders (sample-superstore_e340e444-40ba-4524-b014-ca5f29a1a5ba)' name='federated.0jt5abg0nns7yn12tc2u00bgsxmf' />
          </datasources>
          <mapsources>
            <mapsource name='Tableau' />
          </mapsources>
          <datasource-dependencies datasource='federated.0jt5abg0nns7yn12tc2u00bgsxmf'>
            <column datatype='string' name='[City]' role='dimension' semantic-role='[City].[Name]' type='nominal' />
            <column datatype='string' name='[Country]' role='dimension' semantic-role='[Country].[ISO3166_2]' type='nominal' />
            <column datatype='real' name='[Sales]' role='measure' type='quantitative' />
            <column datatype='string' name='[State]' role='dimension' semantic-role='[State].[Name]' type='nominal' />
            <column-instance column='[City]' derivation='None' name='[none:City:nk]' pivot='key' type='nominal' />
            <column-instance column='[Country]' derivation='None' name='[none:Country:nk]' pivot='key' type='nominal' />
            <column-instance column='[State]' derivation='None' name='[none:State:nk]' pivot='key' type='nominal' />
            <column-instance column='[Sales]' derivation='Sum' name='[sum:Sales:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <encoding attr='space' class='0' field='[federated.0jt5abg0nns7yn12tc2u00bgsxmf].[Longitude (generated)]' field-type='quantitative' max='-5325560.3943387158' min='-15688133.251098005' projection='EPSG:3857' range-type='fixed' scope='cols' type='space' />
            <encoding attr='space' class='0' field='[federated.0jt5abg0nns7yn12tc2u00bgsxmf].[Latitude (generated)]' field-type='quantitative' max='7598521.782058334' min='1505954.0165889042' projection='EPSG:3857' range-type='fixed' scope='rows' type='space' />
          </style-rule>
          <style-rule element='mark'>
            <encoding attr='size-bar' field='[federated.0jt5abg0nns7yn12tc2u00bgsxmf].[sum:Sales:qk]' field-type='quantitative' max-size='1' min-size='0.005' type='centersize' />
          </style-rule>
          <style-rule element='worksheet'>
            <format attr='display-field-labels' scope='cols' value='false' />
          </style-rule>
          <style-rule element='map'>
            <format attr='washout' value='0.0' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <mark-sizing mark-sizing-setting='marks-scaling-off' />
            <encodings>
              <color column='[federated.0jt5abg0nns7yn12tc2u00bgsxmf].[none:State:nk]' />
              <size column='[federated.0jt5abg0nns7yn12tc2u00bgsxmf].[sum:Sales:qk]' />
              <text column='[federated.0jt5abg0nns7yn12tc2u00bgsxmf].[sum:Sales:qk]' />
              <lod column='[federated.0jt5abg0nns7yn12tc2u00bgsxmf].[none:State:nk]' />
              <lod column='[federated.0jt5abg0nns7yn12tc2u00bgsxmf].[none:Country:nk]' />
              <lod column='[federated.0jt5abg0nns7yn12tc2u00bgsxmf].[none:City:nk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='size' value='2.2872927188873291' />
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-cull' value='false' />
                <format attr='mark-labels-mode' value='range' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.0jt5abg0nns7yn12tc2u00bgsxmf].[Latitude (generated)]</rows>
        <cols>[federated.0jt5abg0nns7yn12tc2u00bgsxmf].[Longitude (generated)]</cols>
      </table>
      <simple-id uuid='{9985B381-48EC-48A2-AE34-A79381E44BB4}' />
    </worksheet>
    <worksheet name='Sales by state'>
      <layout-options>
        <title>
          <formatted-text>
            <run>&lt;</run>
            <run>Sheet Name</run>
            <run>&gt;</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='Orders (sample-superstore_e340e444-40ba-4524-b014-ca5f29a1a5ba)' name='federated.0jt5abg0nns7yn12tc2u00bgsxmf' />
          </datasources>
          <mapsources>
            <mapsource name='Tableau' />
          </mapsources>
          <datasource-dependencies datasource='federated.0jt5abg0nns7yn12tc2u00bgsxmf'>
            <column datatype='string' name='[Category]' role='dimension' type='nominal' />
            <column datatype='string' name='[Country]' role='dimension' semantic-role='[Country].[ISO3166_2]' type='nominal' />
            <column datatype='real' name='[Sales]' role='measure' type='quantitative' />
            <column datatype='string' name='[State]' role='dimension' semantic-role='[State].[Name]' type='nominal' />
            <column-instance column='[Country]' derivation='None' name='[none:Country:nk]' pivot='key' type='nominal' />
            <column-instance column='[State]' derivation='None' name='[none:State:nk]' pivot='key' type='nominal' />
            <column-instance column='[Sales]' derivation='Sum' name='[sum:Sales:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.0jt5abg0nns7yn12tc2u00bgsxmf].[Action (Category)]'>
            <groupfilter function='member' level='[Category]' member='&quot;Office Supplies&quot;' user:ui-action-filter='[Action1_5D62134F8A5D489095C2411C11E4B481]' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <slices>
            <column>[federated.0jt5abg0nns7yn12tc2u00bgsxmf].[Action (Category)]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <encoding attr='space' class='0' field='[federated.0jt5abg0nns7yn12tc2u00bgsxmf].[Longitude (generated)]' field-type='quantitative' max='-7573417.5411648778' min='-14107691.219445491' projection='EPSG:3857' range-type='fixed' scope='cols' type='space' />
            <encoding attr='space' class='0' field='[federated.0jt5abg0nns7yn12tc2u00bgsxmf].[Latitude (generated)]' field-type='quantitative' max='7188969.2917184234' min='1676182.5801221235' projection='EPSG:3857' range-type='fixed' scope='rows' type='space' />
          </style-rule>
          <style-rule element='mark'>
            <encoding attr='size-bar' field='[federated.0jt5abg0nns7yn12tc2u00bgsxmf].[sum:Sales:qk]' field-type='quantitative' max-size='1' min-size='0.005' type='centersize' />
          </style-rule>
          <style-rule element='worksheet'>
            <format attr='display-field-labels' scope='cols' value='false' />
          </style-rule>
          <style-rule element='map'>
            <format attr='washout' value='0.0' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <mark-sizing mark-sizing-setting='marks-scaling-off' />
            <encodings>
              <color column='[federated.0jt5abg0nns7yn12tc2u00bgsxmf].[none:State:nk]' />
              <size column='[federated.0jt5abg0nns7yn12tc2u00bgsxmf].[sum:Sales:qk]' />
              <text column='[federated.0jt5abg0nns7yn12tc2u00bgsxmf].[sum:Sales:qk]' />
              <lod column='[federated.0jt5abg0nns7yn12tc2u00bgsxmf].[none:State:nk]' />
              <lod column='[federated.0jt5abg0nns7yn12tc2u00bgsxmf].[none:Country:nk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='size' value='2.2872927188873291' />
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-cull' value='false' />
                <format attr='mark-labels-mode' value='range' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.0jt5abg0nns7yn12tc2u00bgsxmf].[Latitude (generated)]</rows>
        <cols>[federated.0jt5abg0nns7yn12tc2u00bgsxmf].[Longitude (generated)]</cols>
      </table>
      <simple-id uuid='{06717563-0F41-4AAF-BD9B-5990962BAD58}' />
    </worksheet>
    <worksheet name='Sales per ship mode'>
      <table>
        <view>
          <datasources>
            <datasource caption='Orders (sample-superstore_e340e444-40ba-4524-b014-ca5f29a1a5ba)' name='federated.0jt5abg0nns7yn12tc2u00bgsxmf' />
          </datasources>
          <datasource-dependencies datasource='federated.0jt5abg0nns7yn12tc2u00bgsxmf'>
            <column datatype='real' name='[Profit]' role='measure' type='quantitative' />
            <column datatype='integer' name='[Quantity]' role='measure' type='quantitative' />
            <column datatype='real' name='[Sales]' role='measure' type='quantitative' />
            <column datatype='string' name='[Ship Mode]' role='dimension' type='nominal' />
            <column-instance column='[Ship Mode]' derivation='None' name='[none:Ship Mode:nk]' pivot='key' type='nominal' />
            <column-instance column='[Profit]' derivation='Sum' name='[sum:Profit:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Quantity]' derivation='Sum' name='[sum:Quantity:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Sales]' derivation='Sum' name='[sum:Sales:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <shelf-sorts>
            <shelf-sort-v2 dimension-to-sort='[federated.0jt5abg0nns7yn12tc2u00bgsxmf].[none:Ship Mode:nk]' direction='DESC' is-on-innermost-dimension='true' measure-to-sort-by='[federated.0jt5abg0nns7yn12tc2u00bgsxmf].[sum:Quantity:qk]' shelf='columns' />
          </shelf-sorts>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='mark'>
            <encoding attr='size-bar' field='[federated.0jt5abg0nns7yn12tc2u00bgsxmf].[sum:Sales:qk]' field-type='quantitative' max-size='1' min-size='0.005' type='centersize' />
          </style-rule>
          <style-rule element='worksheet'>
            <format attr='display-field-labels' scope='cols' value='false' />
          </style-rule>
        </style>
        <panes>
          <pane id='2' selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.0jt5abg0nns7yn12tc2u00bgsxmf].[none:Ship Mode:nk]' />
              <size column='[federated.0jt5abg0nns7yn12tc2u00bgsxmf].[sum:Profit:qk]' />
              <text column='[federated.0jt5abg0nns7yn12tc2u00bgsxmf].[sum:Sales:qk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-cull' value='true' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.0jt5abg0nns7yn12tc2u00bgsxmf].[sum:Sales:qk]</rows>
        <cols>[federated.0jt5abg0nns7yn12tc2u00bgsxmf].[none:Ship Mode:nk]</cols>
      </table>
      <simple-id uuid='{A8ADAE07-1A35-40A8-9009-34B98C4A6FA7}' />
    </worksheet>
    <worksheet name='Top cities in sales'>
      <table>
        <view>
          <datasources>
            <datasource caption='Orders (sample-superstore_e340e444-40ba-4524-b014-ca5f29a1a5ba)' name='federated.0jt5abg0nns7yn12tc2u00bgsxmf' />
          </datasources>
          <datasource-dependencies datasource='federated.0jt5abg0nns7yn12tc2u00bgsxmf'>
            <column datatype='string' name='[Category]' role='dimension' type='nominal' />
            <column datatype='string' name='[City]' role='dimension' semantic-role='[City].[Name]' type='nominal' />
            <column datatype='real' name='[Sales]' role='measure' type='quantitative' />
            <column-instance column='[City]' derivation='None' name='[none:City:nk]' pivot='key' type='nominal' />
            <column-instance column='[Sales]' derivation='Sum' name='[sum:Sales:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.0jt5abg0nns7yn12tc2u00bgsxmf].[Action (Category)]'>
            <groupfilter function='member' level='[Category]' member='&quot;Office Supplies&quot;' user:ui-action-filter='[Action1_5D62134F8A5D489095C2411C11E4B481]' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <computed-sort column='[federated.0jt5abg0nns7yn12tc2u00bgsxmf].[none:City:nk]' direction='DESC' using='[federated.0jt5abg0nns7yn12tc2u00bgsxmf].[sum:Sales:qk]' />
          <slices>
            <column>[federated.0jt5abg0nns7yn12tc2u00bgsxmf].[Action (Category)]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='mark'>
            <encoding attr='size-bar' field='[federated.0jt5abg0nns7yn12tc2u00bgsxmf].[sum:Sales:qk]' field-type='quantitative' max-size='1' min-size='0.005' type='centersize' />
          </style-rule>
          <style-rule element='worksheet'>
            <format attr='display-field-labels' scope='cols' value='false' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Circle' />
            <encodings>
              <color column='[federated.0jt5abg0nns7yn12tc2u00bgsxmf].[none:City:nk]' />
              <size column='[federated.0jt5abg0nns7yn12tc2u00bgsxmf].[sum:Sales:qk]' />
              <text column='[federated.0jt5abg0nns7yn12tc2u00bgsxmf].[none:City:nk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-cull' value='true' />
                <format attr='mark-labels-line-first' value='true' />
                <format attr='mark-labels-line-last' value='true' />
                <format attr='mark-labels-range-min' value='true' />
                <format attr='mark-labels-range-max' value='true' />
                <format attr='mark-labels-mode' value='all' />
                <format attr='mark-labels-range-scope' value='pane' />
                <format attr='mark-labels-range-field' value='' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows />
        <cols />
      </table>
      <simple-id uuid='{B2E2518B-A2D9-4F07-97F7-BBDEE34FFDF7}' />
    </worksheet>
    <worksheet name='Venta por categoría (quantity)'>
      <table>
        <view>
          <datasources>
            <datasource caption='Orders (sample-superstore_e340e444-40ba-4524-b014-ca5f29a1a5ba)' name='federated.0jt5abg0nns7yn12tc2u00bgsxmf' />
          </datasources>
          <datasource-dependencies datasource='federated.0jt5abg0nns7yn12tc2u00bgsxmf'>
            <column datatype='string' name='[Category]' role='dimension' type='nominal' />
            <column datatype='integer' name='[Quantity]' role='measure' type='quantitative' />
            <column-instance column='[Category]' derivation='None' name='[none:Category:nk]' pivot='key' type='nominal' />
            <column-instance column='[Quantity]' derivation='Sum' name='[sum:Quantity:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <shelf-sorts>
            <shelf-sort-v2 dimension-to-sort='[federated.0jt5abg0nns7yn12tc2u00bgsxmf].[none:Category:nk]' direction='DESC' is-on-innermost-dimension='true' measure-to-sort-by='[federated.0jt5abg0nns7yn12tc2u00bgsxmf].[sum:Quantity:qk]' shelf='columns' />
          </shelf-sorts>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <encoding attr='space' class='0' field='[federated.0jt5abg0nns7yn12tc2u00bgsxmf].[sum:Quantity:qk]' field-type='quantitative' max='150000' min='0' range-type='fixed' scope='rows' type='space' />
          </style-rule>
          <style-rule element='cell'>
            <format attr='width' field='[federated.0jt5abg0nns7yn12tc2u00bgsxmf].[none:Category:nk]' value='98' />
          </style-rule>
          <style-rule element='worksheet'>
            <format attr='display-field-labels' scope='cols' value='false' />
          </style-rule>
        </style>
        <panes>
          <pane id='2' selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.0jt5abg0nns7yn12tc2u00bgsxmf].[none:Category:nk]' />
              <text column='[federated.0jt5abg0nns7yn12tc2u00bgsxmf].[sum:Quantity:qk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-cull' value='true' />
              </style-rule>
              <style-rule element='pane'>
                <format attr='minwidth' value='-1' />
                <format attr='maxwidth' value='-1' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.0jt5abg0nns7yn12tc2u00bgsxmf].[sum:Quantity:qk]</rows>
        <cols>[federated.0jt5abg0nns7yn12tc2u00bgsxmf].[none:Category:nk]</cols>
      </table>
      <simple-id uuid='{63840F93-4124-4098-9E65-BD5C4049DE6C}' />
    </worksheet>
    <worksheet name='Ventas por categoría (profits)'>
      <table>
        <view>
          <datasources>
            <datasource caption='Orders (sample-superstore_e340e444-40ba-4524-b014-ca5f29a1a5ba)' name='federated.0jt5abg0nns7yn12tc2u00bgsxmf' />
          </datasources>
          <datasource-dependencies datasource='federated.0jt5abg0nns7yn12tc2u00bgsxmf'>
            <column datatype='string' name='[Category]' role='dimension' type='nominal' />
            <column datatype='real' name='[Profit]' role='measure' type='quantitative' />
            <column-instance column='[Category]' derivation='None' name='[none:Category:nk]' pivot='key' type='nominal' />
            <column-instance column='[Profit]' derivation='Sum' name='[sum:Profit:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <shelf-sorts>
            <shelf-sort-v2 dimension-to-sort='[federated.0jt5abg0nns7yn12tc2u00bgsxmf].[none:Category:nk]' direction='DESC' is-on-innermost-dimension='true' measure-to-sort-by='[federated.0jt5abg0nns7yn12tc2u00bgsxmf].[sum:Profit:qk]' shelf='columns' />
          </shelf-sorts>
          <aggregation value='true' />
        </view>
        <style />
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.0jt5abg0nns7yn12tc2u00bgsxmf].[none:Category:nk]' />
              <text column='[federated.0jt5abg0nns7yn12tc2u00bgsxmf].[sum:Profit:qk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-cull' value='true' />
                <format attr='mark-labels-show' value='true' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.0jt5abg0nns7yn12tc2u00bgsxmf].[sum:Profit:qk]</rows>
        <cols>[federated.0jt5abg0nns7yn12tc2u00bgsxmf].[none:Category:nk]</cols>
      </table>
      <simple-id uuid='{57579428-C058-4FD9-8C9B-8E8199FC81A2}' />
    </worksheet>
  </worksheets>
  <dashboards>
    <dashboard _.fcp.AccessibleZoneTabOrder.true...enable-sort-zone-taborder='true' name='Dashboard 1'>
      <style />
      <size sizing-mode='automatic' />
      <zones>
        <zone h='100000' id='4' type-v2='layout-basic' w='100000' x='0' y='0'>
          <zone h='97298' id='26' param='horz' type-v2='layout-flow' w='98614' x='693' y='1351'>
            <zone h='97298' id='7' param='horz' type-v2='layout-flow' w='98614' x='693' y='1351'>
              <zone h='97298' id='5' type-v2='layout-basic' w='98614' x='693' y='1351'>
                <zone h='48649' id='12' name='Sales by state' w='49307' x='693' y='1351'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                  </zone-style>
                </zone>
                <zone h='48649' id='17' name='Venta por categoría (quantity)' w='49306' x='50001' y='50000'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                  </zone-style>
                </zone>
                <zone h='48649' id='24' name='Ventas por categoría (profits)' w='49308' x='693' y='50000'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                  </zone-style>
                </zone>
                <zone h='48649' id='28' name='Top cities in sales' w='49307' x='50000' y='1351'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                  </zone-style>
                </zone>
              </zone>
            </zone>
          </zone>
          <zone-style>
            <format attr='border-color' value='#000000' />
            <format attr='border-style' value='none' />
            <format attr='border-width' value='0' />
            <format attr='margin' value='8' />
          </zone-style>
        </zone>
      </zones>
      <devicelayouts>
        <devicelayout auto-generated='true' name='Phone'>
          <size maxheight='1200' minheight='1200' sizing-mode='vscroll' />
          <zones>
            <zone h='100000' id='36' type-v2='layout-basic' w='100000' x='0' y='0'>
              <zone h='97298' id='35' param='vert' type-v2='layout-flow' w='98614' x='693' y='1351'>
                <zone fixed-size='280' h='48649' id='12' is-fixed='true' name='Sales by state' w='49307' x='693' y='1351'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone fixed-size='280' h='48649' id='28' is-fixed='true' name='Top cities in sales' w='49307' x='50000' y='1351'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone fixed-size='280' h='48649' id='24' is-fixed='true' name='Ventas por categoría (profits)' w='49308' x='693' y='50000'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone fixed-size='280' h='48649' id='17' is-fixed='true' name='Venta por categoría (quantity)' w='49306' x='50001' y='50000'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
              </zone>
              <zone-style>
                <format attr='border-color' value='#000000' />
                <format attr='border-style' value='none' />
                <format attr='border-width' value='0' />
                <format attr='margin' value='8' />
              </zone-style>
            </zone>
          </zones>
        </devicelayout>
      </devicelayouts>
      <simple-id uuid='{AA0826CB-41C3-4A71-A676-77E37D340BE9}' />
    </dashboard>
  </dashboards>
  <windows source-height='30'>
    <window class='worksheet' name='Ventas por categoría (profits)'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='175'>
            <card pane-specification-id='0' param='[federated.0jt5abg0nns7yn12tc2u00bgsxmf].[none:Category:nk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.0jt5abg0nns7yn12tc2u00bgsxmf].[none:Category:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{272FB4F4-9912-4DF4-A537-F22E2B8EFDE0}' />
    </window>
    <window class='worksheet' name='Venta por categoría (quantity)'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='175'>
            <card pane-specification-id='2' param='[federated.0jt5abg0nns7yn12tc2u00bgsxmf].[none:Category:nk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.0jt5abg0nns7yn12tc2u00bgsxmf].[none:Category:nk]</field>
            <field>[federated.0jt5abg0nns7yn12tc2u00bgsxmf].[sum:Sales:qk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{82EC1A88-34B3-4CBF-B142-23523AA086E8}' />
    </window>
    <window class='worksheet' name='Sales per ship mode'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='175'>
            <card pane-specification-id='2' param='[federated.0jt5abg0nns7yn12tc2u00bgsxmf].[none:Ship Mode:nk]' type='color' />
            <card pane-specification-id='2' param='[federated.0jt5abg0nns7yn12tc2u00bgsxmf].[sum:Profit:qk]' type='size' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.0jt5abg0nns7yn12tc2u00bgsxmf].[none:Category:nk]</field>
            <field>[federated.0jt5abg0nns7yn12tc2u00bgsxmf].[none:Region:nk]</field>
            <field>[federated.0jt5abg0nns7yn12tc2u00bgsxmf].[none:Ship Mode:nk]</field>
            <field>[federated.0jt5abg0nns7yn12tc2u00bgsxmf].[sum:Sales:qk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{1109F14F-360D-420B-9E23-A96678BA4FC6}' />
    </window>
    <window class='worksheet' name='Top cities in sales'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='175'>
            <card pane-specification-id='0' param='[federated.0jt5abg0nns7yn12tc2u00bgsxmf].[none:City:nk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.0jt5abg0nns7yn12tc2u00bgsxmf].[none:Category:nk]</field>
            <field>[federated.0jt5abg0nns7yn12tc2u00bgsxmf].[none:City:nk]</field>
            <field>[federated.0jt5abg0nns7yn12tc2u00bgsxmf].[none:Region:nk]</field>
            <field>[federated.0jt5abg0nns7yn12tc2u00bgsxmf].[none:Ship Mode:nk]</field>
            <field>[federated.0jt5abg0nns7yn12tc2u00bgsxmf].[sum:Sales:qk]</field>
            <field>[federated.0jt5abg0nns7yn12tc2u00bgsxmf].[yr:Order Date:ok]</field>
            <field>[federated.0jt5abg0nns7yn12tc2u00bgsxmf].[yr:Ship Date:ok]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{B1A17CB4-DABF-4088-ABFE-6611C3CCD3A7}' />
    </window>
    <window class='worksheet' name='Sales by state'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='175'>
            <card pane-specification-id='0' param='[federated.0jt5abg0nns7yn12tc2u00bgsxmf].[sum:Sales:qk]' type='size' />
            <card pane-specification-id='0' param='[federated.0jt5abg0nns7yn12tc2u00bgsxmf].[none:State:nk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.0jt5abg0nns7yn12tc2u00bgsxmf].[none:Category:nk]</field>
            <field>[federated.0jt5abg0nns7yn12tc2u00bgsxmf].[none:City:nk]</field>
            <field>[federated.0jt5abg0nns7yn12tc2u00bgsxmf].[none:Country:nk]</field>
            <field>[federated.0jt5abg0nns7yn12tc2u00bgsxmf].[none:Region:nk]</field>
            <field>[federated.0jt5abg0nns7yn12tc2u00bgsxmf].[none:Ship Mode:nk]</field>
            <field>[federated.0jt5abg0nns7yn12tc2u00bgsxmf].[none:State:nk]</field>
            <field>[federated.0jt5abg0nns7yn12tc2u00bgsxmf].[sum:Sales:qk]</field>
            <field>[federated.0jt5abg0nns7yn12tc2u00bgsxmf].[yr:Order Date:ok]</field>
            <field>[federated.0jt5abg0nns7yn12tc2u00bgsxmf].[yr:Ship Date:ok]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{8A783FAB-AC0C-4194-9EB2-5D30FC7C91A2}' />
    </window>
    <window class='worksheet' name='Cities by sales'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='175'>
            <card pane-specification-id='0' param='[federated.0jt5abg0nns7yn12tc2u00bgsxmf].[sum:Sales:qk]' type='size' />
            <card pane-specification-id='0' param='[federated.0jt5abg0nns7yn12tc2u00bgsxmf].[none:State:nk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.0jt5abg0nns7yn12tc2u00bgsxmf].[none:Category:nk]</field>
            <field>[federated.0jt5abg0nns7yn12tc2u00bgsxmf].[none:City:nk]</field>
            <field>[federated.0jt5abg0nns7yn12tc2u00bgsxmf].[none:Country:nk]</field>
            <field>[federated.0jt5abg0nns7yn12tc2u00bgsxmf].[none:Region:nk]</field>
            <field>[federated.0jt5abg0nns7yn12tc2u00bgsxmf].[none:Ship Mode:nk]</field>
            <field>[federated.0jt5abg0nns7yn12tc2u00bgsxmf].[none:State:nk]</field>
            <field>[federated.0jt5abg0nns7yn12tc2u00bgsxmf].[sum:Sales:qk]</field>
            <field>[federated.0jt5abg0nns7yn12tc2u00bgsxmf].[yr:Order Date:ok]</field>
            <field>[federated.0jt5abg0nns7yn12tc2u00bgsxmf].[yr:Ship Date:ok]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{640390C2-95DC-4776-97C7-3B6B15E07E0B}' />
    </window>
    <window class='dashboard' maximized='true' name='Dashboard 1'>
      <viewpoints>
        <viewpoint name='Sales by state'>
          <zoom type='entire-view' />
          <default-map-tool-selection tool='1' />
        </viewpoint>
        <viewpoint name='Top cities in sales' />
        <viewpoint name='Venta por categoría (quantity)'>
          <zoom type='entire-view' />
        </viewpoint>
        <viewpoint name='Ventas por categoría (profits)'>
          <zoom type='entire-view' />
          <selection-collection>
            <tuple-selection>
              <tuple-reference>
                <tuple-descriptor>
                  <pane-descriptor>
                    <x-fields>
                      <field>[federated.0jt5abg0nns7yn12tc2u00bgsxmf].[none:Category:nk]</field>
                    </x-fields>
                    <y-fields>
                      <field>[federated.0jt5abg0nns7yn12tc2u00bgsxmf].[sum:Profit:qk]</field>
                    </y-fields>
                  </pane-descriptor>
                  <columns>
                    <field>[federated.0jt5abg0nns7yn12tc2u00bgsxmf].[none:Category:nk]</field>
                    <field>[federated.0jt5abg0nns7yn12tc2u00bgsxmf].[sum:Profit:qk]</field>
                  </columns>
                </tuple-descriptor>
                <tuple>
                  <value>&quot;Office Supplies&quot;</value>
                  <value>122490.8008000001</value>
                </tuple>
              </tuple-reference>
            </tuple-selection>
          </selection-collection>
        </viewpoint>
      </viewpoints>
      <active id='12' />
      <simple-id uuid='{8AA8C7E4-457B-405E-A4D1-2DAD9E6EDF6A}' />
    </window>
  </windows>
  <thumbnails>
    <thumbnail height='192' name='Cities by sales' width='192'>
      iVBORw0KGgoAAAANSUhEUgAAAMAAAADACAYAAABS3GwHAAAACXBIWXMAAA7DAAAOwwHHb6hk
      AAAgAElEQVR4nO29WZAl13km9p1zcr1r7UsvAJogmlhIACIJgoskkhLFsYOkxtJoxiOPbCtk
      hWO8hGPCYT9YfrAdtkIPfhg/+MGeGYdj7FHM2JaX2TSyNJ6RuJMCQYgUSCwNgN3oruqu6lrv
      lus5frj1nzo3b2bevFXVjW7U/SIqqurezJMnM///nH//2e7urnIcB/cCUkoAQJIkCIIAnHN4
      noc4jpGmKRhjSNNUH88YQxzH2NrawvLyMlzX1WPkgTEGpVTud0opKKXAGIMQApxz/V2aprAs
      Sx9HczTHYozp8ZVSI+dPuufsnLLzzI5F15gEzjmiKIJlWXp+eeOXjWueVwVJkuhn9SBCKTXy
      PovgeR5s2x67d8txHNTr9XsyOSklpJSI41gTPQDUajUkSYJ+vz92juM4WFlZwe7uLtbX18EY
      00xgTt58kdkXbR5HD4gxhlqthiiKwDlHmqaa6IUQI2OYhAUMGYaOKSOePGKj31UIvAroZdNc
      OOeVxp6G6M1zyhagBwFhGMLzvInHxXEMy7Lgui6EEJp+7ilr00rHGIPruuj3++j3+6jX63pl
      FkIgDMOR8w4ODrCwsDDymbmim59ljyn6PEkSTfBRFI282OwulGUspVQuE2aRXV2zf9O8piWq
      ojEnjTXtap/FJIZ/rzEYDOB5nn4GZbt0mqbodrvo9XpwXRe+78OyrHvLAAQidCKCKIr0lpT3
      AknkMFdkk7jzmGDSKquUQr/fh+M4E4nYPCePmYqYsIzgzmoXMMcoIlCTWU9LwGe1c501wjCE
      4zhTz08phSAIEAQBbNtGNcH2lEjTFEopmLoG7QomAxDBWZaFKIpGxuCcF75Qc4Uug1IKYRhq
      GbroGPPHRPacvGPNObqui1qthnq9jnq9DiHExDlOQpb5sjrHWRPsgygCRVGUK89Pe+9xHN97
      BiBRBzh+mHEcIwxDPWHzZpRS8H0fBwcHuWNNWtWqrHqkB9DxJrJEnSXsSTqAeQ6JXYPBQK9Y
      VcYBRrdzc8wiZdeE+Szz4LouXNeFbdulcwCg9af3EtlnSoth2XFVcd9EIMdxwDmHEAJBECCO
      Y9TrdTQaDcRxDMdx0Ov1AAC7u7tYWloCcCw6THqpeXJymYWIjssemxVVylbXMh2EVuc4jsfm
      VTQ/U+yb5kVOunfz3izLgu/7AIYLQdb6lYWpH72XoGeapils255o/QPGn3ce7jkD0MWFEEiS
      BL7vI01TSCm1FSNNU73i0fbmuq4eI7saZsfPu8GsGTMLun7RGFkCyiNMkzGLLFLZMcsUWvOz
      ItHDtPyUEW4RI5PIFMextsKVKbu+7488q/cCdC+0UFZdHKoo8fdFByAxyLIsxHGMRqMxYlb0
      PE8ryXt7e7h8+XLpWFmUEUMecU8i1qyNncyBRDxlDDHp5eQpzUTU2etWuXfzutmx8/wNSZLg
      8PAQvV4vV4eoes1pUGUMzrnWlbLzZowhDEO4rjvyrKpg0vu4bx4O2n5JATVXeEKtVsOVK1dG
      zKLmaldm8aHvywg++3eR8noSoi5TmKswZ9nOZt5X0a6W3fbz5kLH3C+xZhrmIZ2k0+mM7X6D
      wUCLbdmxq+wGZTvBfXXxlVlBOOfwfV97jYFx82eWwIsUwqqrp0lMpq5xVtt9llFNIq5iwcju
      BrQYFJ1v3kveWFnmMZ8jiTl541bxtOahqqhiWRaEEOh2u2PMSSt/HvIWwmkYA7jPDDAJ5vaW
      XeUmKbTmGCeByQRnNV52nKyYk2WOPGbJomg+ecp8GYpEyex3efPKHp839jRKvJQS3W537PMk
      SbRoXISiZ1kV95UB0jRFHMdjNlzzZXPOta5gwlyhs1BKVQ4JKELey8+uuNOOT+eWyfc0Zlax
      LVvhi5Dd0SYdMy2m2bmmZYC8z6SUmBSnVsSQVZngvjLAYDBAt9vVRK6UQqvVGtlee71eLgMA
      xWZL8/tpkRWzsmOVEW2VsctW2qLxzf+r7ILTooxAs8yT1T8mjXOShSIPYRiOyf1lOKnoel8Z
      gFYe8gxnoxpppczGBgHlBCKE0E6dKIpyieakVgOllDbNlh2XN1+TuIuIquicvPlXuYeqUatV
      YQaOlcGyLNRqNW1VCsMQSZJUukZWPwmCYCriPw3uKwM4jqPNn2QWNcHY0DqUxwDmMURA5BDh
      nCOOY0gp9Qszd5Aia08ZzONt29aBV+YYVcyoNNZJdQlTtCsKB5l2xZ1mtcyKVCTSkV+HQL4b
      ei6e5+Hw8DB3Jy+6BjFOkdJ7L3DfrUCu62IwGCCO47EbpYfHOYdt2wiCQD9w0zpAL5xCXJMk
      0d8nSQLHccZWozJiLbPAAMd6ySRLijm/PAX3pEyQ3UloEcleN2/u5pwmXYNk8ez9UTg4MDRX
      UljxYDDQzjTy9NMORExQhQHoeCmlZqL7hfvOALVaDWEYFprdiCkodoaSQEyYRCulHFmJKPyA
      PjNf6jQw5yWEgJQSg8FgJJ78pGOfBcxnUIVgpiEq83445wjDUIuASZKgVqvpnZHEz6y1hjGm
      d/wqfgdilLMW4SbhvptBOedwHAdxHGvZ2vQPUNYYiUdpmuoVPG+1JkYyV62yB34SoqFdybIs
      rcS3Wq0xIixjhNPsAEXjnZSppzX10k5K74pCV4QQ8H1fLwa0U5g6HeWBlCFJEr2znTUmGS/u
      K7uROEMrCK3UeS/Esiz9kEnWpxeR3TmmJayqxJO1fliWhWazCcdx0O/3x0STonmUiSsnwWnN
      mCSq0E+Z1Sd7j0TwhDiO0ev10O12xxKN6P2Vgd5/XnjzWWDSu7m/+w2OiduU//PswLQi5G2J
      RUyQ9+JMFCmRZYSbdy2yTZvf5RFT0XinwTRj0LwmKb3mfeY560wGJl8OhZRzzsfE0KwIVQQy
      XpB4NY1yXhVZ/0n2//fEE0y7AD0cMzI071jGhgFzZg5BERFM2hlOKgtnRRzf98diVLKEUza/
      k7zo7Jjm88t+lnfNSePmzV1KqX02SZKM+HGyDN/v9/XnNB6FORSJpfda5s97D+b93vcdgGDK
      +pNWtUajgVqtBs/z7qm4Q7/zzIxZZmCMaceeqdCXJWtkrzUtina4SXJuGbLWqzxLkHlPtAtk
      /S3AsThE4e4AtJ5Q5fplx2R/8o7Ji9YtgrY4Trz6PYJpT46iqHCFIFHIsizU6/XCh1lGuJMe
      iEm82XPN/7NjLyws6AC+KqLGJHk0D/RizVW+SPw7CcqYtmy+ZBbO+myiKEIQBCOMVJZ5VmXe
      Vd9j9tgqx71nDAAcE3eV+j+kTJVZeIrEqDxkiYqQfdjmqkLXMP8nPYV2gqwsnZ3fvUIZIZ/k
      /Oxuk2fmNH8TpJQIgkBb7yahCqFOe07evIrOfc+jQUlOrBJuS2a1rNJljkXHZXWFvFWhKrGY
      Y5hOKHP+nHMEQTAipmWZZRoTbHae98PXQExgmmyVGoYm5GViFS04lPNN+oPjOPA8T4e5Z8fI
      omgFz3sO0xgF8o57zxkAqE4QjDFtLjs8PKw0TpX0wezxQPGDNdMDTUKh1XN/fx+tVqvUejUN
      TqM0nwRVFHkAOvTEcRw4jqP1AtqhKb/btm3NBKYRg1B1hZ9WfJykhxHeUxFoWtADIJm7SlGo
      MlPgWZoliRja7faIj+A0Y57F/E6DSUQXBIGen+u6uemMADRjVI3xOa31rujY3AWy8qgPAIiY
      Pc8bscXnHZf9ISY4jZxcNi9T3Gk0Guh0OiPfEaZR4h4EJqA55T23OI4RBAH6/b725mZBO4MQ
      orIVL/u+yvS60xgAgIeMAQDoB0JbrUkgWTNYHiMAow84K6Obim8eyuz7ND7tBkU5DWUEXSQS
      vFdMYCrAJkFmxaQwDLWIaoJERqovlE1wmWQ1qzrHvN296Djz2IeOAQim0pxHxPQ3gJEXR1ab
      7M5gjlWGqi+MolRJHKoiV5fhvWSCvGed3Z3I9m/uBPTMlRoWO+OcjxkvplFgy55B9hlPOo52
      lYeKAZRSOmmeMYZWqwXf93WsUB4jZC02k7bMrNiUZxosg/k95TacFYO9VwzgOM5IRG6ZeEaF
      j837MD39Wb2tyipfVRQ031lVc/hDxwCHh4fodDrodrs6joTqbpoijCnGVCWcPHEp+13eOdn/
      zYffbrext7c3Zj2aNIdJuF87AomS5m5aNL8kSeC6LprNZu4xZBbNjp+HPLH1LAPm6LoPFQMw
      xvSKDwxjTzqdzog1woTJAFm5ftJKm9UnipipChG2Wq2RHIVJuF8mz0mg+84mJOXtjsCxtYdM
      n1lMkyaplBopmJaXQXgWeCD8ANOAHDK0JadpOhJvnhVXss6nSQpoFYLOOorM8fPA2DCYbzAY
      6OSa01ov7hdonlX6I9DCQcFyJrEHQYDBYJA7fhHiOIbneXrcKp5lAjFoEcMRbTxUDEArD4k9
      VN7PhEmQFKcTx/HUK3dWqcqT44u+L4LpZS1jnGkUw3vJROZiYhJSmcWFiNys9wocO8ameQ9m
      FyGTCSdBCIFGowHGGLrdbikTPFQiEHAcelCr1dBsNgsTLsjkRgkc5oOustJPUrzM76qYNkkv
      ycttnhb3Wv7P06Oq7FhkpMjGa02ri5nIe26T4DiOFsPK2icxdo9bJN0rkExI4dQHBwe61Iop
      +lC8fqPR0D3BptlGq778qi+4qnUie70iM+/9AimvtApnn7OJKiJhFhQLlhcqcRKQr6EKwz50
      OwDBVIxarZa2EJg3HYbhsAuIYY8+rchwmhdEK6t5D9Nes+icMtPkSWD6SOhZZ78/q+vUajX4
      vn9m5VBMn0SR2KQV/DO54nsEejG2baNWq+W2PhoMBtozS4k17Xa7sp24iOCq7ApZAqGgsdM4
      xcpk6LMk/qIdqMwcnOdYnITd3V0cHBwgSZJC69G0CMNQ5ygXiU50Pw+lCGTCFIeoWFOv19Oc
      L6VEp9PRegMl1Ni2rZXjMktRVZt83rF5n1OZF1rtss0nyhTMsvmYK7L5+6ytTXSdsxrbsizs
      7e2h3W4jTdMzKd1OIShRFE2c30PPAMDxdm3WoaGUPdIN4jhGp9NBu93G9vY2tre3sby8DOFz
      MMlxZ+POmII6rYhiWdaYjJzXY6vIRGt+n7eSk1lv2jzasvuoGi6eZ/qddvysOML5sCkGmbUn
      Nes4CWzbHmOskQWu2+2qe9Uo+70APWjKSMqaSqmE397eHnrOAf7l3d/HRf9RvDj3WVjKntgz
      i66RdwxVpSPGA0Z7JWvvoxGIZx5j/l1GZNN2bpwUTdnv9yfW4szuMFUNBCSL54k2tHBR5Kzv
      +2fKANR0g4otm+ZwKqD2vmMAAjFBv9/XzeCAoY04EgF+cPCneLv/OkI5zFJyuYdV9yKeb72I
      NlsolR2LXhLJseZqV0R8WTc//W1msxX5CKYlkqy/IityZRlgUp9hUwQqmqc5frfbRa1WK9RX
      0jTF3bt3ta7muq7uF7CwsDB1CARjTPuKAIykcxIjR1GEg4OD94cIlAdaZaMowu7uLhqNBjzP
      w1a8gT/e/n30097I8aEMcGPwFjaCG3hh7mfwhPc0kqRcHj2pMjtJVzhr51aW8Mr0jCrHTmPq
      LNOvCEIIrK6uQimFTqeDJEmwvr6OOI6xsbGBVqul671OAhlEzNIt2UVIKaVNr+9bBgCGD31u
      bg5KDbvEB6KPP9n5Z2PEbyJRMb6z98doLDexyi9NFDemNQeaq2peeEGZ7nFWVp48Jf+0TFx2
      3DRjNxoNAMee5EceeQRvvPGGDiq8cOECAGBnZ0dX6TPnQ3Fi169fR5qmaLVauHDhwggTkOHE
      dd33NwOYylejUcc3Dv45eul4K54sJCRe2v8GvrT8V4AM/eeJBdPkHReJFFlCLFt5T4u8FV8p
      pfMlyJqWd81pLT9ZUSmPIcjBlgcpJa5evQpgaN25desWgGGA4cbGBlzXRZqmaDQa2pkWBAEu
      X76sG66//vrrWFtbw9zc3Iio6Xne+5sBTNt0ylL8pH+t8rn78S52ki0ssBU9Vp7HlzEGWAqp
      SiBSoY8zq0TkzWuSqZXmDUBbsrIwCfQsKqyRtSxJEjQaDV0R+yzGLSL8POtQEWzbxqVLl/Q4
      rVYLwGjhLs45Ll68qD+bn59Hq9XC5uYm7ty5g8cff1zrFEKI9zcDAEP5stls4lbnOhJVrVY9
      AChI7MbbWHLXSmV0IQS+vv9H2I238cW5Xxr5znGcEQtIVhErw+3eBv6X7/8dXGhdwl/9yL8F
      hnsfOWoyODWlBvJLME4D3/cRBMGYp3eaXS3vWFJ0yfxdtDMJIXDp0iXEcYxr166h1WphbW3t
      fDAAcXqqpnewJHJy7LqUEh9ufRSDtA9IBhgRA0IIBEEwMQnEXCFp13p16we4eXgDd/tb+OIH
      v4RFd6nw/k6LPCIkPwoplGb7Wh1GUHHXoep/2WtWFa/yjq3X66jVaoUWItpZ6JlSxMCTTz6J
      vb09vPHGG1hfXz8fDMA5R8NuTX1uw2pV8gk0MYeWmEcQB1B8VL4WQujMtbKxTCaQUuJjFz6B
      n+y9jfXmRSzVlqHS8XPPylqUNw7F3xPh5s19mryGrKJfBUU7BHWUL1r1ycY/GAy0s82cx8LC
      Aubm5nDr1q33PwMAwxWo5cxh3l7CXny30jkO97DsrEEm8lTytVnJjgoBk3yaZ2+nl9602vh3
      PvrvQymFJE5yj6PPTotJjDnp3CpzqJoKaX6fpyf5vq/7S2T9EeSANMNh2u127vicc1y+fPnh
      DoarCsaGuQHPtj5eWZZ+vPYh1NCoPL75kwWJEPRCI0S41Xu3tHlEttUTkB8WfRaWodMy0aQ5
      CCFw/c4eJDvZeiuEgOdw+L6r8zuoMh2JOfS8oihCp9NBFEWwLEuHQRTN8VzsAABgWzaeaD6N
      reg2ftx5pfTYFWcdH219GjKVUxEHrUZ5ZlHf99HpdIbJGr6Fml3L9cwqLhGmAXxeP7FZdVpk
      V1pzda16ftk8lFJo1nwwpqDksdVq0jVoTMcWEFt/C2i8gJC/qEMams0mgKGVbDAY6PB3QpIk
      2NvbA2MMjUZDV6wwF49zwwCMMUAxfLz5Gfi8hh8evoRYZZrvgeOD9afwsdangYQBbDySk3EG
      mY4GbREB1H0fEqN9y8xjWq3WMFY9kmjb82ORoAAQyhB3B9t4pNEoVRLP0ltcZIaleZ/kfBNS
      SrRrNphMYY5Wdg1zzDRVEK3PQNkXEByFt5uJUFRuJTuOqb/0er2RjkNUxv19GwuUBbnZKTE9
      YiFuDN7CXnQXEhItaw4XvUfRZHO6/U+W4HbkFr5/8C18fvFL4Omo+GJZFqJ/+vtwv/wlbUHJ
      MxtGUQTf90v7nRU5hqZ1QlUB5xy9Xk/HAuWFDRTZ76eZFyWn5BkDTFk+796DIEC9Xi/sJxcE
      gfYAZ6t3Z4/VVsGjWK9zswMAGHEsdXGImmjgg62ntSwpE4lIjVs9xl4uG9/C0zSF+Ff+wkjE
      YZ69f5JCnafYmd/lzqdgDDp20vFlFpo8gqNKz9PMi4guT8SqMr+iUGmlVG7lCOoTbTITXdPc
      ec8VA5gpcgv2EpjNEUdxbuSn+VJIwfJlA1+Y/4sIegF60XiXSHpBZaHFVOpjEky/QJkYIoRA
      L+miJuqlDT/Me8oSnFl5IXvNvOtT7H62T3KZSEMWGnKGZRkhOyf6n/oMmH6H7H3SdxTKQSIP
      PR9z16FjGGPv/1ggE9mtXCmABSE8cEjHRT8MtLXAtm39krXL/Ch6UCkF13ULu9pQ4r3ruoWr
      P4Vql6X/EVHsx3uo2w0IKfTnwDGBcM7xyuZL+OlHPj/RU1ukrJqZclVAUZamc8u0guUxQBAE
      ubufeV6oBBx2vBiRfJ9XUDdvpzLvjRiNfAEUHUqF1YgRzg0DmLAsC34ngn1zF0wB6Vwd6YWm
      tiDQSpUllux2mgfbLk6qoe230+nk5r+aL5Ze6CDuwxUuhOFiNpkgjmN85vLnKldcK8I05lS6
      bh6DJ4c7sFsLSOXod5P6AwwZOcbzKzZcwZCCQTABIdLMwjV5tzHh+z7CMESj0YDv+9qMSj/n
      kgGUUlCcg4FB+jbihZpe/WmloOPM31VgOrzyrttsNofmN8tCr9cbEYeyK5uUEuu1i7mKqPn/
      NBWXi8IGpgF5tvPCG7jrQ4EBGB2TKuMV7TRSSvzUig1bMPzZtsRWT8K3GZ5dttEU6Yi4lTUa
      TLpfYlbXdcfyA84lAwBA2vIweGodKRSitLiYUx7KMqYoKyyLrEXJ7G9QpqiWiTXTEm6RF3la
      yxL5OnLnY3u5c55ULUIpBYeleGsfuNkZnh+FCj/YTvDpdQsUl05519nyMkIIWAKIEzXm+KLO
      Ndnrnys/AHD84m3G4b25hfhCGwO7vPPkpPGyq5H5u9SSBOgmGnniFiEIgtzGfKaymrcKmt+V
      zbvI5FoEUh7JojMtE07CYTQ6Xj9WSDEsYSiEgD34HpSzhpCvjdyHZXGIw69CNn52bIHyPA+N
      jF+FlPJzxQC6VAqAZKmB1LUgk1FF7jQg93uZWdEErUpBEOSKBt1uVzeYm2TbLvKqTrLrZys/
      l4FMoMC42HVWWK1xbHSPGXLB47AgIXF0L/0fgkGCuesjhJ4kErLxs1qPo/umRt2U92wuTmEY
      nh8GUEppWTBOE8iWAynzY0Sqrmyj3spUO3qKrp/HYLZto9vtai+lWc7F8zzs7u6OJZQXzaXq
      nPP0iSqRnUoNk8nJ7n4SH0UZlFK42OCIUgtv7CWY9zieXxEIg/6xCLP8G0c+m2TkugBGStCQ
      LicGryLoPwHFRnMGlBqWzjw3DEAgBdSOJJTgUIZXEABcy4ZIJAKe78ktIjJTls9TnssIpF6v
      o9/vw/M83Uiuik9h0rhFKGICCs4rYyRaOc9a9CHINMVjLY61ug1XACodNt0gX8WkZ0vPwWZ9
      8L3/D2i8AAUxEgYBHGfZnYtoUOB46xdCwDsI4b95B/61bXgsU/MSAJP5L7escBOV88jrljhp
      ZWWMjcW3m78nEVsZExTtcNljGGNA2AOXk8Whk2aGVYWSEi5LwZREoGzsRsNy52EY6sVqovcY
      KZAcQokmUjl8P3SOlFKXTTw3DJD1WkIBTMqhR+wISikESYyBle9tJELO644CQJc8NL/P/pRh
      2uOz85sGeaZEbntgJSHa7wXu9CXeOhiKNpQH4GAHljU6z+z9J6yNdPnfRoL8EvrnKhbIlP+V
      UghaDtSVJSiLI2T5mU5ZTCJGpRQcxwG/fh3gAnJ3F/y5Z0+lLE5D1KdhAEKsAF6w+01CWYwT
      5xxJZw+u41Xa0QhKKVxpcTzWspAkQ+XWtm2wcA/cWi4tOkZ6FGMMIngNcdKE6z4zZqE7FwxA
      sTyEOEmQuGyoBCflpso8FMnQAMDqDYAzcJlmK6pUHssc77QoM8XSbjbtblN0naIxGGPo3ngD
      /vIFsLnVwv7J5nzzTL2kqCfJOurW+NPN02E451C1p2EbIpCJ9z0DkIWDHropB06KJ8lD2fdR
      FIEvzA+Pm5+HqlBUK8+PUGTSnDSnSQp6lTFOijI9REqJuac+jlRKMH66Zndm421TtLEtQOz9
      38NjFv4ikpTBZj2w3f8XSAdI5r+A1HlSX1v/PvFMHhLQylGlNVEVIphkIclzSE06jxjBCgIo
      IRCfQA4/zY4Rx3FpemZV0I6SNQUrpaDAMAjCSuUNJ4E6UY5cN7wG1vkOAIDXPgzLfxJs6x+C
      9X84PCjeQuD9DTRaKzrAjnP+/mcAYLSw1CTir7JaTkKeWa7Q8nIEIQSCv/e74EtLEL/0r02l
      O5yFuHTaeyYkSYIoinTOgBACjuOcaYtTysUwczKUcxnKfRQAoNzLwwPT/eOT0j5kEo489xt3
      ++eDAcrCcE1v4lnats3dII8JsgQnpYT7lS8Djov4DJpE5M2n6NrUVO4sEcexrvNJLVJPWl2D
      AYDxrjzPQ5qmONzbQbM9Dy4EUvjA+n9wJB5JQErw9ufAb/4/EPs1cKwg5bvoow63NSx3k6Ty
      fDBA9oVzzuEJG0wpDJCUyq8nuVaRk0lsb4PNz4+JOEoNuyuy5WX9/73ApNikswQloVAsjpQS
      29vbuiFGVTDGEPS6YELAcY+tSLZl4c7NdyGEBccfilV134f75htgUiJ44irsu234b3wELD4K
      PLz1Xcg33kDwiU/CXl3F1Ytz58MPYFmWdjLp1VgpMKlKxZRpUfZiRZJi8Lf/JyQvf38kdsfc
      Ke4V4b8XMH0mwHDRWVhYGAuhngSlFLx6A653nLPMGIMC8KHnPgqvXh+2v/J91F7+U7iv/xju
      G6/BuXUT/ivf18QPDHcScbAP77vfRtDrIY7j87UDmK1UuywdEYGA4lIdk0x8dHwURYUV4BTn
      cH7zN6BaLYRBkGuSJFA+ATX5Pmvx7H6BCeCN/qu46j+j46R2dnawvLw8lTf52Hkpsb2xgZWL
      l3XSkRCWjpjt/dTH4c29DUgJsXMXLM3Xo8TBPvj2Nvj8/PlgAGCYIpfXNC1bNz7PakMJIHkw
      iZNk3lxmYQzp4uKQwY6ImiwvZgwRYwzu4DbALQTOYmFyzcMAphiu+E+MzL/ZbOqo2dxzAERR
      CMf1xr27SYJ6szWyIJke/kQp9B67MuwU/82vl84t2LqDW93O+WAAxlhuEVWT8Oh/8zvgWH6f
      1GdrmrmY4hhjwxBjz/N0WyDYHoDpwyHuJUxHlAmqyZPFcCcFhLKgoMA4Q192Ua810E96sLgY
      FhPOXOPOzRvY2riJZz72IljmmXt+DZvbW6i3jssddrtdtNvtETFSSgnllhceePPWTXz1x6+d
      HwagxPYi8yKJPoWZTmcIM66IMTaMTrVtOI4Dx3HQ6RxFot6jlZ9ChadJBHr33Xd1Uvny8rJ+
      JltbW1hZWdH/U0ro1tYWms2mtvv3ZRf/bOv3MO8sYju8jUVnBT+/9BUgHc2dWFq7gEarDSEE
      ZM4OsHrpEUgpcXBwoMujZ9+PlBLRY1dg37wxjPfKIK03cPVzn8flT//0+VCCCQUn3o8AACAA
      SURBVHlpj1Vac5bJ6yeBqSByznXpDyqY5Sb7IyJCXpDcaX72oxD/+R/9ATZ73REDQHZe5n0m
      SQLf9+F5Hq5du4YbN25gd3cX169fx87ODm7fvo3XX38dURTh2rVr2NragpQSr732Gn70ox+B
      hRw/s/AXMEh7COQAd8Jb6CaHY+8DjMFvNJEc5VdkjQVm3kWtVit04IXz8wg+8hyU8RwVhsTf
      /8SLkFzAfb93iDFxGkXyrM2HeUo21QtKkgTs5rchnviKzi8+PDzMHYfKr0wDxhi8eg2feuRR
      NB0Xh4eHiKJIh4qY8jWZMEl8tG0btm1jbm4Oh4eHqNVqWF1d1aXG6/U6AjXA2gdWMdgJ0O12
      sbS0dFTG8BCO4+MjrRfwysG3sepeRNNqI69tQ16svwnaieh7mrPZYVNKif5jV5AsLMK+vQEe
      hIjqNbyTpJB7+7jQGNYVPRcMQBaVLBhjcG0BzhQG0XGV4aIYnSphDVVgrrY0Xu/ILGfbNtit
      7wJPfGVo7z7qa5wHzrluZTQNHMfBl64+ObSKHdXazxubc45ut6sdZdvb2yMNM6gh+dbWFgaD
      AWq1GixbIEoCHB4e4uLFi7hx4waklFhdXcX+/j7msIivrPwqGPhYz4MiH0p2XoNuF3EcoTk3
      fxzVKQTc25sI1y/o9yilRNBoILr6JKIwxD/6vf8DN37yDgDg8qOP4Su/8pfPR21QKSX29vZ0
      hxMC5xx1NgCPDtFz10eYxFSQzdiTs9AHKJCLxBxTDHNdF+Jf/GdQax9F9MFfRJSMNtw20e/3
      p3YsWZaFb936Gq7MP462OweX5fcwox+qG1qUW2yKIFmDgqk0m5GdVLXZpLu8Sht5/pkkSfSu
      ZIa4WELA7vcgW214P34V/Q89NZI88/J3v4M//qM/HLmHz37hF87HDpANhjMR8AaY39Q5poSs
      7f9ehEmY1zC3bhF2wL73P8Jefhpx4wNndl0AAAPqdh1hEmAgBnDtUQbImmRpbkXPz8zDNcfI
      c/LR35xzuK6re3sB1bPMgiDQDUdG5iElpF+DkBKyddwNiBj3YH9vbKx3rl07H0owY0yvYlmi
      JqWKSh+auB/296zjLUkSyOd+HWiug8X9M72WEAJfvf4v8Lt/9j/jmze+Bs7ya+WYP1EUIUkS
      3XUljmPEcYxutztSZOrw8BBSDrvp3LhxYyRYjT4nwiWFutPpTP2Mzd7AJvRuIVOkzTYgJWwo
      eLduwgLwlMFshBs/eQfit37rt/7LvAHfTyBTI4CxvIDhdwL1gx/BTQ6QeEtjDazztvrTtE0y
      9Yw8mVfW18A++K8iql/QxJMH6uRYNYLVtm38bz/8X7E72MHNwxu4vv82Xrj8STDF9X2ZcyIL
      FdUtouoVSg0bj29sbGB/fx+u66Lb7cK2bVy/fn0o68/N4caNG+j1egiCAHt7e/A8b8QHwjnX
      5eqrhGNzzlHf3ACzLCQ5VjLOOeqv/Qj+978H5npIFhahfB8pF2hduID6/AJ2trfAj/q2ATg/
      OwA1Rs7m6gLDh2B13oXVvTlGbJxzWKyP3va3YIljQjntfACMiQkEKSVCZQ2jGgtgikzTwOLH
      hHOnexu9qJc7N7qGbdtaX6EVn56R4zh45JFH0Ol00O/3sbe3h8ceewzNZhM7Ozt49NFHwRjT
      HngqSks/nufpIltVIKVEePkR9EsiVxUXUIxBcY5USkRcIElT7AUhnnn2Ofzmf/gf4S/96l8b
      effnAqZ9O4s4lehd/gV0L4wWmaVt/GDzG3jzO7+NNNoZ+e4szKpV5pw911SaqzS0IKRpihcu
      fUr3Sbu69CSaznj3zCIltNFo4N1338W7776rwz7Mebqui5s3b6Lf76PRaGBjY0M3BBFC6NIm
      5jzJwJD1thctMhQbNRgMxhYSKSX6Vz+E7s99AcGly2PiHFWDWF5dxYefe354nfNgBSKkaYq9
      vT0kSTJc1VQMBgnFBCR3tIyaDZBjSCCju7D8iycuo5idx0nFKJPAqXNKkaKZB2EJbPZuoRf1
      8MTiVchknFlMkaLb7Y5lcZnyvSk2EUGTmBPH8bFeFcRItw8gLi+NPV+VRJjb+jri5qPoNx8f
      uRfGGGwuISGQGDsiEXNZcWETps+kc3CAl7/7HbzyvZfOhxXIhBAC3mATzu0fQvTvgMkIijtI
      a6uIFj+CwF/XNm7gqBBUlMLz1s+E+GnMk4pRp40PkqmExW18f/NP4Vs+LjYuF9rei4iJTJx5
      39N3wGickOVYYAvNsfAGzhiit7fQ3bwL7/n1sfEclqDxzj9BNP8h9NpP6/GEENoTbDrxCu/b
      CJqr1ev4wBNX8eoPf3B+GEAphTDow7/9Lbh3/hRsxAXZgwj3YO+/CWfhSYSLH0FfLCCh2jHW
      MOR2Wq/rWaHMHGuulFUYg3OO7978Jr5x/U8QpzF+7dnfyGXsacW7SZ72BArw7fz4JtsBfuZX
      MBACMjMXySyk/jKkOzfiqBRCoHH3JUh3Hrz5KBJMjm3S5l3O8ciVK/i13/jN86MDxHEEdus7
      cG9/J0P8x2AqhbPzKhrXfg8++vqBURK12RfrfiEvlsdEVpGexAhSSnzy0mfw2StfwOc/8Atn
      4tUmw8KkEuh5SKWEdWUFvShCmqPQx6nC4MLPggd7IzJ/kiQYrL4IHh3A3X+98L7NeZn3KqXE
      0uLS+WAApRSizg68zW+DYfILZzIBjw7GvJiO44woXyedS97fVc/NnjNteIZSCgvuEj79yM/i
      D9/8pwhlMPmkAuQR/CSGzZtP1plmKq1SSsSpRDR3daxDTxzHCOafQX/+w4UdJC0h4MYKi9KG
      i2NFm3MOZ6d3PhggSRKI3dfAZPV0PBHs6IdlWkN830ev1zvVyjmNBWnSsSfxViulYHMLLa8N
      xopJIKsLcM7BDoOJK31VBjAV9ex9Zp2Dg2Q0e48MFp1Qotvt5l6Hcw53pw/vjTtwr++g9sYd
      eMlxRW4wdj4YQEoJ0d+a6hwx2C6sAVqr1U5cIbnqymiiyF9wUiilMO8s4i899auwVLkamBWv
      wpvblVZ1AuVjFyHP5Eq5EUVZY3nj62QiA5ZisLY7oNmyVMLe7qDb7cLzPIQL/vlRgk+CshdN
      pTnSNM11zU8zfpn5kv6ftAtMyxxVHWimuTZNUzhPXx4rMmYyiDlXzjnizV2I+cZEj9NwUQCa
      e6/A2/gGGBSk00L38V9GH7WR3Si7MwkhUK/X0ev1dICdUgqSAcoRAFWFACBdC7WajzRNEcbx
      +dgBOOdIaytTnZP6K/rcIpCHdFq9IE/eNf83UUW5PalpdBLTlI2ZdcjRZ9n/2XILqSgXl+i3
      lQ7gbn1f62k8OoS784PK/hIqSEA792G3g+jiPNK6C2VxpAt1RIuNEQY+FzuAZVkIF56E2vhm
      JT1AcQfR3BM6BsjlEgoMkRzvp0Uu/V6vV7nsHxEPUBx9Sd/liT5mGIQpHmV3gqy/wTyG7PVl
      zEPWlpOYSfOsVUVjHI+vgGxJYTmuIJdds9Pp6JRPKSX6XCK+sjDsCKok4iQaVqtjApE6Jz3C
      GGNwmosI1j8J79bXSi1BCgzh2ouIuQ8GBr93Hd6tPwG4hf4jX0SPz+VaG2q1Wmkb0CzyEsyz
      Y+o5GdfLmgKJeMzIy5OCMYYwDHXMDjCM95mmTGMZMxWBPPOJW0O0+OGhnwaAtOoIFz8ywoAm
      k2f1Kdd10ev10Gq19OdpmiKKY90Ym5jD2ukhXaidDwYAANt2kF78JMI0ynGEDaGYQLj6AvqL
      zyFNhyHS7tb3IMJhjUl3588RrH22kCB830cQBGPueSEYoBIo2NrkZxLZSUGKohACf76zhaeX
      ViFzSo9XgclYlPxj7hZFv/PGKfJVFOE4lZGht/wiksYl8KiDuHEZIa9DZRjAvL5p56cwFhrP
      jRWkENgPetgPGP75yzfw137+yWFotwckh4fnhwEYY/BqdYRXfg791qOwt/+sMBTCDINI/RVY
      3ZtQGIpGgimUrYee52mvMWMMXA3w9nf/W/T238L6E7+Cxcd+MbeN0knvCRiKEM8ur030hGaV
      1dzAwKNGIllCK/qdVwm6TMexwCEPeuBzdSRKjlzXZwFCVkMgVsDra0iTFFIGY6KdOb65+t+9
      e1db6DjnkMKGYsP2U2/f3cM7tw/w9Vc3ECcSP/Phi2j6/vkKhgOO5e84jiGjPlQaA8ICEx76
      g8EYETlCwe28A8VtABxxbQ2DZDLxBkGAWq2Gw9t/jGvf+e3hWP4yPvyFv4UgsirHwJdhmpTI
      rKWpSPanys5VxqN8hCxM5jHnJoRA5w9eRv/Vn6D+/ONo/PxzejGwVQDrT/4LyI//ewjqj068
      p+Hz45BymE/dbDaxubk5UqLFvL4QAte3e/idv/9dpFLhkZUm/vqXnzs/OwCB4kiEEIAhqiil
      wIXA4eHhyMOPUoa0+cTIcZY1ugrlpVzSTuD4a+DcgZQR3NoKuPAAJKcWf+heqmKafsBnhaxe
      whhDvL0PFSWIb+9BHHXoVEpB7L4JbLwE/u43wZ56bCwpyQRjDE7vJvi3/yaST/7HENYSdnZ2
      sLCwoK1AAMZC2wEGedQC6sJiA2vzMz+ABmPDDujNZnMsVc8MwLLDXdgHb0IM7oIlAaTlI62t
      Im4/jkg0ERsP3XEccO8qrn7mtzE4/Anaa59EKgUc52ysz1Vt/7ZtY2vQx5Lr5RDF2ZR6yc5L
      JArdb/0YzLZQ/8RVJGyotM9/6RMI3rwFMdfA/h+8hObnn0WsFJKlZ2B96j+BvPTpkWT3IgbA
      kXuLs2EewmAw0E3KX3l7B0Gc4hNXl3VwXZQC//ufvA4w4KefuYgPrA+ry80YwABjTGeNERMQ
      8TsqgH/jq7D33wRTo5YWtf8GvM1vIl54Gr31zyBMzfo0AK89icWF54eZUROsP2d5LzBqj6ZK
      jsnmeeeYn3POkTIBDgxFxYrgnKP/0hvofPNHAABrvg7rQ8NcCtXy4H3iKuSdA6goATsqAdnp
      B2h88MvD0OYCBVvfF4C4cQnii39zaLULU/j1lr72y9e20A9ifOLqse+nFyS4dbcLpYDLy018
      7tmLwyp2le/qnICsCn73J0i9RQS8Djftov7OP4YI7uafAwAqhb3zQzSDHbBHv4QAx1WiKYjO
      b7QQpYCtosLVu8wrPA2EEPjareuI0xQ/9+jjWHH9EeXb1AHGWsgeoS8Fvr0RY8Hj+OhKcVnJ
      3Os3awBjABR4zRuRy5MkgbXaRvvLnxjOCUwr3zQ3Aina2USl4d8c24ch/rv/63uwhcB/+lc+
      Bt9W+Dd//klIpaCMnseLTQe//sVncHuvh888s35sMar+SM8PhBBQ849DhLtweYLa9T8ALyB+
      EwyA6G2g/u4fwrGtkRfpeR6kAmJZPRnmtLE/vmVjPwwQHznM8ojf/D/7WSKBWAJBOt08pJRw
      nrqEhV/6NLwnLsJenx/zT1ArJYr4JMec6dhTSsG2BOyv/Vfwdl+FbYmxXWx7Zx9/Nf27WO28
      jDt7fQRBgHDQQxz0MRgMEIYh+jFwa3eAn3p8EV/6xGNwbAEwdn76A0wLzjkcv45wMAd390ew
      +puVz2UA7M51uIdvIa49NrLysTSCFUeQJUnd2figk4pLSZLgY6sX8JHlNQiloFAcMpHHDADQ
      tiV+5pINVwBpQa39LCgdMkkS2FcvYP7JS0PfR0kNVlJcs3FFjDGIzk3g5nfANl+G9ZW/g9Se
      Hznvymod7CMvwHU/jA+staAy4mkURfg/v3YN1zb28W/83FP4wTvbuLndxU89vozPP3dxxgBF
      EEIAtSXY7/zjE53v3v0zBFceR5SJYad6n2UwZfHTKKppkkBgGFxQ5XwuBDzf11lbUkr4TEKl
      Ktd3niTJmBlU3jlA2h1AXFnRq7s5/7ywjmwYB2MMfnoIFneh6qvA+scA24d0mjAnEgQBGOPw
      X/xNXFVKN9MeeQZpil/81OM4HMT4R9+8hlfe2sbqXA2tuju06E18KucUjDHwwQ54mF+YdhJ4
      sAMr7SHhQ1MrEQJ5i33fnxjXkudBvZcKdKIU3tq7i6cWV0ZCNUg8IdC8PM/DYDBAFEWo1WrD
      Sm9rc7DYfGEz7KJ7zu5CSjiAdBHBgfW5/xpWsAMzpJRzrhvxmVajvHEbDkO75uOLH3sUDd/B
      l168guWWOyyIdpIHdW4QdZFbvrgCWBqByxA4YgB6+VQjp+iFkeKbVUzLGKGKqGSutHnWIMYY
      LABPtBe0sjxGlGo8L4FKpodhqJmBSqS4rqsZKRvgl71f85pKKYTMh7I9qCPF29p7G3zxKsDr
      YIxhb28PTkH397znkqYpPrjexNWLbe23me0A9wF5K6kZK2RCWA62AoYwVbhQZ+BpVMgI2YjQ
      aXeGrLxNY5EnuOqYdBzdE+1sh4eHCMMQSZLo1dqyLNRqNV2kWAiBwWCA+fn5sfgic35JkmCw
      9DxdEJxzRFGEhYWFEcU5b25pmo4UIc4q4zMGKIPTAJgAVHXz3wiGzsfC1c+EEAJvd4DXd4ei
      w60uw4trNlh8HL6dJz9n/66yE+SNlTcmYwz9lMOzABwpwZMsU/Q9RWQS0TmOoxOIqKWRUgqt
      Vgs7Ozvodru4dOmSVqCz1zFrKVHA4aS5lOUs69ItpSOcYzDGwBorkO545bQqSGtriN2FkReQ
      pmlprf/t/rG4tRcoBGm+dcb8jJAnnhRhGvNqooY6cdHYk0QQy7IwYB7e7jDsJjbsI7HIXN2b
      zSYuXrwIJ9qD3b89cU7UgZ6uUXQ/UsqjsBcLiRqGQocpw1t3usfJ8ROvdk7BGIPtuIiWnj31
      OFmHUx6klFivHwfHtRyGbMQErYBmicdJK35VMabo85YlwWT+DjhpbGFZuNFl+OZGjB/vJPju
      ZozXdoetTbOQUiJ2FxDX1sbuk2K3KJ6fvPWTGJn6lSkwvPTGnaF5WzAsNo8NEDMRqASWZSFa
      eR7J7usQ/U1MI2WLwTas+BAJP26d6vk+pBx6KPO2+EcaHC3XRpgqrPgMKokmFnExFceyY6qI
      LlmCzu4qZTuQeTzFTd3oAH9+Nxm5hxuHKR5t2XAxznhUet10imXvUUqJTqejA9+QM445nud5
      UDLBTz+zpj3ZLc+ogF36VM45GGPwGm2EH/gSpLc03ckqAdIQd+7cwe3bt3H79m0MEoadiGtn
      URZpEqPFI6w4CVQylP257UIKt7BCAs0zr4LFpIR6CjMwV9OsXpFnfaIfyq4yj6ffnHPcHcgx
      BpYAyLGcZUwhBJK7AYJbHfi+D8dxhtYk2Nj/8R3UvRrq9ToajYYmZhsJvHgHtjVOytRjmfwv
      5nUOBhJhek7KopwGnHN4CxcRfOgvI5r/EFRJHR0TSnhQVh1LS0tYX1/H+vo6ZNABDu/oCnN5
      sT60yimlwC0H39pM8NWbMW72+VT5A5ZlYSsclDKOZVl4+c4GrCPHXJ6tP29+9BMogY1+/g6T
      pik+OCfQsEcZfcFjaNjDe+9KG8I+dqQxxtC5s4+DW7sjzybqh9h9ewvyqDguJb3YSGD9y9+C
      +Cf/Luwf/YOxe80TkxhjuHMQ4r/53W/jv/+Hr8xEoEmg7dyfW0Xo/zLiw02IvTcgBttgcRei
      v5WbXhkvPIVY+BDsWLRoNBpoNBrY2trSlox6vV6YVNJLgINw+ALv9CQu16eL6ReMjySIZ4lB
      SokXLlwey1AzvbdZ0yT9ZoyhJhQaDY4oGvUbkPmxIYDPXrbxkwOJrb5E02W4Oseh0uHx2WIR
      UkpcfOEDYEdxOnR9d6GGZ//1T2nbvQ5kG2wB2z8CSwbAja+Df/jXRp6fGWdkzo0zQAg+jC06
      bxlhpwGtfGTOS9MEfPMleLe+rqtNKDDEC0+he+FzCJPj9p3mbxqn2+2i0+kgDEPUajXMzc2N
      EKJlO/jhjsJhJPH0ooW2iEdW6UkZYZZlIVACr++muNTk8OJOroc2e47neWCWi0gCLuLc3cCy
      rBHGpdZH5nMyRSVajYmBsw4y+ozaVZnjABh5flTYynMs2C//D8Dmy1DP/zrCC58ZKRLQ6XTG
      ihTQgtYNJBybzxjgNFBqmBYYdXfBD2+AyQRpfQ2h1UIUHRMavTxKYo+iIbNQfzJihv39YYPs
      ZrMJ3/e1jI4jQoolwNJjJjAZYHNzc0xZrdVq6HrLePVugpUaxwsrbCID6DlbLgIJ+IjHnUdH
      3WIOtm7g5Te38Auf/aSO7hwZgzEIy4ZiXOs0hCKLWLb3cZaZqFdZuz1MaLEtC4wdNcmTSmeZ
      McZwcHCQ2wLW3BFmItApwNiwYK49v4q0NVSSLaUQdTq5xzabTR0mwNiwBWkUDXMDms0m6vU6
      kiTB4eGhZoa5uTlYlgXb9bHdV1j1jp04RBy0mq6trY0oqQDQ5gxxKrBa40inSGpBGsEDxur5
      W5aFW32Oi00OWDUIXjwmYwyx4jgMFRYdPkL0RZYp3bzkaBcw74We2dzccWkaMwPPZRGs7/9d
      pE/+MiJ3eUQnKDLZzhjgDMAYG9m2G42GJmzzGPqhaNBms4koinQMDTAkMDLxJUmC/f19HT6x
      0Gzi9u2dkSYRVKjX87wROZf+5jLGB1sc29u3IR0HtVrtVL6BNE1xsSEgGLC4sgb3rbdKx7BU
      jEWHjRE/t4a9AtIkHrlWvV7H3t4e5ufnx8Yzk/lznXIyBQ7eBYsHUI4aUaRnDHCfQDImRUoS
      pJQ6ClQT55FTR6nxIDlilOXl5ZHxs/8XIRsINjc3hzt37mgGPSmUUkiiELAErr/+Q7z00kuw
      mmv42JOPjhxHjisS8+ieGGPopgKv3E5gC4anFhy07GNGYIzlesvp2cRxjMPD8QhdKSXE/DzS
      z/+OVuoT5iAIFRYa9lixAz3uTAc4e1DZlYODg5Ha947joN1uj5kze70eut1u5VCGqsgmmUgp
      sbu7izAMsba2dqqyLJZloX+wi4N+CKfexvJcQ+9iwrJws89xpyfx1IJAjQ/FlBA2dgOJt/ZT
      dKKjciUMaLkMH1600BBD685gMBgrLmYW6M2CsWFFO1Mp70XA7/yD72IQJvgbv/xRrLctXdDY
      fMYzP8A9gOm+B0Zt53kETq79s0bW9Mk5x9LSEhYWFrC/v3+qsZVSaC4s49KlS1iZb46IOAkE
      fryTYKsv8fZBqu+tGyu8spVo4geGTrG9QOGbGzG6qdA1VslBxxiDJSzc/dEGdn68WejX0NXg
      EMJjIfphgsNeiF4QY78botFo4Ks3fqI71LuuOzQRn+opzFAIzrlWaok4ihrLmQV27wc8z8Pu
      7m5u+ENVkCnYBJVpvN0HkiN+0OKeELh+t9iHkSrgtd0UH2kNLWUb33sHa88+AsUZOrf28OYf
      /QAA4C/U4S03jmN5LAv1eh1pmuLg4ABWsgfIGB+48Az++leeH1aHeOoCLMHx0YuX4Pu+1sFm
      OcH3EKQL2LatPb9ENNmeuMBx5YiTFK+aVOU5b25U9LYoPZOU8EnpmwRuu3h9X2Krl4BzgDPA
      4cCFOoeUCWJmYTcoL9w7SADhDgPVLr3wuPYLuC0fTsMDY4BrBLJxzjHY7iLpRmitzB1VhVvW
      VqTPffRxKKV06ElW9+F85ge4p5BSot/va/keGK5YpAeYjrE0TXUSyUmuAxQnvechjmPs7Oxg
      bW1t7LvBYIDd3d0RES5JEly+fDl3LMuy8ee7Cjc6hqUHwE9fctA8kutD5uCPb5QH97kCeG7F
      xuW2o23+2lcSSjDOwByufRmMMbBEgQkOiCFTk/hUFbMd4B6CsWFPMcuy0O12EcexNm02m03t
      UCJGcBxnzHw6CSdVmsmTu7m5idXV1ZEdaW9vDxcuXBgxqwZBgI2NDayvr48xWQyOO/1Rf4AC
      0I8VGvyI8ZmCLYYV2orgCoZH5z1tBcoL0JNSotfrHTOBc7yQ1Gq10tin3Ocw1dEzTAWyXti2
      jXa7rcMeSF6t1+vaMQYMSxhmzafTXm+aYxcWFhCGIW7fvg3LsrC8vKwtMOZYRFxKKdy+fRvr
      66MNrRmGIk8WZoCmwxSWfI6NbrEYVHeG3vKsdco0Hggh0G63NQMIIRBFkX6GcRzDtu3Kz2LG
      APcYpAuQJ5gxhiAItO2/0WhoZZTiaYQQhQozYdLKnw1gK4LrulhfX8dgMMDm5iYYY1hdXR0b
      i2RoisdvNpv6e4EUV9oWfrxzHPu/5DMseoBMyASb4ulFG/tBjH6SYwkTwLMrbq5pNk+0M8Uz
      c9Wf1rQ70wHuI/JkfcdxxvJnKd6lKF6myJxqijFZH8BpYI4rpcTGxgYuXLigPyOn3VbAsN2X
      qNsMlxsMkKO5vUIIhErgtd0E232JKAUcASz5HE8vO1hp16cWYU6L2Q5wH0G7Qb1eH/YnOHKY
      xXEM13V1kzdK5MjrR1xG1Kcxa5ZhJLSCc/i+r9MN6fs4jrFocyzPcygldey+ee+u66LteVho
      pOgGEeJUwhYcDc+B65aXOLlXmDHAfQbFDXHOtZjT6XTA2HFlalPmnsY3YIZRnKVHOctY7XYb
      m5ubI95k2t2Kep/V63X4vq91It/PLw1zvzHzBN9nUPSmCRJ7TAIWQqDRaGiimWZ8+n3WTECw
      LAsrKyvY2ipvPk7Ebtu29rw+aHjwZvQ+BZkSu92ulv/NlTLP/Mk5R7vdxvz8vA6im8bWfy9B
      4QTk2MsDExbe3JfaFPwgYsYA9xlxHGszZ5YBKHjOBIlMJvGXMcC9Yo683NqlpSUMuI+DOH9O
      Fmd4etktrIX0IGDGAPcR1IIpa2MnUG5AVkQiJxkF2JUxwVmLPpPGnneBppVfNsV13alFuPuN
      B3dm7zMQ0VIoBDmbzFBfUnrDMBxLIPE8D/Pz86jVarkl/0zcKybIzeCKY9x894aepzmv+xXc
      dxrMGOA+g5iA6ttQ7AoRDjmaiAmySeG+7+uQ3klMMMmZlp1XFWTHJQdZHrFPYtQHATMGeA9A
      xFyr1dBsNtFut0eYIE1TdDrjFRzovGaziVqtNhJQV4Qqu8FJFGtz3Eaj05cF1QAACMJJREFU
      gf39ffT7/WFjPe4AwtH38iBjxgAPAIQQmJubQ7PZ1BYVCp3OTeMzfAlVMM0uMA0jEBNQ6ma3
      20WSJPj2Zow391O8vifHxLkHDTMGeEAghECtVkOtVtOflXU+IbNpVaKtEldk6iRl3eTpWBOu
      62JlZQW2bePjqxYenxMIU+DV7VD3A3gQ8WAaZ88xHMfRXmKqHpcVc8wAO7NK9GnEjbwwirKA
      uiLmSNMUPlfgjGO5xmFzPLA+AGDGAA8kiLCSJMFgMECj0chdcYUQOnCOcFImyBbVos+Kdo6y
      LDRSlNdrw8ysaRJU7jdmDPCAIdvGJwgCbfo0QRGYtm3rdMper6d3jyyqBMplSxFO0h3ymMa8
      FtU9fZAtQTMd4AFDdlWlDKgyYiT9gSxJZU6yqqh6bFHFi2n0k/cSMwZ4gEDWHbN6W17wXB7I
      R5DXJ4CQXeHPyk5vMkBZ07oHETMGeMBA+QKtVmss1HgSUZG3uKgBB41l4rSM8LAQehFmDPAA
      glbzubk52LaNOI7R6/VwcHAw0ukkC9ILiHkmOciy554EZQzwoIs/wIwBHlhQANz8/Dxc10UQ
      BAjDUBfLLQOlWRY5yrLVFkh0obTMIqJO0zR3zLystYdB/gdmDPDAg3ICqKhTmqa5EaMmdPph
      u12qCxDh7+zs4K233gLnHNeuXcP+/j7SNEUcxyMOMfo/TVO9E1FuQ14uw8PAADMz6AMOIqJa
      raaJv9fraYdZ2Xme58H3fQwGg9xV2hwfGDIX5SXfvHlTF/Pd3t7WVawdx8GtW7ewsLCAg4MD
      NJtN7O3t4eLFiyPXeBiIH5jtAA8VKISaCsdOApViKbLFmwS7tLSEt99+G/Pz87pCs+M4urSj
      7/s6+b1Wq+lu7wsLC2M9xujaDwNmZVEeIlCAXF5TvTJQ15m8wDTGmO5Rdvv2baysrCCKIl3J
      rl6v68K9pGBvbGzoaNb9/X0sLCyMFNMi/cW0ZD2omDHAOQFVo8tLtqEaQiYBm/kJ5nd5f9NO
      Ysr9pjXqQcZMBDonMHuTZeN98nqOZa1BpnPL/Dt7nDn+wyAGzRjgnCAbOWqizHNbxVGWmyqZ
      JIVjPkiYMcA5AjWwAKZjAjq+TJHO/gZw4iK/9xMzM+g5AoVZdDqd3LDpvEjQvAoWZaUZ6Tf5
      C94LkBhHKaU0H9J1zPTTGQOcI5iplFWIcxITFOkIxEBRFOmknnsFInZyzlGtVVM3MefpOA7m
      5uZmDHAeQVlj06zMRZli2c/zRKjTZqlVnV+n00EURaXVtOk7Yg7Sh2YMcI6QZ+HJW93zzjuJ
      o4t2garNuU+CMAxzPd3ZeRCyTsGZEnyOQPE9eSv1tARalkBvxhpFUYROp3PPCnVRcYCyH4Lr
      usj6vGY7wDmBUsNGd9kKDaepKJHdPbI6AYGsQZTbfFa7QTZ9tAyWZaHZbGqG1Z+fyUxmeChg
      WRYsyyoMeS7LESiqDGH+bXqPzXOUUhgMBhBC6CrXpwUlCU3DAKYZmDATgc4JqJRKo9EorfmT
      DZXO+8mzrmSvlQW1jD2rIlkUmFelqybFLeUFEM4Y4ByBgtRMJqh6nom8kIjs8XkMVlbtblpQ
      U5EqYIwVHjsTgc4ZaDW0LEtnmeVFiFZFlgmyxJ8l9iAIckWRaUDh2pMSg8w5Fl1vxgDnEBQY
      5ziOLrvS7/fHRBsi5KI6Q4Q8XaGIiYIgGKlgURY4Zwbc0byBoVLd7/cr+Rgm7XQzBjinMM2Y
      zWZTZ5uZMHN78wi+iNjz/Abm54PBAFEUQQgBx3F09bi8KNU0TRFFEQDoY6qIUUoNey2srKwg
      SZLCHIoZA8ygmYDiZ7LhzibyGCIPk+KFKHQhDENYlqWT+KlZOCnbURTplZ5W8yoMsLe3h1qt
      Bt/3EcdxYZWMGQPMAGBoJpybm9NMQLpBtoPlpKhRwjQMQhlrwDjDmchjxux1kiRBp9NBEARY
      WloaS+jJYsYAMwA4DpSjaEnKAc52rMlDWaFcgsk4eWZY00ozaZdRSmFzczPXrHlwcIALFy7o
      gDfKiy7CjAFmGEFWKaXmHd1uF4PBoFD8KFKK8743g9GKoksnWaLSNMXq6urY51LKkdijSYw5
      Y4AZJoJzjkajAcuytAJbZhnKWpHo7ywTmPnIWYW6aPUPwxDvvvvuSMn4SdlsZZgxwAyVQKZL
      x3GQpinCMEQYhoWpj3nMYP5Pf+cFrWVXbJPZqMsmiWgkTuUl8+SNNXZfle5+hhlwrCc4joN6
      vY65uTn4vg/P8+C67lhkaJa4zyIGiDGGxcVFJEmCnZ2dkc+zxF/F2TbbAWaYGhRXxDlHq9XS
      lhYppW6UR/+bO0FeTkGZ19g8Lvtdq9XCYDDA5uYm1tfX9eembkFMWYYZA8xwYpjONCL4druN
      JEnQ7/dHYvWBcUWZ+iVThGoYDhvqFUWlRlGEfr8/8nl2lZdS6txn6q9WhhkDzHAmIGKkuBvL
      snS4MsUc0S7AOYfneTomiQicRKlerzfWIxkAtre3sbCwMPJZvV4fy/ja2trCE088ASmlVtjN
      kAhiyiRJZpXhZrh3yIZVU3VpSswvktHJMUbEq5TC3t6e1j2KkBWnbt++jcXFxZEwiGwPtdkO
      MMM9gykiAahc01QIgVarNVLPtN/vY25ubuL1gKGotLW1heXl5ZFrUhKNiRkDzPDAgcQpkwnK
      whnoHGDoCe73+1hfX9e6CX2fp1vMzKAzPJAgJmi32zpidJIVCRg6ylZXV7U+YophedeYMcAM
      DyxMJmi329r0mvUwm6v//v5+pWA9ff5MCZ7hYQDpAZRXnCXyMAyxvb2NdruNw8NDzM/Pw/f9
      wr5mFFY9Y4AZHhpQaLbpK4jjGNvb21rupwy2nZ0d9Pt9hGGIZrM5EjhHCfVbW1szJXiGhwec
      c9i2Dcsaki3J9UEQ6MwvsvkvLy9rJtne3oaUEpZlIYoi3Lp1C41GAxcvXoRF6WYzzPCwgvqa
      keJrWo0YY7okCmPD/moLCwtot9sAgP8fzVGHPdfv3NEAAAAASUVORK5CYII=
    </thumbnail>
    <thumbnail height='192' name='Dashboard 1' width='192'>
      iVBORw0KGgoAAAANSUhEUgAAAMAAAADACAYAAABS3GwHAAAACXBIWXMAAA7DAAAOwwHHb6hk
      AAAgAElEQVR4nO29aYxcWZaY970t9jX3TDLJTG7FpVmsKlbX1tW1dFX1dLu7Z2zBgkaeGRu2
      pbEBA94GBgzLEMbQH3lgwIYA/RM0kltjaeTpttTTo+lWb9W1dXFncWeRyeKSzH2JjPXt1z+S
      9/FFZGQyySKTubwPIJgR8eK9+16cc+855557riKEEEREbFHUp92AiIinSaQAEVuaSAEitjSR
      AkRsaSIFiNjSRAoQsaWJFCBiS6O3vlGavM3pC9dQtBjPv/QyhVQs+Ez4Hr/44CPefevNB574
      57/6Je++/Y1VN2RubpaOjs4l7/tOg1JD0JFLrfpcERHLceXccW7euoulphnYvnPpCPDxp6d4
      5c23ef3VF0kaGqXpMY4fP85UqQYITMsEIZi4fZ3zV0bwBZiVOU6eOM74bDk4T61S4uypE0zN
      V6kvzLBQtwHB5OQkAkD4XL90js8uXcOszvJnf/Yv+PT4CRbqNndvfs6JU2epWS4jn33Mv/z/
      /ooLn99E+C6Xzp3mzuT8mj2wiM3F/mdf4rk9XQwefImvHnlmqQIc2reDn/z4x5y7Noqha9ge
      7D+wnw9/+VPknPHc7QucuVUh68/xm3PX+fnPfsGOPc+geHZwnoX5EkN79vLRz35Cw67y609O
      Y5XHOXH+BgDT109yo2wwkE8jEjm2D27jK4cOko4pEMuwd6ibX/ziQ/oGtjM4vJvdO/r5+Of/
      jnjXDq4d+yXTZjSBHfHlWWICDR04yo5nnuPq8V9w4mqC6shJRCLH6NQcUuQm74wwP59hpOEg
      MnFeefkFTh77BC3ZQU93F6oCxZ4+CvkCg7kkXn4H+sIJTp8u88zh11CAruFnSY99xCfHrvDy
      u98hHo+TSadxGvOc/M2nZIsZ5kpVYvEhEglBMhFncnwaU/sMy7WZKzXo7ovMoogvx5IR4MLJ
      j/jlL99nZLJGb0eWWq2OrusYxqKuqKrKzoMvkvDqKFqcHdt6mJycxNANKpVKoCTVmbv84uc/
      4y5pumMqL3/1AB+cH2dXbwaAyvwMpquA16BmuXSldH7y8/eZLddpmDa6EUPXNPRUnrkb5zl5
      /nMOPXsAx/VJFvvoycZamx4RsSoURUVV7v29FslwQvjcuXKKO1aRrz2350lfLiJi1axJGNR3
      bWrkeeVIJPwR64s1GQEiItYr0URYxJamKQokhMB13afVloiIJ4Ku6yiK0v6z8Avf93FdF11f
      Eh19KjQaDer1OslkklQqRbVaxbKspmNaLTj5WlEUhBBLXquq2vS+/Ez+g8VIV+s5Zccgvx/+
      bvi68n9VVYNnGT4mlUrhed6S+wDwPA8hxJd+/olEgkwm0/Reo9GgVqs1tTl8f+1QFAVN01BV
      FVVVMU0T13UxDAOAeDze9P1295RIJPA8D8dxgvtPJBJomval7nG1+L6P4zjEYu2jhkuetKZp
      wQ0+bRRFwbZtYrEYuq6TSCRwHAdFUfB9PzguLNCtwtn649q2Hfword9pVYTweRRFQVXVtueU
      x4Tb4/t+8E/+2JqmkclkUBSFubk5HMcJvuN5Hp7nPZZnLwU3fC/LjewrCb+iKHieh+u6Tffu
      ui6apgUCv9I5pPBL6vU6lmVRLBaXFcrHiXyuy7GufQCpjPIBJxIJOjo6moRE/lCtvXrrjyIF
      WNd1TNNcIugPEwsIK0pYOaSQSKTwZ7NZ4vE4qqri+z6KojTdg+d5+L6PYRht72W1yO8JIajV
      ajQajSblbr3Xdp+1O6ckHo/jOE6gFCu10/f9YKRr/V1c113xmmvJulYARVHIZDL4vo8QAkVR
      0HWdeDy+bC/d+ncrqqpiGAae5wVCK1nuxwwLVrtrths5wj2oZVnout5k+oSv6zhOIPwrtaNd
      m+Tf8hkJITBNc8lIbhjGEtOu9V6WOz8sCrRpmsTj8UCJJaZpUq/XVzyfPKd8LuER/GmyrhUA
      FkeBRCLR9MDa2bitCgD3H7j8O2yf27aNZVltBXc52gn8coIvr6MoSiD0vu9Tr9eX2KTtFKud
      ALYz+9r5M0IIGo1GYAbJ98O+RWuv3E7pWq8hhEDTNHRdb+rZFUVZYs60moxh4VcUZd0EW9aH
      t/sAWh0mRVGIx+PU63U8zwsethQQ+X9YGMO9paqqpFKpoFdLJBIP7HVblWul48KmUFgJDcPA
      cRwqlQqxWCx43Wo2hWknnCuZerINtm1TLpfJ5/PA4igTtsWXYyWTKRxISCQSQQciHVzpVy2n
      TPL3yGQy6ybQsj5a8QDaCZ0U4nK5vCR6EzYJ2hEeCaRdG/Y1wseFBXi1yO9omhYIXaPRCJz5
      RqOB53mBU7/cvbY63GElXElh5Wf1ej0QNGmzr7bt4fOEn2tYGWQwQZpa4Xa1GxkTiQSu666q
      w1krNoQCLEfYaYT7va/8W/amK0Up5A/uOA66rrcV+Id1SlttbdkWy7JIJpPBMe16wXa+TbgN
      D6sE5XIZ3/eb2vQgMy98jvB1WkeH1me1XHvi8Tj5fD4IpZZKJQqFwrJtWEvWvQ+wHL7vUy6X
      icViaJoWRB3ahTRXstlVVQ2+vxq7dLWKII8LK6EUGOnTyPDcasyvVod9OSFuFw0LhwEfRpnD
      9ns7n+FBQQFYnITK5XJomoYQgkqlgqqqaxICXQ0bdgSQD7FSqQQ/hPQVlnPwwj+onNCSP1Qs
      FsO27SUO25cdqmXvK89jWRaxWAzHcTBN86HOFY/HgxBk+H5W245Wn6jdSNeO1snDWCy2bCRO
      OuvyWul0OvhdTNPE8zzS6fS6CYNuWAUIO1OlUgnf99F1PYjztwo9NA/prcM6NPfW7Zzeh1GG
      sB8Qvq7neYHgy555NcIgRw7bth9bBGW5KNlKDr+maeTz+aYQqxTs5ULU8vzSabZtG9M0A3Nw
      uWutBRvWBIL7QlEoFNB1PXAo5cSTPEY3dITho8aUtlPw4RCfFK520ZDwseG4eztkJCjsQLY7
      HywKkG3bS95vva5lWUvMmeXOudJ5HvS95ZTBMAxSqVSg1PKfruv4vk+1WqVarbaN8buuG4RO
      HcehWq1SqVQolUoPvPcnyYYdASRSCVRVDWY/XdelVCqhKArV5DxnS8eouAtois72xBBfSb5I
      o2S2dSzl7O1y5kE7oWnnOLZ+r913pRL5vk+tVnugXSwnoqQAtjNrlntGD0O745PJJPF4HCEE
      5XI5SDHQNI1cLkc2m13ib0iEEE2z0rA4+sncJGnOPo1RYMMrANyfiNF1ndHRUXzfJ5lMMq3c
      5Vcz/w6f+z3S57ULzDszvNv1Owjnfo5MWOhbe295jQfNXspokgypSuFsFVQgmIkOK8DMzExw
      zXQ6HYxi8tzpdJpkMhmYU+VyedV+xEqzwLC8ogohiMfjxGIxTNPENM2m5xD2R1qfWfiYRqOx
      7LXl6JBIJFZ1L4+TTaEAcD8BLJ/PMzMzQyKZ4Hjpoybhl0zbE9y0rjGsP9P2PGGBfRhneDmz
      qFX4gaD3lMdK4YZFR7lcLqNpWmBbp1IpXNelUqmQTqfJ5/PBe7LnfVA729n74c/CflE4sGAY
      BuVyOTBVZIejqirJZHLFBD4hxBKlaffc1io7tJVNowCSRCJBOp3G0hrU3PKyx01ad9kTPxj0
      WjI9oV3cWyLDpQ8bGdI0jXOnT7HvwEFi93p1mS4tw5tyNHBdl3g8HkwWJRIJUqlUMG+gKAq1
      Wo2xsTE6Ojro6OigVqtRrVaB1UWG2t1fOFIVNvfi8Ti1Wi1IYAubePF4/IEzulI5pfkkryWV
      SSqYbdtBSHot2XQKIE0hR2jA8jalqjTnybSbxg8LxM3KDX5w8f/hP3v+D+lO9K6qLWEfo1qp
      LrGPfd9HNwzu1hRulT1UBfYU4hQ0G9/3SafTZLPZYKSQTmQmkyGdTjMzM4MQgkKhEChAa2Sn
      VSHCIeB2kbIwMqJ29+5ddF1H0zQ6OzsDRa3VaqRSqQdOrMl0jDC2bWPbNoZhBOs8wibfWrHp
      FEBRlEVTogGdsW6m7Ym2xw0mh5uyGpPJZJM9K5GC4fkuDcfE85fPLV8Oz/N4+fXXl7RTVVUm
      6gqfTd8Pa56YcPnathj5+KLwuq6L7/tUKpXATjYMIxBG27YZGxsLzKF25pbMOYrFYm3Nn+Xs
      f9d1mZubo7e3F0VRgkQ+2etL80aOBGHFkzlOK5lH6XQ6+F9msK41TYvipWe/XmbpHpVGo8H8
      /Dx1rcxPpn+I5Tc7irtT+3mt8C7CE9i23WSLSye21ZmTJshyC2nka8dxglh4q93bGrFxHIcL
      5RgTtebj9hQ0hlN2EJqt1+tNJpCMt1uWFcwoT01NMTg42NYPkT22dLyXS8Fo9Xd832d+fp5i
      sQgs5hYZhtEk1DIzVyqfruuoqsr8/HwQjn5QdOdRwrmr5UEyvelGALhvehhmku92/y4Xa6eZ
      sSeJqXGGU/sYiu3DrC8qhVzdFP5uO+TSunajgzQrgCAzcjlavx/Tlv7oMW1xdJA/njQNwolz
      0jHWdR3btkmlUkxMTLBnz56gDb7v02g0AidTKro8XpUTf6qKL5YmwckEPkM38MV9JQ13DrZt
      Mzs7S2dnZzCiygmver2+KrPmac4Kb0oFkOkHqqrim3A09TpaVgs+8z2/qRcLm0LSaWsXzltJ
      sMNpAisN+/K8vu9j2za78iqTNQ/rnmWVMRS2pQX4i8eqioKm+nhi8Xuu6xKLxSgUCoEt7zgO
      qqoyODjI9PQ0+Xw+6HlVVaVSqQT3Z2ga8StXcT49hj0xDr5A7e7GePEo2otHce4dZ5omjUaD
      rq4u7PEa8e5UEA3q7u4OensZqZqbmws6EhmyTSQS6yblYTk2pQJI50+u/ArPWoajOOGJL/k6
      mUwGzqY0B1p7/gddu1UBwvMBkiDer/l8fZvBVEOgKtCbUvCsBso9UyJe/wjKH2OkD2NlvoWm
      aYHjKW3wUmVxNVYunaCnp4dSqRQk3CUSCUzTXDTtXBf7n//fuJ+da2qfNzeHd/Uq2qefov3B
      7zN/LzGwo6MD3/eJDaRx76U9y6hNLpcL5i+kc+/7PrFYjGQyuSGE3/GdzakArRGdJBrxu2X8
      VIxa8f7Cemn+SGEyAIRA3Jv0kaOI67qkUu0L8Ybt5nBGavjHVz0Hp1JCK3S3zb+JKR7b5ekF
      uPds9kRch8onKN4ConoKPfcWQs0GUavrd6b5V7+6wshYCUWBvduK/O1vHCAbX2xX2LHUNQ37
      +3+2RPibntvIDfj+n1H4w7+DFVpUJAVc13UGBweD1IeFhYVg0lHXdZLJ5JJ10euZK6Xzm1MB
      wo6gpmnEZmroCw1EuUEsl0Ba0rquN0VO/F9/AID61ptBD/YwP+Zy4UShGxj5TjyxusU1MjPV
      sj309POIyjFIHUAo6WDEujM5zz/8V8coVe+XIjl1bZKbkwv8L7/7Ennbbpp91a6P4J4588Br
      eyMjpC78ksSRA9j6UDCiycRDqVCVSiVYyJ/L5R4407zeEL5HYdzefAog8/rDkQwvHUefr+En
      DDxNQWXpghUhBOrXF0OVbiiN4UGsJoLh+wI5JxE+TjrW7ZDOZCz7Hmr2dXyS+L4IRqy/+s31
      JuGXzJZNfnH2Dr/7djq4L03TcE6dhlVM4Im4AeoxtLmLxLf/zyRTmSAqFm67NLGy2eyGE34A
      3/NwJyc3nwK4rtuULiyEoJbUcPb14ivgeM2pxOEe2w2tJmv3+WoIL3Rph3QegWCB+XLXcF0X
      zxd4JADRtMj8+nhp2WuMjJWC1AhYHOmsifEHtt3dvR37hQOYQiPtFCnGEsuGMQ3DaDvBtVHQ
      JicZGl/YfAoAS4XW930sZeWSJ7A0Tr9a4W9NKVipR5QzuoqiBEW62gmYEIJYLBZUd5Dtk05w
      Kr58pCkZ14MMS+koozwgGS5uYD9/AJIJBFCdrJLeXiF1b7KqlY1i57fDrY0galcwEsmNvR6g
      HTLaIotNyb9d18VxnGCEaPfPcRwsywoqKDiOg23bK/boknCei1QAmZ4gaxHJKIoskiUFNHyO
      +anJQBHDtX0MwwgW/Oi6zsv7+9vfP/DygQEcx6FcLrOwsIBdblB2HlBxTlGZTte5lp3GUhdH
      Sd9bH6VLHjcKHZT+6hyNZ43NNwLIOkLtav6Ep/El4VVJsJiJGS5Stdq1whIp0DJVWSaUnbY/
      QkHlhfjXguQ1mdufTCYX0wKEj2NbKICgeS1wOI2hXq/z9cPb+Hx0jo8vjjVd/+V9nTw/XCSZ
      TJJMJqkuVLjwlyfBzbMXBYX2o1rD8DjTNY4TV2loLl+Z2ktj2sXr8dZNCZPHhRLLEBvci++O
      bD4FkEITNmXkLKicppeTXe1MnHbfh6X1etp9Tx4vo1ByNrdareLoNqqymCIABEsCZX5NOp0G
      RaVn+w68UH0jVfjkb4wQuzuK0A2svfuo9vVzc2SEQ5k5dr7ay5ybpDw3S49RZ1u+zNWzJ9l9
      4BDxVJrK6Dy16TIkCsxmt9FZGQ1SBAUwks9yrrODgrBRTR/iKvF6F6LRDf7Dl4TZCCiuS86q
      U/K+vflygYQQTE9P4zjO4mhAg8TcRYzyTVR7AYGKn+jAye+mUdiPLZqdUMuySKfTwexw2JSC
      +7lCrYTnA6QSNRoNkskkvu8HKQEy7ReaHfbwMkNJPB6nePUysZHr94VWUfiVL/j5hQvBcd/6
      3m9j18qIkJImU2n2P3+UsVM3+eKDy4ttFD7bpy/RcU8JLhcL/ONnD+CpKgjBV2MKv/etN0nP
      ZRCuoHNfH4nk+p/QWol2Mv2bDz/k4snjDBt7Nt8IEOQB6RrZ0nkS479BEfdNGAVQa3fRa3eJ
      T52gsf0b1NJDeF5z+RLZk0sHNJzC0GoSrBQylZ95nodt2ySTSWq1WlAZQU4qtYsGCcfBuDva
      lNStCEHnQnME6NjHH/Hcs19pes+2TGzLJp67b+L5wOVOHZFP0FP3+KS/f1H4FxvKZSVOIbmN
      roP5B97XRsX3Bddv3OTu1BTv/N5vbz4FUBSFbCaDdvNnxKZOr7AiAFS3QermX1HPDqMNfhvP
      bzZ3EtWbaFd+iLfnO1jF/e2jQiocG/uYhtvga4NvElPu9zSVSgVN05ienkZVVdLpNPV6nVKp
      RDqdDqJAcpmjVDJppmmGDm0E0GtpRzKVQtN0vJDTGk+m8IUgs71IpjdPdXIBS0xgiXHQYDSr
      QkcCFQ+fRSXPxGLEDH1DxvVXi+v5fOX193D37OCCVtp8USAhBMrMJWJTZ1YUfokCFBeuoZv3
      nUlpv2sX/yXK9b9GO/fPl81VPz1xnD8//31+dPkv+Mn1HzX1mJqmUS6X0XWdQqEQ5MpkMpnA
      N6nVakHFZVVVSZtj5Md+Tnb+MzRdwx4abnJbhaZRH9geCKlhGLz25lsM719cbaaqKsl0mh17
      9i3eg6Fx4HtHMQYSOIqFADQNdMPiqPYT/ib/hj5lhmIyyR+88CLZ5Obee7nszTOlXcZWYcGs
      bb4RwDbrxMY+WTba0Q5d1cnMXcLdtj14z/d9/N3fRq3P4O/73pLKzNI8sL37JT0cz25Kh8jn
      88HaWSEE+VyO6gcXyafjxF/YHZhZMi8pYU2T/uJHKMJDAKpbp773a/iGQWzs7qITvGsPewoF
      fvfQIeZnZ9mR7aJHT+F7MXIvvIxpmaiahqppNObPoeoJrpo1/qL4Q7SYYP+YwZHtBq5XRTBN
      D/Cf9s9y8PX/ls57Fdw2M75XJ+WP8Le2fZvKyeubSwGEEPgLd1HNuYf+rlH+An1b8wyy2f08
      2nsvLlkHHP77pYHXKFsLNJwG39zzH7RVFLgXJRJgXh9Dy6VIHN2zpM6+XhtFEfeKZQF6+RZO
      96tUe/tJDu0KcvlVIejq6WVHsZfEyDQKDUSpgeL52MV4EMpN5J/BxeWHp/8BpmtCHE4PWVxw
      Vb698zC5O6MI4dPXf2RLCD9A0Z3jyMJxZo/FqF2rbj4FUGvjD9X7SxTfwbDngPszn3Il1Uqo
      QuVbu74XHN/anvDfvgKdv/c2qEtXiwkhcFMDCEVFET4CcLODgRKZphms0ZUTalrNDcw8BdAq
      JlpX6n69IaGz4CxQsyuY8zUaDUE2p3Pn6jwTPW+gan+DZO8wOw789qa2+8N4iV2MpN9h++Fn
      cKY3WTaoEALcpQliq0XxbIRIrVhHf6Vy5q2vW9fPBiOCB4rfrAS+72OmelGGvkts/gp+sotq
      8dkgZVsW/JKTZ5qm4Wd0hFJGEYsxfS97v9y6XOqZjxfIxLKYKRNRrqImkqTyBoYVx1L7mJ/0
      EZqx6aI9y3Fx6gr/57F/zT88/PcYeuO5zaUAiqIg4o+eoOUbWRS/fXEniRS+5a4PBGkVMqNT
      OtVyLkBmdIZHF9u2F0sL0olSXMxKFfVFZY7FYsHujI7jMFN1+Sd/fZFqw2Ygk+C//9ZXiKVj
      VD0LN1TmvbNaIf7Zdf6eeI1/tPAT3r91l45cgeezLzOQ248q7lAz05svErICe71t/HeV79E1
      r6Eom2xFmKIoiPwgQjVQ/AfvhhLGj+Wok0JRnCYBb83xlwWtlru+VALp/Erk4hRVUWgc+xxz
      ZJzCb7+CSC+mOOi6HkzWhMuWKIpCpVIhkUgE5/z++xe5M10BYL5q8bMvZnjnSD+aauDfWw+c
      8zzSJ4+jeB7bgL+ffYf/6n/8BySKecyGRS5foFEd5uV0dlXRss3CgtD5wV2D1E6Hfen45lJ+
      RVHQM904ueGH/q7V9Sx102oqquuqMe40DBb82KocxNVkkCqeoPrpFew709jX7ja1XQhBDJvE
      5T8jOfp+kLohR4+gcoXbnJznuF5QXlDmDcXLCyihJL60YdCja8SMONlsFkPX6O7to5DLrptt
      cdeCScvjChpX0ylqe7o21wgAi3Hxxo630KujqG79wV8AvGQ39eJhqDaCXtdXDT6562Lek6Hn
      enR6Y23ygTQVx/eJKw+uAg0gNIXUkV2Y18eI7eoL8n7gXumVKz9EOfNPQVExirupxhezPqUp
      5fs+33tlFyPjC9RMh75iijcOD1CvV4PKdbqu4+RyCFVFkZUfNA03nVlSQXur2P6S53Z4/F//
      4SCxv/zXnLrSt/kUQFEUEsUBzN2/Q2Lk36C6yxdlBfASnVSGvovtLWaGyo25Kw6B8ANM1X36
      E0tXkp2dnmCiWuG7u/c3LUIJ5wZJpZJOcfrtw2TfObLoA4SWb/q+D5n+xdz9WAaRKODYDsV8
      Ds/3cb3FFWQ7umP873/ndaYXGvQVEigIhL64a6bcgGPk+nnqkyM827mddEcPjQMHMe+ZYMVi
      sSnjdSuhxXspTP2M8s0v6Ojv2XwKAIs9aaLvGcz4H2Dc+iV6+QZKqK6NAFAN7I6D1HtfwfTu
      995SKHIGJHVouIshxt6UiutaTQIthOBIdz+HOnuXLZgVLHy/Z7/LzSHCu9kEwg+Yg28T++4u
      RCJPXSRJedPoP/pv0DP9KG/8b1j3FCauqwwUFzfMiMfj1H2PebNB2oiR0XUmb1xmfG6cWk8P
      R994a1H5NI1isbjp0psfBtd3uZyZpv8P/zapyiZdEQaLSpDs2IaT/V0a5UmUhZuo1gIoCn6i
      E1EYxtNTWLVakG4TDlsqvsNrAwaTdcgYUDQ8HKe5erKqquB56IDfbjG8NKe0GHdrULV94lqC
      gYxKQvOawqCWZQW1Mp3EwGIEyTTJNMZh4TbUZ1GdCoqSom4LfvTp5+zbXuTFvd2cnZ7gzMQY
      4t78x+5iJ19987sU+wYZOPA8juOQy+UeWMdzK3Brocr77rO8FIvxTPe2zacA9Xp9ae5+ooiI
      F4L3g3z/ez1zeO1so9EIwoiaZ7MtIbc2uv+9BwlReJQouRqnJlzsUJNGSh7Pdmv0J+4fbxhG
      sNWQVC7XdXF7n8d47X9CJDqw9AK67/PJxUne/2yU09emGBhIcnribtP1R+Zn6Uql+cpLbyOE
      WFxCGQk/AF3pDH3ZPJ+WFhjo27n5FMBqVPjs/GUOPfs8urvAiUt32d0d48Sl23z9rbdIYPLx
      rz+gc/gQemWUG7MOrzy7h+OnzvHi62/j3qvDmUgkll2w3m7xSxi5d66vaJyZahZ+WDTBrpd8
      +gd0hHe/lKKs2ykVIJFIUGvYxHf+VtOs9LPDXZz7YoYDOzq4W21fAv72wjyHO3soFApb1t5v
      RyGZYldHN//vmTNsr+qbTwGEAE1xcTy4fO4iszXBgV2HODRUYmrOZKjbYGh4JyMTY/j1OZ49
      /DKxZIwXnxtmbKzEC4e2U61WWVhYCCafZH1+Sa1WC6IprusuKQ0iF7fMmGAuk0lRcwRzFnQY
      S2sJaZoWjDatG3gLISimdf6H/+gIiqJweqp9tQdDXVw8Hwn/Ul4ZGubN3kPMVtXNpwBGPEUq
      EcOrT3L87FXmSg327ehETe5gV18Kz7VQVB0hPHYN7eL8mWPs3bcP209weF8PqVQq2PXEsiws
      y6JSqSy5jtz4WVZQzufzSybQGu7KcwINFwiF4KX/MXdlgpnPxxl+8wCeuhiKCm9gIVc5Aewu
      dHBuahw3ZPYpwP6ung1RnvBpYFkeZ8/NUjc3YWnE2tw4Fy58To+V4O/+3f+c0bt3mbt7jZuT
      I9Tm+kkU+rh97TrdwwdxGpMki/0Iq8S16+PEU1mevyfYuq4HmzYsV+FY2vn5fJ6FhQVyuVxT
      7k9KX1n4ki1PXy6dvHP8OuZCneznRfpe3BmkVcjy6HLHeSEWyzl+c3gfn47dpmyaJA2DZ3v6
      2ZHZeNXa1opkXOPFfb3cnKxsvjXBbZ3ge7iuu2wIUG5EIasuO47D7OxsWx8gHC6VeJ5HpVKh
      UCjcP5+ic2xGXezpW8gYCq8PaAjvfsqG3FugNDLN7MgEO17bh5ZarMqWyWQChz28+Xa9Xl8s
      Y55I0LAsVAUUFGYbDbqyWTqy2S0d9mwn05c/O0O9XOaw424+BXgUZJ693Jgum10sQFsul7Gs
      pdml7XZ9BCiVSkFZlnK5TKFQoKEmOTnpYocm1RTgSLdGX+J+0VlZ619OmKmqGvuR1+EAABe9
      SURBVNQokgrQLmVBOuJyjuHz8TH+8aefMF4pkzAM/tazz/G9w0e2VLpDmHYyPTs1SbW0QOrE
      6UgBJFKQ5ufnEWJx3y3LsqjVak07yMv/2ymAVKRqtUqhUAicWduHSUunagviGvSnVVKqGyyL
      TCaTbcOUraPPg+z5hmny9//6x1ycmgzei2ka/8d3fofdfX1b0h9YTqZ9XzA2Orb5fIBHRVZi
      y2azzM3NYZom6XQaXdcplUqrS3S7VwQr7DMIIXDNBp3AYF6ut/UQAnK5XLA3bjvhfFiBbdg2
      dxYWmt6zPY/bpTl29/U91Lk2O6qq0N/ft7myQb8ssnSJoihBafF4PE5HR8eScOKDlCFMKpXC
      sqym/XITicQjlWBfiWQsxrZcruk9Q1UZLBQfy/k3G5qhRQoQRgqirOhWLpeDWVo5GoRZjRLI
      kUNuZSqvEd6Z/nGRiMf5L776CgPZHJqikDIMfu/5owx1dW9J82c1RD5AC0Isbolkmib1ep1U
      KkU2mwUWozTz8/NNK7lW24MrisLc3Bz5fD5weuV5Hye+71Nt1Lk9M0s2FiOXSFAoFLasAmzJ
      XSK/DIqiBBvdSVMonU4HlZoftFXqcmZSeBSQBXefhAKoqkounWGH5zeVVo9oT6QAyyAVQe5i
      LvcIk2kPjUZj1XMEEk3TyOfzKIpCJpN5ou2X9U2fhKm1mYgUYAXkTGq9Xg/KF8ZisWAUsG27
      udrDPZbzDcJJb61l2R83mqaRy+Wa2hXOho1YJHoSK6DrOh0dHSiKQq1WaxLgYrHYZFcKcW8n
      FggiSXB/r6/WxfVrQeu+XrJIb8R9ohFgBWRc3zAMFhYWqFarZDKZYM6gWCwyMzMTbMo3Pj5O
      V1cX1WoVVVVJpVKB0FcqlWBXyv7+9ru7rMX9bOW0iHZET2MVqKpKNptt2nZUvl8sFpmdncXz
      PDKZTDBz3Gg0mgrYOvfKlch1w4/bLpeK1rqjjUypbuekR0Rh0FWzXLUHmf4wOzsbCLY0NeS6
      APlaKkTiXmjycSLDttJHqdVqgSLE43FyuVyw0GYrKUEUBn1MrLQBhqzfI+3rcEUIuO98yqhM
      u93kvwzyOmEhz+fz2LaN4zh4nsfc3FywOL/VOd7KRArwGAiWL9ZqQJuq0DTvPON5XrBH2GoI
      73Apt2xKpVJBHhEQ/C1NrNY9iIUQVKtVGo1G8H25AfZWJlKAx0S495eEs0Zl/n54r7HVrNjy
      fZ+5ubklm3+HhT98jtaJr7AiSqfcdV0WFhaC9xKJxJadMFui/o7jPHBHxIhm2jme4c/C/oNU
      hEajETjGKyFt2PAIIhPpHhZd15tmn+WCmnq93nT+1n+bmSUjgIxlp5fZITxiKXL/L5k8105o
      ws6nXNVVq9WCmeF2yLmF1g4pk8k8sumi3KsM1/qeoijBWoaFhYWgEEA8Hg9Cv5vRb1iiAMlk
      8pF6l62Moiik02lisRi1Wo16fWlN0vCMsfxnWVawlWpYwIINLu4pSfgcXzaKs9xCHiFEsAu9
      aZpBJTvpc8Tj8WXNro3MEgWQEY2IhyOcJgEE0ZfW1WStSMc0mUwuFrV1HGzbDnyKcASpUqnQ
      0dHxyL+PdL5lNEiGBn3fp16vB86zdKBlm+SIJe/DNM3gfsMKudKa6/VKNA/wBAiXLymVSk3r
      ilud5FbTKPyZ67rMzMwQj8eDhLzBwcFHziMKF9dSVXVZx1f6geGqeeFzLKmwd4/1qADRPMBT
      IFxqsaOjI6jcIItphcOkrRvlyfkDIQRzc3OkUikymQzVajXYHunLtGs1i+NXOkaOEu1Yb8K/
      GjZeizcY0kFOpVK4rotpmpim2bTXmJxMa92QL5fLUS6XgxpAG8U8fZyTfE+aSAHWAOl4yoU2
      6XQ6UARZelHTNBzHoVKpYFkWpVIJXdeJ39v82jAMfN9nZmambQUJadNvFMFbL0Q+wFMi7BS3
      zhuUSiVGR0fp7OwM3nddl2q1GpRklL1sOIKjqiqFQiH6/UI8SKabFMD3/baFoCLWnlbfYDVm
      hSyQFY0CzcRiy+/x1qQAERFbjfXvUUVEPEEiBYjY0kQKELGliRQgYksTKUDElqZZAYSgXL6/
      6VqlXMbfrDEi4fPZqRPU7DZlQoTgwomPmSivPiTsuxYnPvmAG3dnVjzOqc3x4bGzD9vaiMeE
      Y9Wom/dm4T27dQQQfPCzn1J3BfgWv/jlhw884fsffvAEmrkywnP58OMHt20lXLNCPN9Lylga
      H3Yac4xM2/Tl2m+N1I7SnStUYgMMD3Rw89ZtwObDDz5ecpyRKqKX7zBecZaeJOKJ41Ym+PnH
      nwEwfvnTllQIReXArm6u3pphSJ+guOMZFsau89Fn1/Ftm7e+/R0+/Ld/TqZngJmZMm++eZTj
      x47jeSovHT3MmVOnMM0aPcMvEK9+we05k1xnP6++cAiAH/3g++Q6tjFfsfitb73Difd/hqPE
      UFIdvHG4m3/7s4sUO4q88fYr6L7Dh7/4GZYSY8+ho1TvXmJqoY6IFdnba3Ds2HGEkeO5oTy/
      Pn4JhODVt95l7NKnjJVsZspV/uPf+Q6f/vKnuHocNdnFywc7+cWvLpHt7uArwzlMP8/8xBec
      uXiD8kKNd773XXIxlfHPz7LtwFGwKvyLv/hLBvq6MEWa33p5mB/86hyFdJavfmUbvz5+iYTm
      s/fwy9w+fYoL5Qw7+zN8fukycVHm2PFj+EaC/T1xfnN1jFwmzxtvvMzBQ3s4dfE6/a8cWHMB
      2Ooku4bxS2dx/KOcvTG/1AfYse8QoyNXuTpylwP7dnDy5HGKHV30Jht8dO4OarLAW2+9xVBO
      h9w2Dhw6yDtvvU46bmBoKrqhceXiRXwhEIpKMZ8Pzq2nCrz19jc43J/m2uXz1LK7ePe997Dn
      x7F9G1PJ8I23XsEA6rN3cLODvPfuuwz3F9A0HUVRuXblCtt3H+LQoYO88dIRzn16jFRXD4W4
      w+mL57k1YfNb33yP/o4Ufukm5eRu3n3nPZgdo+JZOFqOt15/Gc23MW0XRdVQVbDnrnNrdjEZ
      bW6mRm9PAYRPvm+Ib7zzTbJiloWaTdWN8e43XuPk6Yt889vf4pvvfYNLl85x6MBBDr/4Kru3
      dVCt1ugf2suhg1/hzVePoikC4UOuUEADEtkuGrXptfrNI5pQGexKMz43j6ullyqAke4i6Uwz
      VtfoTscoFgqkC10MHXqJ54c7UGiZZrctTMdjYuQcbm6YI4f2oavQtW0Xb77+Cmd/8yHmvUM9
      18XzHG5OzNLT30d1chTHsag0bAwUert7kLP4sVSOhZlxHMemWhrn4hdVXnvpBVJxAwUwTQvP
      8yh2FkllOth76DkO7RrCtRcwHZvpmVlIFalP38Z1LeZtlwQqPT3dhDMFTh07yZGXX2dHXxE5
      J57OGpQWFotguY6DY9WYLXukYirdPT2oikJ/Ps610VlKU6PEUu02oFCxLBPX89CyPbz79tep
      3TjBzQUPxywTi+XbfCdiLTh85ADv//AHDBx8Hu2P//iP/7j5Y4V82iDXN0xnPkXf4E6mbl1l
      suyye3iQbCZFLp8jlkiSzeUY7Mpx4uwlhg8eoTx6FVPLsWvHAPmUzqmTZ9lz5EV6C1kU4Nzp
      T5idq7L72ZfY1tvLQNHg5JmLvPz6G6RTSZLpDLnM4rI7LZakLx/n5NmLdPTvoiNW58ZElYP7
      d1MsFklrHpdvzfD8iy+yMHad8XmLXUNDDG3r5NTp89RMi/0Hn2dnd5wTZy7z0utfJ5tMkkqn
      yaQTqFqMdDrD8M4+zp75jIFdB+jt7iJpqGSyKU6fvca+nV385thxqjWTr37tDXKpBKlUmnwm
      Sfe2nczdusRYVeX1l55FjyXI5HJkk3HS6TSFQge5hOD89TF2bu/l/JmTpAYOsH+wiyunjtN7
      8Cgdqa25cd3TRkvkcYXP4f271jYX6PTpk7zwwotP9BrnT3zIVNnCSHfx+stHUB8hMUwIwSc/
      /2v2HH2VO3cnefHw/sfWPqc2x08/Os93vvkmUc7a0ydKhluG5UohrtfzRjwakQJEbGmimeCI
      LU2kABFbmkgBIrY0kQKsA2qzd/nRj37M1ZvjwXvXP7/+FFu0dYiqQqwDLl+6yJGvfYOdHSo/
      +P4/Renawe3zZ3nv29/g/fc/prOrm3gyTqajF7M0jZ7uxJy/xeBAL25uF255ltdf++rTvo0N
      STQCrAMGenu4cPYUX1y9yLSTYKFcYc/uQXSvhpLuIoVLKpOnND+DryUwKxVI5jn66tvc+fQv
      6d598GnfwoYlCoOuB4RgoTSHnkhj1evEkkl04eIqBk6jil1f4P0PP+XQq++wsxhDjWdQFZ+Y
      MPnJh2f49ntvPdKEX8QaKcBGqhQWsbVYExMo2ps2Yr0S+QARW5oNFwUK59KErbfw5hP33xcI
      cf/YzbrLScSjs+EUwHdtZheq9HR1YNYWKFsQV1yEapDL5dAUQbU0jaNmEXYZLZ5G8x0coZDN
      5TC0SAEi7vNIJtDi5tAWvgDHMqlWa/i+R61Wxxc+nucvKfX9uNCMOKlEHN9zMW2BrnBv710X
      IQSOZeIrOrC4J6/rOKi6hvBc/E27wj/iUXmkEUD4Dl9cPE1x36tMj1winukgqdpMl8rke3oR
      NZWGZ3Jo/+7H3V5c26RSqSAEaJqCbbnEdAMhPBzbRlFAQeC5Lpqq4nv3qigjtxvamtuBRrTn
      kcOgtekvqKWGqY6eZ6biUEin2fnMTm6P3GDk/A2ee+c9erKLNe1bKx0/KVzHRjNirYs2I7Y4
      K20H9UgK4LkNzv7mE9yOYfpiFhOlOtv7Ohm9O8aOfXvx6xrV+hz79u1BYeW9o3zbZj0bJqqu
      o2yAXVkiHo01mQhbSQEqN0ZgHW/Mndo+iBZtG7spOXnyZDQPELF1qdVqkQKsF0pTo5RqDo3y
      DJ+e/AzPd/ns5DFmK4tFZezGAnen5pm8c52rX4zhuxa37oyta/NxI7Dh5gE2Jx6lO1eY6crR
      r1ToYpITl4v0dPVw7twF3v7aUc4f/zWjopdkvUIqoxJT9nDr9hiDgwOR0/+I7N27NxoB1gca
      Q8M7URVIxlTmjR28uK+DqdFJjh49wtztC3z02U2+uHqb7dsyXLh6g1Sxl2Im8k2+DAMDA9EI
      sD5w+PUHJ/ncKVLJWEzXXQxrls/vjqNmc2RVnf/6v/x9Lt8s4VRvs2P4AM7sdU6cOole6OPQ
      rr6nfQMbligK9AAeNgrk+37TJthfFs+1aFiCTPrx9vbx+OorX29mohHgMXPlyhV+/7tf5chQ
      8mk3ZVl+M+Jy5VbpaTfjqTMxNRMpwJPgb7xS4H/9mwNPuxnL8p/8o7tPuwnrgkw6tbITvLCw
      sFZtiYhYc8YmplZWgD/5kz9Zq7ZERKw5+3YPPTgM+qd/+qdUq9W1aE9ExJrzQAWYmpri1KlT
      fPDB2u8FFhHxpFnRCf6jP/ojFEVZEjITQlBZmCeZ7cAzFyjVfXo6MoxNTNPf34PrgOfZpFKp
      J9r4iIgvy4oK0NHRQaNeJ5GM0TDvV3YQvsPc+E1SRoHZL26jaAoLMxrxpM4Xo6NQEziGxoE9
      O550+yMivhQrKkBtfpx/9qd/zs5nBuna/lVeObIo0KoWo7urSA2BEc+Qz2qMjZcZ2reTWzdu
      cvPabQ597evBYpgVJ4fWeV0u13PxH2Jia6OUgHmck3XrnZUWxKyoAK4tGN41SMNS6OpMB+97
      boOr1+7gF6AnbnJ7wmPXYBefnTzP7oPPkM9tp16ZRukcQlfVFWeCTUVZ10qgazqasfq9vJZ7
      0OsN4yHuaTOzogLMlxvsPfgsg8NDGKEfVtOTvPDaG8Fraei81HUvJyULkHu8LY2IeAKsGAWK
      GzY//+lP+Ksf/5iRu3Nr1aaIiDVjRQXoHzrA268fxVA8XBFlTkdsPh4o1Vo8x6uvvYRiWWvR
      noiINeWByXDC90kVBtjfvTGcu4iIh2HFEcBzbWbGb/Hvf/rvuTk+v1ZtiohYM1ZUgLMf/5qG
      ptG7/QDDAx1r1aaIiDVjRQVwLItSucq5T3/FtTsza9WmiIg1Y0Uf4JVvfnet2hER8RTwo6oQ
      EVuZeqQAEVuZTKQAEVubSAEitjRfWgFmxm5x9vwlzEadS5euYHsW1apFqRSV3YhY/3zpsigz
      5ToHntnL1J0R+vqL3Lx9B6dkE+voIJ9v3sRuIyKE2LBtX4nNeE8rsdwGLV9SAQS5VJzPzp4h
      lUzTuT0Js/NMT02xq3+xLo5cELP8Kdb3D+H7PjzEIpeNsiBmo7TzcaCq6pNSAPBdl1gyy87B
      Hq5cuM6eg/voLA5iWSVQCmiahhBi2QUxrPMFMZqmoS3X9mWO3wgs+3tsMb7kU1DYvmsf2++9
      euFo5+IfSYD0Mt+JiFg/RFGgiC1NpAARW5pIASKeKML3sWwHIQT1Wg3HuxcQEQLLshC+R7VS
      wXY8HNta883MIwWIeKK4rk2j0cAx6zi+oFqpLL7vmEzPlXCtGp4aQ1UEDbOB46xtdCpSgIgn
      ihFLoGsqiqrh2iYoi1Gyubl5FOHhCg2nUaFuOiQSa79pR6QAEU8Uq1GjVqthOS6goKoKtVqN
      zu5ectksqqqgKAqaqlAtV6jWamu682UUDI54osSTaXqTiyHxTCYDwsf1BJqmkc1mF49JLNaQ
      TafWftO/SAEiVoXtuJjW+i2nqGsqqeTDm1CRAkSsinrDZmqu8rSbsSzJhPFICvDYfADXqnHh
      wkVMx6RSMZmdnX1cp46IeGI8thFgfHSU7YM93L5zh/pMnWx/P52dj+vsERFPhscYBVLQDQN8
      n3qtiqpF1lXE+uexSWlPXw+Xr95kz8G9dHcOYlllBNA+CTUiYn3w2BQgni7w3PPP3XsBkEII
      gX9vQclyawIUXUes8fT3w+ALgfIQO9nHYjHev9PHhX+yfqdYZvydK6/RaIOigKGv33vSVXXF
      e1LV9m1XxBNcGiRXU3met2Hy5FfLZrwn3/dRFGXZxSMbFd/3l13/8EQN9fDDXE4DNzKbTVjk
      vWyme3oQayKVX1b4yzPjfPThh1y7Pd78gecwM7/cbvYmE+NPbmH+SsvslkMIn+uXz3H2/GVs
      2+LixQtMjN7i5u271Mylk0yeVeXs6dOMji9fltIpTzBTs6lUGg99D608PoX2uHzuDBc+/2LZ
      IxrlCrbTwHQfw+UewErytyFCNbmufvq6Fhga7ObqhXMY+R5EbRriWabGRxnr6CenWcxUbIYG
      +7h1a5QdewcpzZtMj18nVuwj5VeZmGnQv7OPYjaN4xsUssk1vQ/PmkfE+9jda3Hx7GVKdpWx
      26PseuYZTKvOyJURunu3MT09TvfAMB1GjZqj0qc6zFdqmJUFZicmEYkshYTHxGyNPQMJysk0
      sZrF2K3Piee7qZemyPXsZHtvcU3v7z6CWq1BPtfD+PgYCR1M22Ou6qC5ZSqOzo7OAo27o4xU
      O9i/PUMuBnVXYXymQldGZ67mcHD/PnT1yY5GG8suMWe5fHOKaqWC6WvsHOimb3AX2YSGMJIM
      betk/O4Ue57ZzfT4NDRmIL8TuzpL3dXoShnEEyrnLlwj/hTyThQthmVWqVfrdPZv55n9+xka
      GmKgI8PC7CSp3iGM+hRj83WqtRpaosBzh/cwduUClXKVqZlZUoU+4liYIsaevjSzNR8hbBZm
      xrn2xRTVWh1V4amXpeno2cbwYB+l0jyz0xMsVC2Gdg0RT+fpKWaolqt09faya/cuyqV5SjMT
      lKt1tu3czY3PL1OrN/C8h3PUH4UNMQIA9G3bhprI8MKBbZAqkqLO6HSFnq4O8BdzyHVNIZvr
      ZOTGTXY9sxen7lOavkVs2y7GrxzjzJjDu/0FMvlOktra27mqnqGvOM+Ck2S4v4DleeRicWLJ
      GP2pItO3ryG6drKrcZN8LoeiKty8eoOh515mauwOA9v7GLlwjR0HDlIZH2FcdLFvxwCmEkfs
      2UM6q6NlCngVh2Rn15rfX+hO6e3rQdc0uvIZSlaG7d1dJHSVnu4eFAX8ok8iHce69gU9HXlm
      KzYDfb3EEhrPPf8Ct2fq6NqT75+faBQoImK9s7FMoIiIx0ykABFbmkgBIrY0kQJEbGkiBYjY
      0kQKELGliRQgYksTKUDEliZSgIgtTaQAEVua/x/uMbBkMmqglQAAAABJRU5ErkJggg==
    </thumbnail>
    <thumbnail height='192' name='Sales by state' width='192'>
      iVBORw0KGgoAAAANSUhEUgAAAMAAAADACAYAAABS3GwHAAAACXBIWXMAAA7DAAAOwwHHb6hk
      AAAgAElEQVR4nO19WZAl2XnWl3vetW5t3V29z6hH49FYlgXSYCRZSLLBY0nIeAHjIAiCCB4w
      L4QfeIDg2Y9+5gnzYMKAbUwYDFrGI8tWWIs1IymsGc0+Pb1VdXetd8398HD7P3XuuSe3e29V
      dU3lF9FR1VmZJ09m/v85//5ru7u7zLZtHBXiOMZwOARjjB/TdR31eh26rgMAGGPwPI+fE8dx
      6niapoExNjHevJDH0zRN+TOKIhiGkXpdFjRN4+OIY6b9X56feJ74f8YYkiRBkiQwTTNzDMbY
      1Dyyzk0DfTdCkiRgjOXeX4b8LPMgCALMQsembdtoNBoLmYQKvu9jOBxOHLNtG/V6nRNTkiSI
      4xi+7wNIJwb6eEmSADh8qZqmwTRNPs68SCO4OI4nGGBWqIgwjzCJeAHw5xehOqa67yIgzgUY
      v5es+cuLn+u6iOMYjDFEUVRo7gS6j8iknufBdd2ZniWdZRcE0zRhGAaiKIJlWcqVQtM01Ot1
      MMY4E6SBHppWIcMwYFkWRqMRdF2HZVmI43jipSZJUmrFFe8lr5q+78NxHD5G3o4k7yKzIm/3
      UBGgaleb5X55oHckvue062u1Gur1Or8uSRL0ej2EYVj4XuJz+b4/08pP0PNPmR80wTAMEUWR
      cqtkjCEIAk5cKogvVdd16LqOOI4RBAGSJEEURQjDEJZlwbIsAIDrunzVTiPUoh9b13VEUcTv
      LX7srNUvizBngUjwNA/597RdJu8cefy0sYl4GWP8fdCz0bnNZhO1Wm1ibNu2oes6TNOEaZqw
      LAuNRmOmBcL3fViWNSWSlcGR7wCivN/v95XnaJoGwzDgOA6CIIBlWQjDELZtIwxDTjAi4cRx
      zF+8uHowxhCGIRzHgWmaE9eXhfxRaKcZDAao1+tTOwCdL99P3uJ1XVcyxrwQCVqek/g8Wbuh
      KFaqQOOqvgndz7IsuK7LFzpa+AzDUM6HFqwgCAo9Jy2WpmnORfzAMTAAgInVwzAMpUhiGAZa
      rRb6/T5M0+S7hvxSRJlcJiz6MFEUIYoifr6MosRHq5n4/6WlJa60B0GApaWlifsUYbajIH55
      /FnvMcs1tAjRN/M8j+8ahmHAdV3+rVTGAE3T+OJXBLTyEy3M8y6PXASiB7RtmxN/v99HEART
      xKLrOlqtFmzbhuM4nPhoq826RxrkFUs+XmQM8aOJFg/XddHtdpUfNA+LtmTNO26W2CQfl8cX
      /0YiDRGouEhFUYQ4jhGG4cRxXdfhOE4hA4NI/IvAse0AhmGg2Wyi2+0CSLdakEUnjmOuQBPR
      iQrwvARUZuUQRQe6r2EYME0TmqYhDEOYpjkhPsgffxHzyJtj2Xci7qZZSjbNU/676mccx7As
      iz87ian9fh9JksD3fTQajQm9Ieu+IjzPg2VZEzrdvDgWBgDALTS2bSMIAk4gaVxPCq4ImcDo
      mLgVyqKI/OGyVrI0iEQqy9iWZWEwGMC2baU8nHWfRYpCecSvInZRhyk6tnyNSt+RRRnR6KF6
      ZlHRzpqDYRgT9LKId3csViDgUNFttVpwXZfbf7N2AmIa13UnHpauy/vgNIZstRHPyZszcGiu
      S7Mg6bo+Zb4VmW3RViAVVIwu31d8D3krvjiuauGR/0Y6FwAMh0OMRiN4ngff96cWuuFwOPXd
      SQ/ImsdR6E3HxgDAIRM0Gg0YhpFJWMB45Wg0GnAcB47j5MrpKhQVC9KUsyJjua6L/f19/mFF
      BbAIkxXVG4qOkzb3eSF+L9kSRD4e8VyVngccRgeITjCyHuUx4yxzzrru2EQgAhGHaZq5dn9g
      vGrZts3txqPRKNPppPpbnmlPvF4WceTrVLKwrutYXV1VhiRkiRjzEH2WmVP+v0io81qGsgwH
      qrFt20YcxxM7BHAoz9u2PfEeVaJv1vgqlPH3HOsOwG8qOELyPL90Ljmhsogpa+VLY4y0HUhc
      5WQlXAVSioMgwO7u7oQ8mzWvWVf/rOcSMe8Ok7aziP+XnWQiKERFNX/aBcIw5KERi0CZcU6E
      AYDDlb1oDIemabnnijK/eIwgEnWWrTyLIWSGEfURTRuHdCwtLWFvb4/fX5zXokSTMvrMIsUs
      UaeSdQrVbkfikQpkFg2CgO8Qs4Q1yN+06DVJkhy/CCRCZQpLA+kPzWYz06Msji2vkmVEkSwL
      TpFVt16vw/d9voPRcdEJOI9iJxJ0mWCyeZFmDUsTW8icTaKQvNL3+33ouo4kSdBqteA4Dlec
      0+4tIovos5iSm9QLPPNjgSKmsqxrspTktOvKrJoik5HJjla3LLm5rO0+7/7HgbQFQzUHCnOv
      1WpoNptot9uo1WoTDETMQyETaTt92WeUxTUVTh0DJEkC13ULcb7MAGmMMKt1QXVMXJUdx0Gj
      0YDneaXHl8cto48cJ7J2M/peg8EAvu/zEAlR8SXQ81AwYxnJQP6uZRauU8MAAHjAHMmJaZYa
      +n+e0kbIclRlEVoRkYpEHjE2qazYozI7Pi4MABx6gGWFmEAeYJL100Q23/e5dz3POqiaQ5qf
      Q3UutzyVussJgx5SNKnJq6O8QqbtArJSKtuw8xxtReZKY5Fcu2iinXeOi0LWYiMjCAJuAFGJ
      KLRgqHaJo5jzqWIAgmVZU+51ETIxpzFB2R2hDMSPyhhDvV7HcDiE7/tTf5sHjwMDEOTIWZV1
      hiJ1wzBUMgyFUc9rFi1iGTpVDMDYOMw5CAIeUEVeYpI15YdWyctFlGlZh5CZpKiCrGIClT7w
      fmACyt0gZBEg5YgAxZ1sZVDGLHqiZtAyYIyh3+9zq0IYhqjX69yb2O/3lSs/UP5lpp2fN16e
      OZUxxnMe2u124VVuEdGvRw0yZVLMj2wVEr9HHMcTSVJZZkr5eBpUVihauLKuOzU7AMmF9IKD
      IEC32+UVJ7Je2CwyvWoVydtOi45fq9Wwt7dXSqmdxSR71BB3WhJbCKpdlECmYTF1VUQcxxiN
      RlPH856/VqvxeCJKvs+75tQxQKvV4sfiOIbneeh2u6nmQXmLLUIcaYQpHhd/iueqxpc/gmEY
      6HQ6U9Uy5sFRKoxZ9xTFQ9HwoPISE0icVVl7GGOpBoOsZyRGpOhhyhvIcxKeGgYADuNtsuz5
      IhGSPVlexbPCsMVxAHVYsyzWyNcWAWOH1TGK7lBFmfckRCVd16dW7SzfCxUxkK8ZDAYTNaJE
      5D0XeZA1bRw1UCTF8tToAMBhOMTKygqGwyEGg0Hmi6LE+OFwyF/GrNYXkSGyjpdZiamEi5jh
      NOtKftxEr1JY08K/5XfO2DgQjtviBYPEvI6+sk7HU8UAwPhlUp6ApmnwPG+qpgyt2rQayLWC
      yrxg+VyV9UgkXJUIJh+jedBOJFebK6pkyyLYccYEpe189LzyO1Gdn7aLHydOHQMAhzuBaEkQ
      IzLpxY5GI144i2Jz5DKNaePP8yFUekPWvcSfRc4tMu5xQJ4zKbRFzZm0QJXZ9Wq1GkzTVC58
      s+BU6QAiiAlc18XS0pJSN2BssuaomMg+Sz2Zo7BZq3avRUBW5BetG6jCoMu+07LEDxw6QcWq
      IfPg1DIAcMgElmWh2WwqK86FYci9r2RFoqjEspGl80BFgMS0sgd10Shr0p3nPkC2ozDN+56H
      JEmwvb2N7e1tHndEqbXz4FQzAHDIBLZto91uo9lsThE2mUpJaSbluEyyfNZqpTK1pjl3ZPGI
      lHRRP1HFNOWNnzU3eX5HFVGaZiVTmUXLIooi1Go1XlaHinHNWwz5VOoAMogJROWXiuXSC2KM
      YTQaIQxDdDod9Ho93Lt3b8Ibm2XSLPLRxPOpThARtmmaPKVTNZZoDSpLIERoixAJZBDhyjm9
      KpBCPytjicYKeYw4jrGyssIrcNB3nhfvCwYADplALMcXxzF6vd5UdTJyQCVJgmeffRa9Xm/m
      4Ku0lZTuSUTd6/WwtLTEGVLlOEoztYqFZ0UGEn/OagXKYxp6L1m1/wmq8Af6fxHmHA6HqNVq
      yvdJupvnedjb20Oj0VjIDva+YQCCvBtQkJa4VVK9Gso8qtfr6Ha7M/kG0q5JMwWqdhvVuaKo
      IBO9yhw6KzHQ2GnMJ89Vnm+WZarsnIioVdeRsSCOY+zu7uLhw4eo1Wpot9uwbRt7e3uwLAvt
      drvUPd93DECgolqNRgN3795Fq9UCY4xv5WLVapWSqHLzq2R4wqwOtjTI8xDvsUiU0SfkuaUx
      jeo9FoFYQTptJzFNE5cuXQIwZobbt2/Dtm2srq4iDEO8+eabuHLlSuFiC+9bBgAOd4NarYaH
      Dx8iSRJuAaIVRdM0XvNf3CUMw0Co+7gT3EY33Iel2zjvXMKKuY4onC7PMo/vQDQl0v+BydU5
      Lw7mcfALqFCGaYueK5pdr1+/zp/dcRxcuXIFW1tb3F+wuro6dZ2I9zUDEFzXxfr6OjRNw2Aw
      wL179+C6Li5dujRRye1QYTXwTvA6Xt7/K4ySw4A1HQYu167hk8t/H3pkTDjfADXh5kElRoji
      RRFFfJHEn7bLyb4UiuVRYdadSjZpFnkuea62bWN9fR2MjcMtbt++jY2NDRwcHGBvbw/nzp3j
      2Wa2bUPr9/vsKHuEnTRI6RVLqYgfyLZtridQut574Zv4y52vgkH9ATacK/jc6hfBUhyRRERJ
      knDlbzQaodFoKJtlyNfRHFX/0u51VCAmJ9HEsixEUQTHcZQV3+aBypolKvf0/GIoiQriu/J9
      Hw8fPkS73Uar1cLu7i6/j+d57/8dgHQBWcShFyR3Lon0EN8/+HYq8QPApn8b73lv4Qn7aaXJ
      jkx0IsHW63UMBoOplkF0fh4Rq8SgNOIva33Ju6/4uxhhWa/XeRjKIkBVw8XiWOJuWpbZaUe4
      ePEi///Kygo0TeP1Zk+9IywPmqbxZhYqiFu8pmnYiR6gFx3kjntz+CZ0YzLBPqsStbiKinMT
      f8rzTpsr/X5ccr/qPuRTofdKopGMOIqQFHRWOY6j3FHSiD9rl1Rdo2kaarUalpeXsbS0NDaC
      FJrZKQYRqFhlQOVkoRW7H3ULjTuI+5m7RBpUmU5pq7jqWJHS8MBscTZZY6ng+z6iKEKz2Zzo
      CUZzBYDXX30F77z1ZuG55KUwyvMqKioCQLPZRLPZ5N1oNE17/4tAwGGBXVHUEEUKcdVx9WkR
      RQVHd6EhPylehGVZ6Pf7PDo160Or/pZFRLTrUJzMcYAqPFAGl0qh//BPfxQAkJQgavF68Wce
      snZF6lhJdEA4EwxAu4CqE6HsgFq1zsHRXfhJdmLFJfcqWKJ+2SoLDh1vt9vwPE+ZRqgag+Yl
      Q7xON3R849YL6PldPH/jS9CSxa3+RSDOL624rWjfybIgZY2dd16aP4N6E6ve9/teBCJQeERa
      5TISK2po4JnmRzLHapvLeKrxbGoB1zybveu63OKUhiyLj6wLDKI+vvLG/8HX3/kaNvt3Jiwn
      xw1v/x7+4Pd/H99/8x5GB/fxx//99/DnL72O0cEW/vC//Vf8+PZu5vWL2MFEvYzK5wCH35nC
      OxhjZ4cBAKSW6QYOiSsMQ/xk42N4uvlhqMomtc0OPrv2eVhJsdJ9aQoxdZikc+g4UN6OXjcb
      +PzTv4Sfv/GL2GhenmmMLKQpnyr84OUf4pPPfwkH7/4A270IP/elX8Pg/rt47eXv47nnfwmv
      /+C7mZqTqnWSfC/S6VQdZcTdt1arcRP3YDDAwcHBhAk1DMOzIQIBh9Ygap6tAn3oKIjw8dan
      8WT9abwzfB0H4R5s3cEl9yqu1z4IM7FSt+Ys2V1euVutFoIgwHA4RLPZ5OeWJV4WM3zqymcB
      jFdQaEdbJULF0IQPPfsT+NM//SPsDEZ49mc+i9df/g6e/qm/jb03X8XaUhMd10YEpGpPql1R
      JGrDMHDfM/DOwwiWruEnVmzU9XCq7DyJmWJHIcdxMBqNeCfLwWBwdhiAkEa4ssweBRGW9XX8
      ndYG/yhJkiCJk1zrT5Y3Vz7Ptu0px88sxCs7ixYF1Qqr+p17ii0XTz55Hda2j4ff/xre9ZeR
      7O5iuRHi6y9+HaNQhwUgTQOo1WoYjUZKf4mu69gPDXz/QYix+sXQ9RN8+rIFJIedhhhjE3WK
      aJ6UME8VBhuNxtljAHJIAchNpiBlreiqLHtxxYT3NCYIgoCXez8OzCpmZY03oQTXGuisnscz
      H30C2mAHydYONNfFjQ99Csa7t3DuypOZ44lORDmkRNM0bHsJRNuDFwO9EGjr0wF0qt+BQ31w
      NBqdPQagLZD62ZJYlGeSFF30RDxhGGa+dPIy0zVlLBpZzjF5nLK7hhxyIf5MQ9rf5R3BqrXx
      9NOPQpJrG/jJtQ3+9w889UEAmPKSy8jazZZsHRpivgdbOlA3x2KgeH1ewWNNe1SIN3UW73NQ
      6TzqVpjXkodWJnJkaZo2Vc5EvIbOLwLf9wv1xsr6oLNC9ovIRJckCYbDIZ9fnmmWdlciQJW5
      UwxtUC0M/X4fS0tLyt3qXA344IqJdw8imJqGZ1ZNOFqM+NE5VHbRcZzMXYBw5hhAfhG0qlM0
      KKVSUp4xNXUgP0Kz2VSuwKoXTIqWSp4FDgnBcZyxRUJy0sjIYqhZSowUgaaN+50VyQiTr3Mc
      Z6pQVd4cqadY2rOyJMZTSzpudGyAMbDk0ItPZk6Z+LNw5hhAhKZp3DkmVhqgl0nyuRxfQsjz
      VDLGeJ5rWkGtJEm4d3g4HEKOzC0rOtE1eeccNagOU1n4vp+6YBDGPht1CmuW/gBMi6lnigFU
      L8wwDF5EVawZSrZm1eouv8Qs+ZiavqURHnkogbF+kuZBLssE80B+pll2lSiKMv0uaaAI01qt
      VrrkCYldclFc8XlkRjhzDCAqWFnyrHhN1t9kk6f897TgLtX9bduG53m8YrJoTSqDWZkgTfGe
      dTw53KMoarXahAFBBVXcEXmAxfeV9o3p+JlhACL+VNlSeEGzrHiqnSAIAjiOU7jnbdHYfRLP
      suqUyoqmfA7NIY1A6XgYhhN9GYoiLfbqqEDPohK7RCYYi70mjHgbYPHZYQAgfWVcRLO5tNgd
      ABOOtDwYhsGtQqoxKY6FWkOlQa64nHeOOGfxXZQVY0gEobI0RXbZtHEWCWJo29Jg7P0xtN53
      AJyhYLgyWMTL932/dKtPYFz1oF6vT6zwxKDUOaVsx8l5nkcU84qCHIhB/wBGRthE3n3LgkIl
      VDkXwCPmDN6F1vtrfuxMMQC9VFlBEqEKvKL4/aIwDGPK/p2mSGet8r1eD8PhEHEc863dcZxU
      v4U8/iK9vkUZgUTNKIrgbW8hCaabXRylJcp1Xe7tVwXWIe4BODx+5hhARThpDhPTNNEYRGjc
      2Ue9F050dMkihjQHj3yOBcC8twlLIYq4rotarcbb/ZimOVHqPY+oixKrjDRlPq+rjowoiuBe
      fALMmt4FizDAvLtWo9GY8kEkSQLmPAlmLPFjZ4oB5A+YRiREwE7IYN/Zg7k/gn1nF06QKGVa
      lUWi2WwiDMPU6EbTNJF8968x/J3fAfvxa6kWGPmf+LciWJRZdBaITUmOC+J7oZ1AVIz9pAl2
      4V+BNT8G1vzo2VKCxY+RF48yPokB9PHZo/8/koTyYmioc6LqHNodzKduwP7Uz0K/egVRBpFl
      Kdh5KCu/i/dbpAgljl1kvHlNuXR9s9nkPSLIROppyzA6vzpeiGa6yymEKg0vT4wJXRPmWgvG
      /hDxUg1hzQQTOpynQRa10gg4XFmB8au/jDCODxntMYG82yyKCRZt3cm6B31fx3Hg+/5EOAcv
      gnbks3kMQBYUYoCiDqYgDJGca8DYGDe1jhTdXIquVKpzGWNTTJk15iyreRbyfB+iY2lRhJvl
      OSeMRqOJUvLyc6scYPS76hkYY6lWuTPDAGEYFpZHxZdKlQ9UyLNxq0on5hGw7JySP7Y8v7yx
      suZXZKw0L/esKDL3KIrQarUW0u9AtPyp7n0mGABAKQYoiiLjZcWhyMhScrOU7iLQNA2RBpia
      DjZDkNoim2/kMUG9XuflFxd1v7R3fqYYgJC1Iorl0o9i1VNZjIpcP6tjiGAYBr761hu4tryC
      n1heKbUYDAaDqXKFQHacTd45jI3TQSlUhK4hsWvRvoK0ReN9XxwXGK/UOzs7UxlcMkTdYN5t
      n8pviKEEs5ox5TmTWa9sfI7xSAmMU5JUVPOa9V5FkCTJVI0kCgURE2LmvQdwKAGIgYbAGdkB
      UrlfChojLGK7L2K6zJO9F70KqghfvF/avI7Kc0tNSuietPh0u92JqNh570G7je/76PV6E2mq
      Z4YBKLsrbaVbpKJXBEdhY18ETmJe4rvXdR2rq6vwfT/nqnLjkzkUGO8GlIdxZjzBlG4o24iB
      yQ9wnIwghhjI/8S5le2pe5qget9yKfss6LqOKPCh57wfYgIK7aYsvTOxAwBjBqCEaSDdJCl3
      ZBQRhuGUTC8qzOKYURSlxs/I99Y0jW/5qp1JvlcYhguzkBTBUTJfmrHBtm0Mh0MuIqXNq7e/
      i7d//Aqu3XganbX1XB0PGFuZKNH/TDFAq9UqnKStYhBKk1w0NG2cyEEtQmVmIoitV49rRyjj
      7FNB13UEmgdAg83UyUEquK6Lvb29zHMYY3DrDXRW11BXFCuQobJInRkGABaTW3tUCiEwWQ+n
      0WiMQ4ofMexR3ldGWTNtFnxthC8/+J/QNA3Pr/8KTEwuIGmMTOJh3jczLRvXP/hMYaOBpmno
      dru8neqZYoAixXGB41eIRYgiT71e56Y7KqRLOE6GKBPu8eDBAzDG0Ol0xuVJwJAghsY0ZUlJ
      Mk/KHXwoonY0GmW2PC1K+HEcc5OraPY/UwygguoFLtIJVgZi6Xbf92FZFur1+kItIotAmnMr
      jmP0+31cv34dlmXh4cOHiOMYP7f8JQR+AHg6tg+2EccxNjY2sLu7i93dXaytrcHzPARBgJWV
      FTx48ACrq6uwbRs7Ozu4cOGCch7yoqWaozg3qigt4swwwFEQdJFYmzJjif6HKIp4kaharca7
      WNK5VMBLdW+6bhaZmI6T6EHZaXJhLPFaakKuaeM2tLdv38ba2hq2t7dx7do11J063tt6Dxee
      aCAMQ2xtbWF7exue5+HcuXMYDoeIogjnz5/HzZs3sba2xq12S0tLKALVIiaC6i4RA9DfzwwD
      AMgNagOms7lU8nCaA22RIC+p67q8dpE431arlcrUaS1Zi0K1mqYxyWAwmChF0mw2ce3aNT7n
      u3fv4vr167yV0v3793mLVXJ8iTvuxYsXMRqNsLm5iStXrqR+s7LvPoqiqYy+M+MIA8arokqU
      UMXmyKZS8e9ZZtJFgcb1fZ+XTKTVn+6bVbWawjBmZYAinnDZUsUY457dra0tdDod9Ho9NJtN
      LsoFQYBarQbLsrCysoKdnR0EQYD19XX0ej3s7e1xSx01u6bapKLlS+XLEX0ndJxCK6hJBhUo
      o2/qet7ZiAVijKHf7yt72ooVn+mFixCJLIqi1Gpx84BEGmqSQfOQdxw6RsfTCNXzPK5AzwJq
      L1SkETU19yBRKWvMohCfkaxgVC6R/ibGa8kxVuKxIAiwu7uLjY2NyWaIYYjWN79xNjzBtBJk
      QfUy6Vrx90XUEMqaZ9rxk1DM0+5Hx+ldyO+EWhcZhjGxY8p6TlqijTgWhUaTgYCYk8ZWfS/a
      AUkXsm17wrNsGAacm+9CHw7PBgOQA6vZbBaqGy9D3FqPCuK2rbpPmV1nHkYpYgIWd0rqtUWJ
      Q0mS4LXXXgMAPHjwAP1+n4tsuq7j/v37AMYi6a1btyauo7RV+hnHMa9Mt729PdNzEdPInndz
      ZxvAGVKCDcNArVbjxaXSFDv6qSI21QdYpE4gy7BZOI7dQFb2VVYjkcDE32mh8X0fW1tb0DQN
      V69exWg0Qq/Xw/7+PjzPw3A4xPb22DR67tw5jEYjnD9/fiJ9Vdd1tFotHBwcwHVd7o0v8r6p
      OIH8TdkjhfhM7ADA4YsUnSp58mORMQE1wRqGDgNDGFp2O1QRWSKWZehw9Bhmhign7yJldABR
      ZKFr5cA8Ok9+Z1SzSBRLxFW33W5jdXWV7xT7+/u4evUqGo0G/510FipjQqKO2KvBsqypLj1F
      QEWHCUmSILx0GQxniAGAQ+UuC2WZQAXTNLF983/hh1/5F3jlxd9E0HtzrvFsU4f93d+B+X9/
      E87mt5WNNGTiT9NnVMxlmAbuDe/gq+/+X/zgwfcmu1orkLZw0D1WV1fx1ltvYX9/H61Wa4JB
      LMtCu93GzZs34XkeVldXcfv27YkuNKKyKs45q9Zo1vslCxJZAZMkgX/xEsLLV86GFUhEFEXY
      3t5WvkC5FicvnWGaMA0NGouhawCDhgQ6EqYprR+O4+Dl//3LCP1xMNe5J7+Iqx/5rUw/xHA4
      TG0M4QbbMP7kX0KLPLDLn0Dw2d+eavUqEkoQBFNWoDTrka7reH3vVfzuS/8JfuxDg4ZPXPs0
      fv0n/zniSB2SLIqKZAWSy8Co4nhks6lIzEWcirqu8whR1bh5IhGZhskZZp2lcOiiEOVey7Lg
      JAPY+6/C6t6E7u9Ci0Mw3URitxG1ryFcegqetTy1atU7H8DB/e8B0FBvPzGXTJ/Uz8G49vfA
      tn8MduP51BLgWWOk3d8wDLz4zlfhx+PVkYHhe3e+jV+48QW0TLUXViY+1d9VRJnlrS0qz9u2
      PRHMVgaGYXC/iq7rCJPkbDJAWrNsUXRwLAP17e/Dfvgy9Giy2rCWBNCjIczhFpwH34e98gyG
      Fz4BPz6sqf+Bj/977Nx+AZazjM7FTyPKSfDIIoAgSsB+5t9BTwJEuotE6n+bdr24smaKCNqk
      zKNpGnStWA7wUVrGVKA6qfK9s3Ya8biu6zyspNVqnT0GIItCt9tNFUlsPUHjvS/D6r6TO56W
      BHC2fwhjuAXj2ucx1MYx/UxrYu2JXx2bAOP5y7GEMQNgAQLxpzGAvPpm7Q5RFOH5D34Rtw/e
      Qz/owdAMfOaJn0fbXsrNyipL/DQPXdOQ9EbQmi7iGZx1aeKSrutw4j7M/l0k7pkIRnUAABoe
      SURBVAo8ex2h9I1JkSZ94szpAMBhoaxut8t3Avo4tqmjcecFWLs/Rlm1NapvoPfkL8OLyhNG
      lg6ggqzMizK453nc5Evj5ymJu/423tp9A2v1dTzRuQEWF3O8eZ43pQMQ0kQltt3Dzv/4C6z+
      k08Dq/mJLCJ0Xeed5OV71tgQzbf/CHrQBdNMDK//Ivq1q1Pn0f8tyzpbViCCpo27Q1L1MdF0
      5+79eCbiBwBjuIn6/W/BNMuVEKEPUoYQysrPWYjjGEvmMj5+4e/ieusDSKLFFBBLs6iZa20s
      f/E5mGvtCe9uEYYTW6IS6PnNwV3owThvQmMRrP03lL2cSQ9gjJ1NBgAOmcBxHB7EZekMztZ3
      ZiJ+ANAAWLuvwol7peci/iwCUcRRWbRmMeXOEuaR5b1OQwwG4+q60O89H2nPMuH3cJbBtEOp
      Pq6tTywu9M9xHAyHQwBnyBOsgq7raLfb8DxvbB7r34EeliPeqTFjH9bBOzCWPzJTn1xCnqWl
      LLMcped41lglUUfJgxh/lDbWyFmHdu152PtvIK6fw2jlI4ijWMmg9XodvV7vbDMA8EhxetTR
      3OzdXMiYVvcm9NWPFmaAPIeV/HdR/k+z/qiOHRUTyEFuKqQp6WXmpNrZxN+jKEa/fg1G68lx
      QFyKH4N8PM1ms2IAQhzHsL3sKgRFoft7uXVqsqCyl8sWn7y4JULe3/PmMC/TqFZfWX+ZhQnk
      Y+J4KhO3fG+6pmIAHK5gWpL+4kqNl4Qoq0iIH7Fsaca84L1ZibgIE6i8ueL1iw7qyxoz7T1k
      hU1UDPAImqaBGenVB8qAGS7KLrqe56X6JQhpxCIH5Y1GI2WIRl4cTd5OQmCM8WC30Wg0YUoW
      MSvxq64Tg/RM05xKbi+jiFcMIIH0gKDzVCHnVx7Czg0kScLt1UXgOE7hc1UrnUjE1Gt40f0Q
      6B5RFHECbLVaM481y44hVtsrSvTi+xIrb5yp0oh5MAwDyfKTYLcNaGwO6w10hEtP8kpvlNie
      h7JWnSLHykIWY1QiFOXoymHlorgkzoX6LOfdqwzo/rIZOC24TryPGFHqum7FAARN02DWOwjW
      fxrOg5dmHidqX4fvnAd7ZIFwXTe17ifdF1hsTM0shKUKnUgbhxpbFAH1ZMibk8qvobqGsvvK
      5mbLzzMYDMY+oEJXnxE4jotw4znE7tpM1ydmDaOLn0Qoxf4QE8gIwxDD4ZCXFnmckKdvLAJp
      jry0Y3R8XtEuDEPuIX683vpjgNrSOXhPfgGJ1Sx1HTMcjK7+A4z0tvLjkTgkiwck+x9nteei
      KOvhVaGImVb3IsRvb0Hv+/y+4k95PlSxQjyvzFxpjNFoVDGACE0bpwU6q9cwevrXETWvFHLW
      x+4a+k/+IwxqVzJXJ5kJNE2bkEkXhVmJVhQT5BIs8nll5pJl7dG8EA//y9ew84ffxO4f/CVM
      Tc8VC2U/gvwv7bko5sh1XbiuO+4dXPhJzhBM0wSWL8F3fg3a9muwt38IY3gfmFCONSS1VQQr
      z8LrPIOAGTxOPw2MMdRqtSklMg9ZduxFIWvMReon8j3DzV3EBwMAQNwbgfU9oH6oNMtOPzpm
      GEZpUUgcq9frjU2qi3iQ9yNM04TeXMJ+9DS8ztMwoiEMfxda7IPpFhKng8hqCw24i3+MRqOB
      wWCgDOlNg2jGO2rICuM8MnceY5nnOtDrDpKhD73hAnUHLMcKZxhGbqyU+Dd5R6Fo0rW1tYoB
      CGmOKFppEqsBZk/qBdojm7uq6BbVtQEOP4JovyYmKNrtxTRNMN2CnwANE4jCYKErc5asPk/b
      0ryYH1a3sfbPPgf/3S3YF1cRawyi3KkSa+i9qnZG2wD0/iaS1qVHSUTT86E6pYPBoGIAwjh4
      KsLuzgM0OusY7NzDTneEcxsb2N3cRAQN65euolO3weIQ9+7egd0+h46T4M7mNs5dugIrHuDO
      1h42Ll+GIXlOZZA4JFddVsE0Tdz3DfzNwxBRArRsDR+/YMNM1ExQNraGVlSxQUfWmKpVNe8e
      aUiSBFiuw129UcjCI5tLxfs7pgbzxf8IbH4P+lNfAHvutxAl00zS7XaxvLx8dhNi0hANtvB7
      v/uf8e5OgG98/avY3NzEyPfxcHMTf/PNr+C1Bz4Ahrd/8Jf47o/ewfZ+F9/5xgt45+ZbeOGb
      L+Ev/uzLuPXea3jxWz+aGjuLUHO9n7qJV7YjhMl4cewGDG/sJanlHsus1omu4a/u3cZe4BdO
      SimTa1DUbClWiU6bBxE8VXeQn1OPPeDgFjSWALtvQVOYMHzf543ykiSpGICDxfjud17Fpz7z
      HABg/8Ed3H7Qg1tv47lP/QzaV57Fc9fGbv933r6Dwe497A98dDp13Hz7FpqdJXTadbzz9h20
      lztTw4vOJfHjOo6D0Wg0db6IMAbkJK1ByDLFliLQNA37vo83dh7ibr9bWrkWiTUtrIGa3Y1G
      I16RbxbIq72sA2iahshsgn3834Bd/xzYx/41IjZ9L7kbTSUCPYK/fwcvv/Ij9Hbv4uqnO/jC
      P/23MA9+gG+9ch8fW9nB6hPPQH/0PpdXz+HDz30G3/7Kn2DPruMf/8av4IWvfQs9JPiN3/iH
      +H8vvAY8c2li/LRAMbJoxHGcuqLXDIaOq2FndPjRLzV1RFGoVAbLrM7rbg2/9PSzWLLVDezS
      vLIq64z8XPSTehn4vs+Z3TRNXm1bpdjLzE1ETrFOqpCNKIqQbHwCxuWfHe8QUvHd3d1dWJbF
      GYAxdjaT4lUYDocIwxDbd99C0r6Mm999AW/uMnz+C8+jt/UO1q98ENboLv78b/bxiWdX8eWv
      vIhLH/4Urli7+LNvvYKf+uTPYdm/ja9/700895lfwI2NJURRlEqgtKIFQcCrKadhHKlq4839
      BP2A4WJTx8U6Qxio+x1QHf6sHgJp95GJmQhdPB4EAWzbTj1fpbjKVaHJG0s9BKhyHC0EIuPR
      e6QdxfO83GhQecelzjTXrl2bLOJVMcAYxABZGA16SHQHjVp+q9QwDLmsqlrN6P9ETHkgZZWs
      SaIlRCY2YgBe+qOkUiwyqHiM4Ps+j22ahQFEkOUtiiL0+33eE42iWWULkmma8H1/qhKF6p4i
      A3ieB03TeFU5Q2Mwt16qRCCC67q55khqYJGGIAgwGAxSC8qqiKOoFYW8xmlOsbQxi9rLxfNV
      IQgqkSNrjKIgK5hpmlw0IeKXmYZ0jm63i+FwiKWlpameXyrQDiD2GzO3X4X24n+oGIAwj4OJ
      PhZ9QKqJL0MmVtVHVkHlCc0aV95x0uT4RSIvFKEsVO+FsXG64/LyMhefslrfitcNBgPU6/Wp
      3bZigAVALNlNTe329/czQxjKBm/lEZEsjmS1OJKvKzIPmkOaTyNtjFlEsCLzoV2W1/dROOvo
      vlT2hs5hjCFa+xDMz/12xQCLhqZpXKkVLSEyIdB23u/3eWx7Gsqu4LKynXXevKbULCbPuiZN
      v0jb5VRzDMOQ932TrU/0O41HDfi48SFiCNf/VsUARwFN03jQW5Ik8H2ftwICxroCKbJra2uF
      HGKqD1xkHlkEWWastJU/7b5pc8nbLdLurWII27a52Klqbig71CiVU3yXFQMcEbrdLm8NRAoe
      lfSmD7O5ucl7YtGxLAIpIzIVxVGeq2kadMNADAPbHoMXMVgGsOKYcPQEUUaPAxFFdqki54i9
      ggkVAxwRzp07B8uyJgLsZK/plStX0Ov1OKM0m02+TT+uICIV44bSvMC6aeHtLsM7+wFCYYHW
      AFxq6XhmxYE+RymaMu+p0WhgOBxOMUrFAEcEwzB4+T3Z6iPK6J1OB0tLSwiCAN1uF7du3YJh
      GFhfX59oDn0U8H1fqShn+S0ATFhe0kQj07Lwo90Et7oK7zKAO72xU++5Cxa0OCgl/qjmKouR
      ohMPAEajkVLXqhjgCGHbNtcFCPKHAR6F8do2VlZW0Ol0EEURHj58iDAM0Wg0eLf1ohDHTpKE
      J3+Ifye/wurq6kSXR1nhVjGCzDQqp9fWSMPtbnZc/77P8Npegg+vmDPVUXUch3vSxeeSHWSk
      f9Xr9akxKgY4IqQpoOKKRvnAxCCMHYZGbGxsgDGGXq+HnZ0dhGGITqdTqA6PSJCj0Qi+76PR
      aEzNKUkS3L17F5cuXVqo2KXpBt7rFqv9fK8X45kVCxrS+5Glzc22bQwGg6nFQV5ctre3sb6+
      rhyjYoAjBJXwCIJAmWxDQWKkHDPGsL+/P7EaNptNNJvjJhIHBwe4detWbhEt6pIexzFvlkHh
      Liqz4+3bt3HhwoVCuQlFkGg6un6xFT1iQDcAOmY6oacxAcUUyZXiZH9LrVZLdThW4dBHCCoK
      lUassiKp6zrXCWRiJH3h6tWrWF5ezryvKOvWarWJrV8mpGazifPnz2NzczM3FqoMkhIbiiJx
      qzBardaEiEmgd+r7Pl9oVP+qHeCIoes670ooy6aDwYB/HPF8sSG0ClQYalbISqNlWbh48SLu
      3LmDS5cuza18axhnZw3DAnFOAGrG7In3uq5jaWlpQhnWQobuvV0sXV3lwXP0PsX7VAkxxwDy
      A4iBdPQRyCGWFT9zHPE7wNhqtbGxgfv372N/f3+ucTUW41ytGGk1LA2tHP0+izmSJEEQHKaG
      mqaJN77yQ7z6J9/Du3/+KneW0aLhOA7/ZxhGxQBHDRJtRJFGtKSkmSHnWeHzkBa4Zts2Ll68
      iCAIEATBzOMncYwnOzrcvI7zAJ5ZNRHH6VWx83YGVYkZ07Wg6RpMN52zuKe4ygc4HkRRhMFg
      MCGvGoaBTqejTIiJ4xjdbhe+7x+7YywMQzx48AAXL16ceQfSdR29xMLL90OMFPRtaMCHVk1c
      bowzt7KQ5QsYDodotVo872I8tgFvrw93pYkojqaupdZYYRhWOsBxgSJFqR8ZkN2UjnQBcXsv
      CyKKskQsBvPNygBJkqClh/jkRQvv9RJs9pNHoRAaVmsanlgy0NRjxFGUGxIu6iuqgEI52JBp
      DM5KAwmbfr/0Heg5KwY4JlBZPlEZZoyh2+2i0+lwxVP8wJRQPg/KRpKK9/Y8T+k8AsZ1lHq9
      HjdDkrNONEeOlUwfN1oGnu4cKtZjE22AuID5RxWxKnrWxXvKIRqWZSEMQ26CprE8z4Pv+5UV
      6DhBq1W73eaEA4yJgVIBDcPgTAIc+hHkorrHgeXlZdy9excXL16cMslGUYTt7W0sLy9zb2wc
      xzg4OMDa2tqUY4p8EjLK5glQXP9oNJroO0CZfBRhG4YhLzycJAkvQKYct9IBjg8ky8ZxjCAI
      JuKEDMNAs9nkCrCu6xPnzVIHMy3mviiiKMKdO3ewsrKCZrPJGfPBgwfodDpTijpjDLdv30an
      0+HOPRVmSZIBxu9oaWmJV89I2xnodzEuSFz1bdtGGIao1WoVA5wEqM2PTNy0QyRJwle1OI4x
      HA5LK8N5SSdlQqv7/T52dnawsrIC27axu7uLixcvTp1L97l37x46nY6yAPCszAiMIzprtVpq
      +ZisZ5DzKcIwrCrDnRR0XYdhGLBtG+12mxMEufZFEYLEC3KmZSHNvClC9IIWgaZpaLVauHr1
      KqIows7ODi5cuJA6LjAOBd/d3S00flG4rpsZ0pAFEp/ovRuGwVNXKx3ghKBph2VOqFAuY4xn
      kZHjjJpnUFTnIhJmZoGu61hZWUn9u8hQFJsj90cryngikxKxkli4aMdgtQOcIETFjkQexhhP
      oSQvMv1rtVqpK2BeOuVRK9Hy+Ovr61MeZbLS5M2FZP1Op8NFqaPKjagY4AQgy+cApsyHvV6P
      V0SjrduyrJnbkori0XFYlMg+rzLjZs3BcRyuYFMJxKMMB6kY4DGBHC5NVeUIojhA1qJZcRRM
      oBpzY2MDu7u78P3pEo4qkO3+OBsGVgxwAhBDdUnckb2cJAqpPJnNZhNra2totVoTDrSjXCln
      ga7r2NjYwM7OTiHFnBp8H+dzVAxwgoiiCL1eD91uF3EcTyl5VE1ZVfKDRKK08uSPC0hs29zc
      zGQCwzCmqj4fByoGOEGQOANMhiyIZtF+v5+avC6aRnl0Yw4BHaX8nyZaUYIPeWPlOdJ7KNM4
      cFGoGOAEQb4AsnKokCQJr1wt6wS6rqPVaqHRaHBmyGKA41B+05iAqj6rdizR13HcqBjghKHr
      Oq8HRInrMiGHYYjRaMSLaBFEuVlMes9jgiKmyHmgsjbVajVlvVQASvHvuFA5wh4DiNYP6l1F
      CjIREnWxpPQ/MWNM0zTuLAvDEMPhMJfAy0SJihGZZUIoxLGpMwuVJ0ybz3Gj2gEeI5CZs1ar
      8fBiMRY+iqKJfAIRmjauR1qr1SaU4ywUJehZV2Z5t1lbW8OtW7dwcHAwdW4YhifCBBUDPIag
      HWF5eXmiQgQxQZF4n6IowgSygl6WIcSI1xs3biAMQ9y5c4dbvxhjcyX+zINKBHqMQfkAYolF
      WlXTlGaKvZcTb+aBykIl7kxp95DPod+pIvbe3h4ePnzIxaL9/X3cuHFjrrmWRcUAjzko8cMw
      DERRxItspdnMxawzsQF22XyColARuervMhhjPLiOQq6zcgiOCpUIdEogrrQq5xhwWE2i3W7z
      jihF/QNF7q8i8rzo1Ky8YnFnabVamdXujgrVDnAKoGmTBV/DMITv+8oISWICsroMh0N4nscz
      zFQomvyuIuh5rE30N9M00W63Sye6LALVDvCYQ9O0qUA5irLMqqhMPoJms8nja7JCimfJNitj
      Es061zTNIy8Fn4aKAU4ByGMsglIq8yA2iAOKVa3OOm9WiLqIHJp9nNGfMioGOAWggDLXdSeU
      zqK5veRtVnV3F6FigqPw0Kruc1KoGOAUgMSZdrs9kQtAjR+KNJegHmXz5NTO4xA7KU9vHioG
      OCUgGb7RaKDdbsM0TYxGI/T7fZ50kucco1RDVSlGGUeRMPM4omKAUwYKeaD6OFRhutfr5e4E
      ZCEiJlBBVUKErFBiTFBWbnLRvOXHYWeoGOAUgkSiTqczUT/I87xCTFAkwV70Ouu6jldeeQXd
      bheMMbz00ksTlikKxaZa/KKeQc44+pnlMT4JVH6AUwoSaaitahAEGAwGMAwj16FE0aNUjkXl
      VJNXf9d1+fjNZhNBEGBnZwe+7+Py5cs81Jl2qHfffRdLS0ucUYbDIa5du6ZM8TwpEyhQ7QCn
      HlQDEwAvn1IEVI+I6u2oIBIrjbu/v4/l5WVeut2yLDiOg4cPH2JlZQVxHPOmfOvr6/A8T1lI
      S36Gk0LFAKccJNe3Wi0sLy+XaqdqGAaWl5cLVVyr1WpYXl6GaZqo1WpYX1/n2Wz9fh8f+MAH
      sLu7i3q9jlqthiAIcP/+fXQ6Hdy5c2dch1OIJhUtSycpAlW1QSsgjmP0ej2MRqMpOV10oNFP
      VSiEGCIh2/jF6FS5UbimaZyxTgKVDlCBd7Wn5Hs5fFl0uMmxPWKmWFqwHJ0jMs5Jij0iHo9Z
      VDhxiOHV8gqfRtiEImJMFpMssj1rWVQMUIEjK05IlUgvnpuVLaYifPH/J5UNBlQMUOERKF6o
      TKyQjLyUybRrKS3yJFAxQAUOsat9ESYQIztFFGEicVehahbHyQQ8EvXY7ljhsUdRk2SZhBgZ
      si5Av3ueV26yc4J6iVVWoAocYuZZmRxfVUaZHLYtnqsKhT5ORZhykH3frxigwiFIFFEV453F
      WZXGBARRlNK0cfvS48gLpkp7lQhUYQLkqBJRlPizdgyqVJFnKaL2UEcJxthExb2KASoAGBP/
      wcHBVDOLskW2sqAiflEniKII/X7/SJmAMTYRMVuJQBUAjAnDtu2pBPwy14s/gUlvsXhM9B7L
      1w6HQ2iaxhuHLxJE/BNBfgu9Q4VTC13XUavVcjPLslbntN1CdTytoBYxQdH6pmVBaaSESgSq
      AOCwHinlDc+i+MrVHlS7gnzPtPALlTI+L0jJrxigghKUKNNsNkuJH3nMomIMMahOtdKTY2xR
      zjESf+RxKxGowgRI/nYch/cooxVTFSZNyCPUMqmQtAOMRiPe+GNehGGIXq83JeJVDFBhCrQi
      m6YJ13Xh+z7PByaQeCIqtSpwc6Mi/DnNP0AYjUa8KFheYS9xTHFudGwwGPDS8iIqBqigBBEP
      lS2kyhNZ8rwqRFqVMEOQcwtkkMeW9BPTNHndU9VYSZIgjmPec4zyk7NCsSsGqJALEotUHWrK
      BsPJkBNu0s6hllGe5/H+yMBYtKHSMKI/gUCh1ml90aqUyAqFQEokKZLUp0AkriKh0mWQdg3t
      AGk+i7T8A1E8IlQ7QIVCIJ2AGnTX63VO+KRgZsX1qxxkaefRuXI+MkEMnCsTwXrv3r2pnaBi
      gAqlIBKcrutgjPFyLL1ej4scKkYoygQECpJTmUmzdAvVcdrBzp8/XzFAhcWBiMyyLCwtLaHb
      7U7I3SqoQqKzFGGxLCMdk89JuxYY6wHD4RDAWKmvGKDCwqFph8V3gyCA7/vc65rnERZXaxWR
      y9eJjJVmXhUxGo2wt7eHy5cvT1mnKiW4wsJBqzaZJXu9XmGFVRUsRyCRK2/3UO08g8EAg8EA
      y8vLvJIeUO0AFY4AtBvo+rjzfafTQRzHPBBN1d2mTMjDLJ5hKgO5ubmJq1evHirY1Q5Q4aih
      igMaDofcfi+2caUVXV7FxaSavEC7rL9FUYStrS1cvXoVQLUDVDgGyAosYwzNZpMX0qUcgLR8
      ZE3T4Lour2FKFp3RaKSsJiHea2dnZ0L8ot2JUDFAhWOFKOOTiOS6LpIkQRRFvFw7KcZUttF1
      3SlzqOu68DwPw+FQmVTf7/eh6zpWV1cnjlNoB1AxQIUTAhGyYRicIMnJRiu26HxTWXsoice2
      bV6uXRSz9vf3ceXKlUz9omKACo8FaHUnJhCRpfTSNe12GwcHB1y5fvDgAVZXV3OV6yohpsJj
      A7FqRF6ZRfk68kE4jsN3iyIZZWaRZssVKpwWmKaJMAzRarWmmosD07WK/j/thOcKH5UXlwAA
      AABJRU5ErkJggg==
    </thumbnail>
    <thumbnail height='192' name='Sales per ship mode' width='192'>
      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
      ZQ1GAAAAAElFTkSuQmCC
    </thumbnail>
    <thumbnail height='192' name='Top cities in sales' width='192'>
      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
      B4r/Bz2uTOF3RmiiAAAAAElFTkSuQmCC
    </thumbnail>
    <thumbnail height='192' name='Venta por categoría (quantity)' width='192'>
      iVBORw0KGgoAAAANSUhEUgAAAMAAAADACAYAAABS3GwHAAAACXBIWXMAAA7DAAAOwwHHb6hk
      AAAQpklEQVR4nO3deXCU93nA8e+7t6SVhG4QEkKISyBzm8sQY7v4qrEb23ET4qNx2/FkmEym
      nUk7SY0n7kwn+SMdUsf1TCdO3MZxbWpjzOED29z3LcQhISEkhIS0uqXV3rvv2z9k4TIQj5bu
      JX7PZ4ax2GG0z47f7/7ed/fdfTXDMAyEUJCmaZop2UMIkUwSgFCaBCCUZkn2AAChUIiRQxE5
      JBGJpKXSQbCu6+i6jsWSEl2KO5ymaVrstzTDwGD4mVzTtBtuA42RmzQNRtK7/u+ESLCYBxAJ
      +jh5cCetA2H09ELWPFDFzve24cvIYNykKpbOtNHcnM7MshB7TrtYuXweNnOspxBidGK+C2To
      OqFwGKvVzLGjx5hbOZHjDTorFk1GAzyeKzQ3WfF0NzBt2QrG2c2MPP/LLpBIpLi8D6CZTJh0
      L2ePnaRoahV2s5W+1lNs/vAjDp5tRo8EqD74Bd2WPLJtJmTnRyRTzFcAPeTj/Pk6iisqyXU6
      CPs9BLDg0Dwc3HeByntK6WqyY7hrSZ+6hPKCdFkBRFLE5SA45HfTWFtDfeNlsOezavkMak+d
      pMsdpnjGApwmM+40O1Nm3s3RE3UU58zDYZG3I0RyyMugQllyLpBQngQglCYBCKXdUTvbQV8n
      W/7zbU61dDFt6RoeX1TA1g8+4FKnn4WPruWpe2aCYdB8agdvf3QQc8F0nnvuabSrB3jzvZ2Y
      8+fw4x+vpbf6C97ZugdH6XxefPZpchzJfmQiXu6og+BwaIju7jCFBVY2vb+Fb61+GIvVTnqg
      lU1Hu3h2zQowdDa98xbLn3gOGvZyTC/EVHOBeX/5JMGj/03DxO/Qvfv3rP7+D8lLA5PJiknW
      yTuSpmnaHRUAGATd3ezee4jxMxdTVTEeb3czBw+ep3zJCmZMGAeGQf3h7bz76WGsRhDLggco
      Czp4+rv3EWjdw9b6PDq/+CO9NguZpQt5/rtrKHBaY/o4RWqIz8lwSRT2u9m3dz/Tlj5MeX46
      4d4mdp28wtL7V1OUZR/+RxpULHmUV5b9OU2HtnPOVoRec5meQJhwaxvOwrlo0yt54fvPUv/l
      FmqbOyioKk3uAxNxc0cF4HadYuPbH5Oz7whZ5QtZPWGIzz8/zcFdn1Cw4BF+eM84TgxMoCJ0
      hjc37cHInsJLLz1EwGhhw8s/w5I9nb/7aQ5t3Rls+OefY+SU8ddL8pP9sEQc3WG7QN/ACHJo
      +zYm3vckZU45A0nckccA38AwCEd0zBaznIAngDvwGOAbaRoWi3zwQNxo7ARQ/QvoPZ/sKW4t
      rQiW/WuypxC3YewEMNQKAxeTPcWthT3JnkDcJnmLRyhNAhBKkwCE0iQAoTQJQChNAhBKkwCE
      0iQAoTQJQChNAhBKkwCE0iQAoTQJQChNAhBKkwCE0iQAoTQJQChNAhBKkwCE0iQAoTQJQChN
      AhBKkwCE0mIfgKHT1XSWLZs3c+pSB7phcPXCUbZ/thvXYIBgsA+XywNEaKyvJxRJmW9mFAqK
      eQDhoJ/eoJ1HH3+cobY63NdqqR/M5t5FkzlTXUcgNEh3t4e2c8dwO4qQK6SKZIr5N8OZbWlM
      nz6V/vZmHDnj8Q2EKZ1WTGaug0KtG28kROO5s6RNLOH+2VlomkY4HAbAMIzrX5B706CGnrL7
      a4YBoWAw2WOI2xDzADR0XC31uLzpzJ01A0/TOUIhAwydsGbCbDJTUFyK19eHP2KQYdEwfXUN
      IsMwMAzjlt8OrWkp/J3OGnJt4zEq5v/Xgt4BamqvUFZRQUtLGyWFOXScvEDkmokhRx4OzURW
      bjFV+WmcPtPI0vlTsXwVgK7rmEym60HcKHUD0ABNLiQ2JsVhF8jB5NIJeL1esGhoznIWzIpw
      rT/EovLJOMxBJk0yk5mZz0ytk9S5OoFQUewDsKYzbfbcG25zjC8jZ/zXd5mZOfxTfmFRrO9e
      iKjIui2UJgEIpUkAQmkSgFCaBCCUJgEIpUkAQmkSgFCaBCCUJgEIpUkAQmkSgFCaBCCUJgEI
      pUkAQmkSgFCaBCCUJgEIpUkAQmkSgFCaBCCUJgEIpUkAQmkSgFCaBCCUJgEIpUkAQmkSgFCa
      BCCUJgEIpUkAQmkSgFCaBCCUJgEIpUkAQmkSgFCaBCCUJgEIpUkAQmkSgFBa7AMwDEL+IVo7
      ujEMA4jQ3XaFxsZGrnb2E4kE8HpDgMFAfz8RuVS8SKKYB6CH/NSer+HEmdrhG4xBqk/U0e92
      4/EF8fs7aGrqx+NqoOZyN7L9i2SyxPoXmmxpzFm4mMDxc8M3eN2Yi8qZOa0Em8NB0NdCwNvP
      qfMuFt57DxaT9tVKAYZhXP9zMwMt1sPGiAFIyWNTzAO4icmJ1V/Pvj0XMY0rZ9lddi5fOE3a
      5Gk4TMObdCQSub7h67qOrus3/RqrnroBYEAwGEz2FOI2jCqA7du3s3PnTjZs2BD1HfgCOtPm
      LiEvLcSBfbUEzCVULlpFtnGJmuZ+5pbnYLEMjzGy8Y/8/Qam1D1e1zSw2+3JHkPchpivAGH/
      EEf27qCtP0JLSxcrHrqbttNHONwXZtaiZWRZIoRybEyYsBj3hYsEwtk4LKm7cYs7W1QB1NXV
      8cYbb/Daa6/96V/ocLLioaduuK1o5WoW/J+/FxcP/7dy9uxo7l6ImIvqqTcQCHDt2jVCoRDV
      1dXxmkmIhLmtfY/BwUFeeumlWM8iRMKNahdo7ty5FBYWUlpayrp163A6naxfvz7eswkRd5px
      6xfdk+IbXwU6sA66jiV+qNHIKIEHNyd7ChElTdM0eflFKC2qANw9TRw+dAZ3IByveYRIqKhe
      BnVk5JIWucT7fzhKev5EFi65h6kTxqGl7Fu0QnyzqFYAQzfAYsYcCdAz4Gf3h5voDMpqIMau
      qFYAz2AHrn4T9z/1V5QUOOm63IzDLE//YuyKagWwWJzMmDOX0vx0mmtqSZ9STpbFHK/ZhIi7
      Ua8Ag11NfLFlK42eccyvLODE3ou8OGcWznhOJ0ScjToATTNjtdtxRGxYbRk89jdrKYrnZEIk
      wKh3gQY7uxlXPpU0r4uamjPs/XgvvfGcTIgEGPUKUFhRSXpBH8Xjp+J02hnocpMWz8mESIBR
      rwB6JEjjmaOcONeC3zfEiS8P0B/PyYRIgFGvAO6uJo4eOUlLwIm7K4+0ikry4zmZEAkw6gDy
      y+bxgx+VMBi0UZCbAWjypUJizIvuI5FhDzs2vkWHR8dkmsCLP3mevDgNJkQiRBVAf0cb+VWP
      8MKqqnjNI0RCRXcyXBoc3/URnU3HMZkKeOKFxxgXr8mESIDoToVIy8Lqu8bhw6c5fuocoXhN
      JUSCRLUCDHb3UDR9AVNzpmEb6sAar6mESJCoVoDM3PGUTJ7EUNthzrQOpu43tQkxSlGtABkF
      pSy4K4vKinJCWiYZ8ZpKiASJagXwDXZwdN9+jhw5zFtvbcQTr6mESJCoVoDM/CmseWYKhu7H
      +vo7eIDsOA0mRCJE9z7AtXN8+MEuhgBb4SwK4jSUEIky6gCMcIC+vgCllZU480qYN2cqve2d
      FEwolFMixJg1ym03wvEd7/LJoToC4RDXag/zb7/4Jbtqu+I7nRBxNsoVYIDLTRa+87ffo9Bu
      woj4eH/D71iyarY8+4sxbZTbr5NsZw9795/gamsrF04epEHLpEi2fjHGjXITtvHA02spCLay
      e+cuzrUGeP4Hz+CI72xCxN2oD4JtzgJWPfpkPGcRIuFkJ0YoTQIQSpMAhNIkAKE0CUAoTQIQ
      SpMAhNJiH4Bh4Ot3cbS6juHr7xl0NJ5hz/6j9AwFCYUG6enxAjpXm5sJ6SlzjT6hoJgHoIf8
      NLV24PW4AQj1NXG+HWZMyuR0TT2BYB8dHUN01p+iM5KBRT5XKZIoui/GGgWTLY1ZVbPxHD8H
      wGCnl4kzJjEhP432lnN49TTaLp+nIzuLb63IR9M0IpEI8PVlUm/5ew0jZffXDAMiYblU1FgU
      /21KG95AMAwMQEPDarOjh3xEvtr70b66yp6madd/vsWvSV0pPZz4JjFfAQw9TH9vJwMD/bhc
      PWQVOLl2thF7kZkBawZpJjOFJVMpzurk9PmrLK4qxWwa7nDk2f+WF8pO4UtRavyJmUXKi/0x
      QDhMW/NlHA4Lly61EHKWMKfMSZfbxIK507DbcikuziKndDZluRBJnQvVCwXF/GnLbHNQtWjF
      jTeWzaSgbOQvmeTkDP9UXDIp1ncvRFRS9bhSiISQAITSJAChNAlAKE0CEEqTAITSJIAxwNBD
      nPzsbV5++V841tTLyFsnRtjHvk2/5dVf/Re9QYP6I1t5df16th6qJxz2cWDz73jl1V9x5upA
      ch9ACpMAxgBvTzXH28v4+fp11O/aRI9/+Pa2i4dosc/jR09NYeMHB2gbnMQ/vvIzbC27OXjs
      JO3W2fzT369l347tyX0AKUwCGANsznJygqf57R/ex1FcRaZ9+Pawu4fyu+YzrmQRudY2Vv7Z
      XFwNNUSyZzGrooRQ5wl+/+42istnJfcBpDAJYAwIuzsI5VZy38olBPpa8QSHz5kyNBPhYBDD
      iKDpFhqP7eCiO4v7HliOPtRDetEs7l2+kK72q0l+BKlLzuAaA4ywj96uXjo6zAwMDRL2DnBl
      wCCrqJyLn3/AUF6YSP5ytn66g/mrHJw+EyTf7qHf1Y3L7qd3yJvsh5CyZAUYA9LGL+CJVVPw
      +Q0efuIZAs2nqb7sInfSHFYvm4GtcB7fXjWTxUunE/B68Hh9jK+4mxWLJhHQHTz79JpkP4SU
      pRlG6pyOOfKBmFueWnxgHXQdS/xQo5FRAg9uTtjd9fW0Y8soJMNhTth93ok0TdNkF2gMysmb
      kOwR7hgSQJK4ej0cr7uW7DFuKS8rjWVVJckeIyEkgCRp7x3io/31yR7jlqaX5ioTgBwEiyQw
      6GutY8uHm6lp7mbkIDTs7ePglx/z5aEa/BGDwY4Gtm3exGcHqvGFdAba6/lk6zaqL7tiNokE
      IBLO39vCxq17KZg4ERtffwvI2cOf44pkQV89e09eotPVR35xKeHGAxyoreWLT4/jLMincfen
      NLhv/e0h0ZIARMJ1dzaSkTOFzPR08nKzGFkCAn4fJqud7MxsrrZcomLOHPKsJvxaJoVZFrwB
      A7sjndx8P3X1/TGZRQIQCWcEvXS52jhbfYK3/mfb9W8HnL/yETI8V2i40o4/GAYCXD5fR8ic
      hsk2nkceruJqfR1trj5CyAogxqisgqkUTZzA40+swWkMoUcihCM6htnO4nsfYkpOiJKSShoa
      2ln+7SdZOSXC0boOrNmlPLh6BSGfg3kz8mIyiwQgEi57/DSWTzb49b+/yd33/wXdx7aw8VgT
      vr4W/vjGb6jX7uKxleXYPW28vuGXbK7P5KnlFbSd3cVv/mMjMx/5HlOcsfmeKHknOBZu453g
      6ksuXt90Ik4D/f9ML83lH9YuS9j9XW64QFHpjIS/sy3vBIuUMGVa8k7XlgBETOj9fURcsXt9
      PtYsZZPRHDdf2VoCEDEROn8O3/vvJXuMPynzJz/FPPHmd7flIFgoTQIQSpMAhNIkAKE0CUAo
      TQIQSpMAhNIkAKE0CUAoTQIQSpMAhNIkAKE0CUAoTQIQSkvA6dA67r4+fKEIFoeTcU4r4bAJ
      m82Ez+vDnpaGSYvNx9uEiFb8VwDDzaEv93Ohro6m9l58vms0NPQS6G3myNlm9JT5QKZQ0f8C
      z6EExx3t4IUAAAAASUVORK5CYII=
    </thumbnail>
    <thumbnail height='192' name='Ventas por categoría (profits)' width='192'>
      iVBORw0KGgoAAAANSUhEUgAAAMAAAADACAYAAABS3GwHAAAACXBIWXMAAA7DAAAOwwHHb6hk
      AAAZ4ElEQVR4nO3deXQU55nv8W9V9aJuqbXvSEISEkiAFlYDxtis3uINvOF1HI8dJ9exk3FO
      bubO5ORMMneSc3NPJs5cZ2xnJtixYyc23mKDscNudolVIISE0IL2fWu11EvV/UMgwEsMCGiJ
      ej7n6Bz129Wlt9X163qruut9FMMwDIQwIUVRFDXYnRAimCQAwtQkAMLUJADC1CQAwtQkAMLU
      JADC1CQAwtQkAMLULMHugDhPhoHP001dbS0dbj+hMSlkpMVjl7ewEZEAjBG67qHoo1fZcMxD
      ZHQErphmnHE3kxb6+SX9tJw4TE1nOFMLM3Fowejt2CEBGCP8tZ/x3jYPt//gKeamhONzd4Pt
      y5YM0Fyxj51VKUzIkwB8HQnAGNFQsoOe7KXMTI3EooDFFQVGJzve+AN/2lKCO+Bk8q0PsjKn
      lZdefpfKATsH9n/AfT/4FZO6PuXN1euo7NSYeN3tPLA4hY2vvMzWqj6c4VaUzHv59yemcejT
      t3j9k930BCIpWLac+2+cyd4//hP7KSS0rhjH7Fvp2lvE/Ie/y/TYPj5441Xssx/l1sKEMXsw
      KQEYI/w+H5ojBKtyVmNAI3ZCPgvtyXTXHebj3cWsvOEhvvVkC5uqUnjom8sI6yrlpTe3oKfM
      ZNGkPrYVbWJNaTMV6Y/yy+fm4d3xAv/zkI+eqr2sPdzHfT/4v+SqFfz2d+s5kJuJv7eNym4f
      Tz/+YyZHe/lLTRFHK2rIVLtp7ghlSXr8mN34Qc4CjRkxickMVh6n2XemzdtSydqNRfSqdiLC
      w7FaVT7/3fZBTz89fp2Y6EiikrK47c7bCVdUMqcWEGXXUDUNFHD3dRMSHU9KtIuwmARSbTba
      PQNgi2DyrDlMTonC4oxmZn4G9bUnqCvZgy/zBsZHKIxlEoAxwlV4F9doW3j/ox1UNzRQtr+I
      6qZ2aj1Wpk7NJyPBhQUdULE7LPR21lHf0IAeEs04p5NuLZqCaflkJUWRlR1N+e5NVDbUU9vQ
      hj9gEBWfgt5eS3FpORWHSzimQ3qUCzQNq92GRQEUKyn500hoKOHdbR3MXpRDyNje/iUAY4XF
      mcwDTz9DQtNW/uuFF9lc6Scmdxr3FoTylz/+iQMdYcwoyMFhs5M2dQEFie2sXrWK0sB47rzv
      DpKat/P//uMlPthZTtwNDzNHO8QrL73K+gO12EOcOFMLeeQbs6ne9Cavr69k3u13k58SRVJW
      AdkJZ041qWGpFKR00hF/HYWxY/8IW5ErwszHXbmVVz7cg9vrp9/tZ8aKJ7ktP/5rH+d3d7Br
      3R/55FA/Cx/6FouyI69Aby8fRVEUCYAJBfo7qG1oY9BvYA2NYlxSLCGWrx8M6H4v7U0n6SGC
      1KRobNrYHkBIAISpmeKa4EAggK7rwe6GGKWu+gDoui4BEF/pqg+AEH+LBECYmgRAmJoEQJia
      BECYmgRAmJoEQJiaBECYmgRAmJoEQJiaBECYmgRAmJoEQJiaaWeFMAwdb38vXZ1d2GPHExly
      9p0+upoa6bbGMD42FBig+UQ93f4AAI6YcaTGfGFGKtAHaKxrQotKIt5lx+/tobG6CQ+AohKd
      lE5smEJP00maerxDjwmNJSs5ClUZ4xfXjlEmDYBOd2MZO7bsoHzPx1gefIenZ56+z8DTUMzv
      f/EzPo59jr/+ZDEM7Odfn/oV7hQXABPveI4f3THlc+s06Dn2IT/88Wuk3fML/vd9k2k78Rf+
      15PvYM2KQrOHcuO3fsbdhW7+/JN/ZKPPgQMgfwUvffdmVE0CEAwmDQAoqp3kKQuYGdfGW2e1
      G95Odu8qI2nudYyvsQ41NjZgu/tH/MeTM75yfXpfJe+ta+KGexbTc7qtq4/C537Nc3eMP7Pg
      QBV1Ccv575/eg/OSPytxoUx6DKASkTiBwvyJhNnPzGxgGAYtlUeo643g2lnZnL5M1tPcgDMm
      lLa2djq7+/AFzr3AxtA9lG4uRsmbz+yUM5v1YEsDFpedtvZ2unsHCBhARyuDsS7629ro6Oxh
      wBdALkoNHtPuAb5UoJN9O/aSsvjbpNk+Hm722uM4+c4/8/gfDSJjs1j0d0/x6LyMoTsNg57a
      EkrcIcy/Ng/f0b3Dj/P4NTY+/y02Wu2kZMzm3u8+xfWaC6XsRR5/4mVCw5PIu/khvnfvHBxy
      DBAUEoCz9Bx8k1+s+ozCsnrWuI+z60g0qya6WHHX/bzyxv0YAR+d1Wv5198V0zsvAxdDB9P7
      PnmFN9b2UVS8nZ6GEk70nCAn9zssXf4TPlgOut9DZfEfeOOdEq75/lx+/tu5YOj0tx3kNz/b
      SPXyWeTa5KUIBpP+1w0MY2jIM/Sjo+sQMv5mfv5/pg0t0raV40QzpyCKwx+8AznzmTkhnL66
      k/SGTyDEMIamIVRU8pY9yT/m9QNQW2JhZ8tsJifrbHjlDVJuuZNJkX46q6vxxiygcfdaSgIp
      LJ2Vy2BnEzWqnUh59w8akwbAS9n63/NvP32DagA+5K3Jt/DCj59m3rzMoUXaAlzbG05uZjr+
      KA8v/vwH/GRPI7Ez7uLHP7oerbeC3z2/hrTlK7lpSiGxp0ZEKeHtqM15jI9NI3RONL987h6K
      6gPk3fYs//JMLuHeSMpX/YYVP96FJWUu3/7hsyRYxv4Ma2PVVT8vkM/nQ1EULJZLmXWd1oo9
      bD7Sw4KlS0gINem5hDHOFBNjXZ4AGPT3duHxakTFhJv1VNqYJwEQpmaKmeGE+FtM+7borzrB
      4PbPgt0NAJwrH0LR5EA4GEwbAL2jHV/xnmB3Y8h9D4AEIChkCCRMTQIgTE0CIExNAiBMTQIg
      TE0CIEwtKKdB/d4+6spLOFy8C/+MJ7gzL2z4PsPfy+GtH/LRASdP/cOdRAU8nDywmfc2HyYQ
      No75S5YxPTOMyopyNC2VzMxwWo/v53CblZnT8wm3yzcrxfkLyh7AN9BLrzeMOTNz0c4+/23o
      dDVU0WwJIzkkFAMYaCljV10YD3znWR5blkll2Qk8Pv1U6SMDv7uFsqpOxmVm45KNX1ygoATA
      EZ5E3vQ8YkOtnP1V+IDPQ21VHYmZE4l0DAWjp7mf+Jw0okOsRKZlk8Qg/YHAqUf4qN1fBCmF
      ZMY7kc1fXKhR9EmwTk/NPlrDCliQbFB1qs3rtRIWYwUU0OyEefroNHToqmbtpx+hZ8zlsWti
      sZ7a+gOBAD6fb3itpy968Xq95/y1wOC5t4Op3+NBOavP4soZPQHoP8mGDRW4ptk5UNxJfVsj
      ZaW1JKg++vp9gAGBQfocYaQqKh2R6dyyci563RaKS5uYn59EiAqapp0zrPqqb4N67Tb6r/BT
      /CpOhwPFag12N0xp9JwF0m2k5Wdj63fjdnvw+b0MDAwSFu+kpayWjgEfXbUVNGLHObyBW8mc
      fR0hrUeorO9GiqGKCxWUPUBXUxEf/GETzd4+evQiShMzuPnmm5g977pTSzTgqa9g2vRJRAU8
      zGndzBu/fR7C07h2yVIcVhVVVVFVBYszgbxJrew8XkZC9AxiQ0fPTk2Mfqa9IMa7t4j+114J
      Tqc+J+KXv5YhUBDIBTHC9CQAwtQkAMLUJADC1CQAwtQkAMLUJADC1CQAwtQkAMLUJADC1CQA
      wtQkAMLUJADC1CQAwtQkAMLUJADC1CQAwtTk+sExRvf3Ur3vMz7dVc7Me77HzCQwAl5OHtrA
      n99ew/G+MBYs/3tWLMjCOtjM2t//lo8PNmFNn88Pv/8Q4xyfmzzGW8eb//4ivXOf5MkFaXi7
      jrHqVy9woNVO4V2P8cSyyagE6Gs+xtr3N+PLWsSKxTmEBOfpX3KyBxhTBji66SPWHTPIje6m
      unuotbetgk2bK5h255M888iNdO9/ix0nPJS8+xJ1acv49vee5f4Jlfzq7bJz1mboXir/upoi
      j4eaig6gi7+++Dr2hY/xzDP3Er5jFe9X+qF+Ly+v3oWWMR6lsZGraQIX2QOMKSFMWbqSKcCJ
      daW0nmp1xefw8LNTUFUI9LfQVFuDzdDJu/+fKNQ0IECvI4/PNp99+bdOb9Ue1tSN58EloXx4
      DKCF8u40VszOJ9UJmY+d4KdrjnDHd2bzD/9jNi0n97OjvetKP+nLSgJwFVAUDUWBQF81697b
      gZI6hfy0UDQNDL+H40Vb2V/lYfFN2cOP0T1dHDxUSfashcRrm061JjF/Uju//uk/owExSQHa
      65y4KSA8KM/s8pMAXAUMw2Cw8SB/WneY9MJrmJGXhcs6dGxQuu1d9tQnMH/pHWTFnXm52xoO
      UtmVyE3LkgiUn55rNYxp9/49oceq6PVCiL+Yl90ROIL43C43CcBVwN/TwIbPDjJp4XLmZLiG
      50jtKHmLjS3TeWLlZEI+d7RXs/U9Vr1ykFWv/BtedzONvZOIjv8XHrtxItn5M1F9nRS/8gZp
      C1ZyNU/YIgEYU/op3/Ip67aXUlv+GQ1RPspnz+fh6YNse3sdyvF6NilAVBrLbllC69sfsFep
      pff4+wAkTruT+xfF4NFCmPHYb9jy2NBamw69yotFBXzvjkIai97l5Y3l+AZ7aPdO4/vfjMTT
      cIjVH/6VshNV1NQMsL/qGLf+3SPMTnYG719xiUgAxhQLEUnjmVJgZUJBwVBTXCKRiQ7uePwh
      2k/PDRkaQ2yYg8R7n0av6xt+dERKJL6avajh41ASC4bbo9IX80DU0Cg/cvwUZk5z4tVcZEwt
      IMUGXmc02Tl5RKfkMG/oDxDnvDo2HZkZbhS4cjPDDVJWdIDwmFSSM5OvwN8b3RRFUa6OGIvz
      ZCdn1jXB7sSoIh+ECVOTPcBY43ODfxRUNgiJBkX7+uVGOQnAWFPxGhz772D3Am5aA474YPdi
      xIISAMMI0Nd2kmNHjqJlLWRaytBXqwIDXRzevZ2K5n6s0ZnccP0MIqwGnsZS1u84QiA8jVmz
      CkmO1GhpbkZVo4iLc+Jpr6e6w8f49HScVqkUJs5fUI4B3J017C0uJ4RearvP1HWp3rOBppDx
      FM6cQbrlBBv2NWG4a9mwrZKkydMYb21h18ETeP1+Ojvb6OoaRPd5OF5eQqc3BNvY3yOLKywo
      e4Cw6ExuuDkTqjZQPXDmHTtj/l1MUFVAxx3WTkOZn46qGiwT85iek446IZSGdZW4famnHqHT
      Xr2fhoF05s9JwiJv/uICjapjAFVVMQKDtFRXUNM8yMS8RAaO1xOTYAMUsIWToA/ShQ79rRwo
      OYrP5uK62+cRemrj13WdwHAZVYZ/P7sNIOD3X6mn9bW8Xi/o51fhTAv4R8WL5vX6MNTBYHdj
      xEbD/3KYofuoO7aPqq5QsibPIDlSo0EZ+rLXMIuGhgJWB/HJqfS1VdHlMUg9lQBFUVDVMyM7
      Xde/0AZgqKPnDLCmaaCd3/hNHSVFfVRNPe8+j2ajKgA9tUWU96Zw7ewU7NrQCx0W4aexthvv
      uGTU3npqdDvZiorHGkZyehrJhdFs2b6V6EXXkuyyoijKOWVSTwfg858E66MsAIrlPF+KUdJv
      i6bB+fZ5FAvKM/D0nORwcQW9HRVU+fxs7EogNyeTxt0HaQwfYMfW46CoRCTlkpeRTWzFLtZv
      aED1dBOaMgOn9cwG7ozJJi+7k6MlFUTMnESYHAmLCxCUAKialVCXC1wzmANgd2C1aCRPv5ZA
      16lxpaLgDLGg2KOZde1MjlY2gCOL9PRULJpCcvJ4FMWJolpIypiK0jWApshRsLgwQQmAPTSR
      ybMSv3iHK58vaYWIZAqmn/vlrfDwqOHfLY4IUhwRl7aTwhRGx4BSiCCRAAhTkwAIU5MACFOT
      AAhTkwAIU5MACFOTAAhTkwAIU5MACFOTAAhTkwAIU5MACFOTAAhTkwAIU5MACFOTAAhTkwAI
      U5MACFOTAAhTkwAIU5MACFOTAAhTkwAIU5MACFOTAAhTkwAIU5MACFOTAAhTkwAIUwtamVRP
      dxt1NbWo4wrIirUBoAcGqCsrobrdS0TqJPIzYlEwGOyoZf+RGnRnHBMnTSAmTKWrswtFCSMy
      0s5gTxvNvQHiExIIkUp54gIEZQ/g6a7nQPFBuuqPcrjJN9zuri1m59F2FNXL8R2bqOgGBprY
      ue0gvWj0N5ay63AtvoCP5uY6Wlv7MfxeasoPUN06gNTHEBcqKHuAEFcihXNjsTbtoMV7OoNe
      ThysY+LCFRREqfTFfsq60mbioyvpjZ/IjbMmovZX89GmRvp9p8toGPS2lFHVFsWsRanYNEmA
      uDBBKpFkwxlqA/XsDdZNj55ATowVFXBmpuNY00q31UpCsguLqqK64klRqukyAjDYTVVtK2X9
      veTcdCfRtqEgGYZxTklU/VT50XMqTfLFsqnB5L+Akq2qHmA0VEHz+/0YPt/XLzjKjbIyfwrn
      vIcbBgZ8aRt6gIF+Nx6/H8U4+27jCxv76fa/dTuYDMOA8+3PKOn2V/2fx5pRFAAnTqOZ5l6d
      mDAFX0MD7thcwh2dlLYNYKQY6AOdNGJngqLS7Igmd3o+0VoFO7cXE710FlG2oXrAZ9cE9vl8
      X1omFYsF7xV+hl/FarWiWK3nt/Aoqc1rtVrBZgt2N0YsKAHwetqpq2pmoKmJVu8xSq1RJCcl
      k1UQz9r1W/BmOKk70kLerYuJtutoa/eykz609ir0mFycwxuzSnT6DHJ7d3LoQCXXTM/EYZEz
      u+L8BWVr8Q12U19ZSaU7nFjfSSprG+kd8OFKv4ZZaQoNDV0kzl5CbiTgGMf1101moLkOtzOd
      ufkZ2CxWYmMTiY52oKhW0jJzSYzS8AfG/i5ZXFlB2QOERmZy3W2ZX3pf1owbyDqnRSEkPpsl
      N2ef0xobe6agqtUVT47r0vdTXP1kvCBMTQIgTE0CIExNAiBMTQIgTE0CIExNAiBMTQIgTO2i
      AlBfX88LL7xAbW3tpe6PEFfURQWgqamJVatWUVdXd6n7I8QVJUMgYWojDkBHRwevvfYaNTU1
      l6I/QlxRIw5AS0sLzz//POXl5ZeiP0JcUZd0COTz+aipqaGvr+9SrlaIy+aSBqC5uZkVK1aw
      fv36S7laIS4bOQgWpnZRF8RMmTKF1atXk5CQgKqqrF69mri4OGw2G6tXryYmJuZS91OIy+Ki
      AhASEkJ6evrw7a/6XYjRToZAwtRGfE3w8NwwioJyes6e07dHunIhLrMR7wE66/fyyXvF9AAY
      g1Ts3szW4irG/pxhwgxGsAfwUFdazsHD29m1C/REH5H6AGV79mPJjeWaS9dHIS6bEQSgn9qD
      RezcV0p1HRib+nAAIXHZLMtPZ+zPGSbMYAQBCGfqkuUkTZ/A7q1eZt01gwiGJr51hDpl/C/G
      hBEEoJM9q3cQcds4DPd2Pnz96Kn2CPKXLGH+1FTZC4hRbwQBCGPi3KlYwmwo+fkkDLc7SIkO
      k/OrYky4yAB4OL6rhL6EDNK9bXhJYNaiKcjshGKsucgABOisPsS20kYKktrYtRVIUokCwEpU
      UhJxkaGjopCDEH/LRQbAycR5M6nasJMdnx2krBL6323GAUAEM275BgunSQDE6HeRAVCJSC3g
      zvuyOFmZw8ESgynX5xAGKIqF0MhIzrPcwzkMw0APBIY+TVZUNFVFUQwM3SCg64CCqqkoChi6
      gaIoQ78bBobBqdty/kmcv4s/CFZUbE4XmZPnE+4q40DxNloGQ8jOn87kWOtFHQR3nyxm3bo9
      NLm9OGKzWfyNZWS5fJwo2sTa3eXoIfHMWriUa7IjqCgvQ9PSyJoQTtOxIo50OLlmVj4uOfUk
      LsCIvwvU31HJmj+/Rbsri7iQDj5ZXUH38kdZNDnuAodAg5zYc4yMO77JvbEW2is3svlAM+Mm
      trC/PZqHnvouWssBPj5UTX761OFH+dxNHKvtJ316IWE2efcXF2bEZyv7OusYIJ/7Hn+Ehx99
      mCU5sbSeaLiI+lsakVE2eroHMdDx9vmIiIugp3WQhIkpRNgthI/LIln14jZOV3j0UV28By1j
      OumxDvnwTVywEe8BbM5IwqNbcXe66bN78GkWwmJdF7FincjJ1xJavJpfv+8madYCluarDFap
      WK2ncqqoWNx99OgGdFWz9tO1WPMWck/Bmb8WCATwnVW+83Q1Q6/33EgGBkdLiTzo93hQzrPk
      qNXnu6jjq0vN4/FgGP3B7saIjTgAUSmzWPnNqbQ1NNHstjLttgdwXVShum72bSgm/fZH+P6t
      FtwtO/low3GWzdGoP9pAb3IiWvsJToZEMVWzUB+Zzi0rF5CW0Mv2bbtJnTmXrPhQNE1DO6uS
      4ldVifTabYyWl8/pcJx/lcjzXe4yczgc4HAGuxsjNuIAdDeXcuSwQd7iKcSNaE1RTCkMZ/N7
      b7DZp2N1uJg870aikiC3egurX1sFVhcTZ1+Pw3pmA7e5Usib1Epx6VFiXYVEOUZR5Vcx6o14
      a1F0narjO3BMGk9e0tA4XFHVoVOSF9iVxNxruS21EG/AQLWEEOZyoioGOXOXkJznAc2GM9SJ
      pipMmDAZ0FAUlZj0Aq5PDmC3yycP4sKMOABaiAVr50le/91/Mn1yOjY1jKyZM8jLiL/glSua
      jbCIz5/HVFCtDiKjHOe0Wq1nllM1K07H6BgaiLHlEowXNKIz805dAGMMfyglFXvFWHCRATDQ
      fb2Ufvo2r205hjUqi5tX3Mmc7Dg0+SRWjCEX+TmAn+qt7/Hq7h5uuuduFmZ7eXPVe9T1jp5T
      i0Kcj4vcA/TTcNLPjEU3c93MHCyF8dTtXUO918t47Je2h0JcRhc9BAoEfHTUlrN/nxuVNlo7
      GjEOHcAeEUXc+PGMi3XJt0HFqHeRAbASk+ai7ZOtvFUyNOY3wnSaPv4LR4hh3t33kCABEGPA
      RQYglKlLH2Tq0gcvbW+EuMLk0l1hahIAYWoSAGFqEgBhahIAYWr/H4/7Fy357duOAAAAAElF
      TkSuQmCC
    </thumbnail>
  </thumbnails>
</workbook>
